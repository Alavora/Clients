var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddproductComponent.html",[0,0.122,1,0.682]],["body/components/AddproductComponent.html",[0,0.229,1,1.134,2,1.309,3,0.209,4,0.178,5,0.954,6,1.021,7,1.021,8,1.021,9,0.178,10,2.451,11,0.374,12,3.828,13,2.138,14,1.722,15,3.828,16,1.021,17,1.814,18,1.369,19,3.364,20,1.223,21,4.371,22,1.223,23,3.828,24,0.273,25,0.517,26,1.741,27,1.972,28,2.967,29,1.141,30,5.092,31,4.133,32,1.134,33,2.451,34,3.885,35,2.754,36,1.277,37,3.303,38,0.776,39,0.027,40,0.534,41,0.377,42,0.776,43,4.371,44,2.439,45,3.303,46,3.828,47,2.967,48,1.133,49,1.403,50,3.303,51,3.364,52,3.707,53,1.965,54,3.364,55,2.739,56,1.401,57,1.996,58,3.364,59,3.303,60,3.303,61,0.42,62,1.558,63,1.254,64,0.414,65,2.451,66,1.346,67,0.677,68,1.558,69,0.287,70,2.789,71,2.198,72,1.721,73,1.721,74,2.789,75,0.493,76,2.789,77,0.622,78,0.857,79,2.198,80,2.789,81,2.789,82,2.739,83,3.017,84,1.721,85,4.533,86,4.533,87,3.364,88,3.364,89,3.017,90,3.828,91,0.832,92,1.401,93,1.309,94,1.021,95,1.608,96,1.021,97,1.021,98,0.776,99,1.021,100,0.723,101,1.021,102,0.723,103,1.401,104,0.723,105,1.021,106,0.723,107,1.021,108,0.723,109,1.021,110,0.723,111,1.021,112,0.723,113,0.672,114,1.021,115,0.723,116,1.021,117,0.723,118,1.021,119,0.776,120,1.021,121,1.021,122,0.723,123,0.535,124,1.021,125,1.021,126,0.013,127,0.017,128,0.013]],["title/components/AppComponent.html",[0,0.122,98,0.787]],["body/components/AppComponent.html",[0,0.229,1,0.849,2,1.526,3,0.264,4,0.225,5,1.676,6,1.288,7,1.288,8,1.288,9,0.34,11,0.344,13,2.493,16,1.288,17,1.863,18,1.413,20,1.426,22,1.426,24,0.344,25,0.603,36,0.912,39,0.027,40,0.546,41,0.303,61,0.387,64,0.523,69,0.264,75,0.622,77,0.725,91,1.049,92,1.634,93,1.526,94,1.288,95,1.763,96,1.288,97,1.288,98,1.434,99,1.288,100,0.912,101,1.288,102,0.912,103,1.634,104,0.912,105,1.288,106,0.912,107,1.288,108,0.912,109,1.288,110,0.912,111,1.288,112,0.912,113,0.849,114,1.288,115,0.912,116,1.288,117,0.912,118,1.288,119,0.979,120,1.288,121,1.288,122,0.912,123,0.675,124,1.288,125,1.288,126,0.016,127,0.02,128,0.016,129,3.519,130,1.462,131,2.695,132,5.805,133,5.286,134,3.486,135,1.288,136,1.203,137,4.464,138,4.168]],["title/modules/AppModule.html",[139,1.854,140,2.229]],["body/modules/AppModule.html",[1,1.211,3,0.2,4,0.171,9,0.171,18,0.643,39,0.027,61,0.647,64,0.551,66,1.287,69,0.2,77,0.433,89,2.925,91,0.795,98,1.532,102,1.302,106,1.302,108,1.302,112,1.362,115,1.302,119,1.397,122,1.302,126,0.012,127,0.017,128,0.012,139,1.748,140,4.602,141,1.748,142,1.909,143,3.751,144,3.751,145,3.364,146,2.102,147,2.667,148,2.667,149,2.667,150,2.667,151,2.667,152,3.594,153,3.594,154,3.032,155,3.261,156,2.344,157,1.909,158,3.159,159,4.396,160,3.261,161,3.712,162,3.261,163,4.396,164,3.712,165,2.344,166,3.159,167,3.159,168,3.159,169,2.102,170,3.159,171,3.159,172,4.396,173,3.159,174,2.667,175,4.396,176,2.344,177,4.396,178,3.159,179,3.712,180,2.667,181,4.396,182,3.159,183,3.712,184,2.667,185,3.712,186,2.667,187,3.159,188,2.667,189,3.712,190,2.667,191,3.712,192,2.667,193,4.396,194,3.159,195,4.396,196,3.159,197,4.396,198,3.159,199,3.712,200,3.712,201,1.49,202,4.396,203,2.667,204,2.667,205,2.667,206,3.159,207,2.344,208,3.159,209,4.396,210,3.159,211,2.102,212,4.396,213,3.159,214,3.159,215,4.396,216,4.396,217,1.748,218,4.396,219,2.667,220,1.909,221,2.667,222,4.396,223,3.159,224,1.909,225,2.344,226,2.344,227,3.159,228,2.667,229,3.159,230,4.396,231,3.159,232,3.159,233,3.159,234,1.287]],["title/modules/AppRoutingModule.html",[139,1.854,152,2.025]],["body/modules/AppRoutingModule.html",[0,0.245,3,0.255,4,0.217,9,0.217,39,0.027,61,0.631,64,0.505,69,0.255,77,0.552,100,1.131,104,1.131,106,1.131,108,1.131,110,1.131,113,1.163,115,1.131,117,1.25,122,1.131,123,0.652,126,0.015,127,0.02,128,0.015,141,2.227,145,2.678,146,2.678,152,3.124,160,2.986,162,3.836,174,3.399,188,3.399,205,3.399,228,3.399,235,4.025,236,4.025,237,4.025,238,4.025,239,4.025,240,5.17,241,3.335,242,1.332,243,4.483,244,4.025,245,3.8,246,4.025,247,4.025,248,4.025,249,4.025,250,4.025,251,4.025,252,4.025,253,1.528,254,4.483,255,4.998,256,2.227,257,1.762,258,4.025,259,2.432,260,4.025,261,4.025,262,2.227,263,2.432,264,4.025,265,4.025]],["title/interfaces/Basket.html",[67,0.5,84,1.272]],["body/interfaces/Basket.html",[3,0.257,4,0.22,9,0.22,11,0.336,24,0.336,25,0.594,39,0.027,40,0.538,41,0.488,47,3.018,49,1.708,61,0.378,67,0.857,69,0.257,72,2.5,73,2.525,75,1.026,84,2.5,126,0.016,127,0.02,128,0.016,135,1.87,266,1.546,267,3.438,268,5.208,269,2.072,270,5.111,271,5.111,272,3.541,273,3.541,274,5.111,275,5.111,276,6.052,277,3.866,278,5.208,279,5.208,280,3.465,281,3.465,282,3.864]],["title/interfaces/Baskets.html",[67,0.5,257,1.467]],["body/interfaces/Baskets.html",[3,0.294,4,0.251,9,0.251,11,0.384,24,0.384,25,0.646,39,0.027,41,0.473,49,1.665,61,0.431,67,0.91,69,0.294,75,0.987,84,2.469,126,0.018,127,0.022,128,0.018,211,3.764,257,2.778,266,1.765,273,3.66,283,3.926,284,6.613,285,4.222,286,3.66,287,5.584,288,5.657]],["title/components/BasketsComponent.html",[0,0.122,100,0.733]],["body/components/BasketsComponent.html",[0,0.193,1,0.523,2,1.095,3,0.163,4,0.139,5,1.301,6,0.795,7,0.795,8,0.795,9,0.139,11,0.411,13,1.789,14,1.172,16,0.795,17,1.75,18,1.336,20,1.023,22,1.023,24,0.212,25,0.433,26,1.531,27,1.392,29,0.955,32,1.013,36,1.357,38,1.058,39,0.027,40,0.548,41,0.438,42,1.058,44,2.178,48,1.256,49,1.483,53,0.976,56,1.537,57,2.292,61,0.515,63,1.711,64,0.322,69,0.163,77,0.52,78,0.94,84,1.888,91,0.647,92,1.172,93,1.095,94,0.795,95,1.436,96,0.795,97,0.795,98,0.604,99,0.795,100,1.088,101,0.795,102,0.563,103,1.172,104,0.563,105,0.795,106,0.563,107,0.795,108,0.563,109,0.795,110,0.563,111,0.795,112,0.563,113,0.523,114,0.795,115,0.563,116,0.795,117,0.563,118,0.795,119,0.604,120,0.795,121,0.795,122,0.563,123,0.416,124,0.795,125,0.795,126,0.01,127,0.015,128,0.01,130,1.134,135,1.392,136,1.301,211,2.523,242,0.851,254,3.309,257,2.633,269,1.821,272,3.26,282,2.814,285,3.529,287,3.202,289,2.171,290,1.66,291,4.506,292,3.792,293,3.343,294,2.998,295,2.998,296,2.935,297,3.634,298,3.202,299,3.69,300,2.346,301,3.792,302,1.711,303,2.026,304,2.236,305,3.792,306,2.493,307,3.202,308,1.44,309,1.789,310,2.099,311,3.792,312,2.571,313,1.933,314,2.026,315,3.792,316,2.571,317,2.292,318,1.789,319,2.523,320,4.2,321,2.571,322,2.099,323,3.792,324,2.571,325,3.792,326,1.933,327,3.792,328,3.792,329,3.792,330,3.202,331,2.571,332,3.792,333,2.571,334,2.297,335,3.005,336,3.792,337,3.805,338,3.309,339,2.814,340,2.814,341,2.814,342,2.814,343,2.814,344,2.571,345,2.099,346,2.998,347,2.523,348,2.571,349,1.789,350,4.506,351,3.792,352,2.571,353,2.099,354,2.171,355,1.711,356,1.554,357,1.711,358,1.554,359,1.126,360,1.311,361,1.095,362,1.908,363,4.506,364,1.126,365,2.171,366,2.571,367,2.571,368,2.171,369,2.171,370,2.523,371,1.126,372,2.571,373,1.711,374,1.711,375,2.571,376,2.171,377,3.792,378,3.792,379,3.792,380,2.571,381,1.973,382,2.322,383,1.933,384,1.973,385,1.908,386,2.171,387,1.213,388,1.311]],["title/components/DetailsComponent.html",[0,0.122,104,0.733]],["body/components/DetailsComponent.html",[0,0.182,1,0.456,2,0.988,3,0.142,4,0.121,5,0.647,6,0.693,7,0.693,8,0.693,9,0.121,11,0.343,14,1.057,16,0.693,17,1.711,18,1.291,20,0.923,22,0.923,24,0.185,25,0.39,26,0.988,27,1.629,29,0.861,32,0.945,36,1.35,38,0.804,39,0.027,40,0.544,41,0.437,42,0.804,44,2.401,47,2.19,48,1.016,49,1.327,53,0.851,56,1.282,57,1.355,61,0.508,63,1.575,64,0.281,69,0.142,72,1.299,75,0.921,77,0.469,78,0.785,84,2.199,87,3.445,88,3.445,89,3.09,91,0.564,92,1.057,93,0.988,94,0.693,95,1.341,96,0.693,97,0.693,98,0.526,99,0.693,100,0.491,101,0.693,102,0.491,103,1.057,104,1.016,105,0.693,106,0.491,107,0.693,108,0.491,109,0.693,110,0.491,111,0.693,112,0.491,113,0.456,114,0.693,115,0.491,116,0.693,117,0.491,118,0.693,119,0.526,120,0.693,121,0.693,122,0.491,123,0.363,124,0.693,125,0.693,126,0.009,127,0.013,128,0.009,130,1.259,135,1.694,136,1.522,220,1.355,242,0.742,257,1.817,269,1.435,271,2.889,272,2.57,273,3.129,274,2.889,280,3.328,285,3.09,286,2.296,290,1.498,293,3.079,294,2.761,295,2.761,296,2.296,297,3.022,299,3.445,300,2.19,302,1.492,303,1.892,304,0.851,306,2.296,307,2.889,308,1.299,313,1.744,314,1.892,319,1.492,322,1.894,326,1.744,334,1.143,337,2.889,338,2.277,345,2.57,346,2.761,347,2.277,349,1.614,354,1.893,355,1.492,356,1.355,357,1.492,358,1.355,359,0.982,360,1.143,361,0.988,362,1.663,364,1.817,365,1.893,368,1.893,369,1.893,370,1.492,371,0.982,373,1.492,374,1.492,381,1.817,382,2.19,383,1.744,384,1.817,385,1.663,387,1.614,388,1.143,389,1.893,390,4.15,391,3.422,392,5.001,393,5.001,394,3.71,395,3.422,396,2.768,397,3.09,398,3.422,399,1.132,400,2.277,401,2.889,402,1.894,403,2.242,404,2.539,405,2.068,406,3.422,407,2.242,408,3.422,409,2.889,410,4.15,411,3.422,412,3.422,413,2.242,414,2.242,415,2.308,416,3.422,417,2.242,418,2.242,419,3.422,420,2.539,421,2.242,422,3.422,423,2.242,424,3.422,425,2.242,426,2.242,427,2.242,428,2.242,429,3.422,430,2.242,431,1.663,432,2.242,433,2.242,434,2.242,435,2.242,436,2.242,437,2.242,438,2.242,439,2.242,440,2.539,441,2.242,442,1.663,443,2.242,444,1.355,445,1.893,446,2.242,447,1.663,448,3.185,449,2.242,450,3.445,451,2.242,452,5.001,453,1.355,454,1.893,455,2.242,456,1.893,457,2.242,458,3.422,459,3.422,460,3.422,461,3.422,462,3.422,463,1.492,464,1.893,465,2.57,466,2.539,467,1.893,468,2.539,469,1.893,470,1.893,471,1.492,472,1.355,473,1.492,474,1.355,475,1.893,476,1.893,477,1.893,478,1.893,479,1.893,480,1.893,481,1.893]],["title/interfaces/DialogData.html",[35,1.58,67,0.5]],["body/interfaces/DialogData.html",[0,0.155,1,0.475,3,0.148,4,0.126,5,0.674,9,0.126,11,0.193,14,0.721,17,0.629,18,0.475,20,0.629,22,0.629,24,0.193,25,0.402,26,1.692,27,1.314,28,2.006,32,0.718,35,1.664,39,0.027,40,0.591,41,0.17,44,1.544,47,2.401,49,1.193,56,1.09,61,0.577,63,1.339,64,0.293,66,0.95,67,0.635,68,2.862,69,0.223,71,1.552,72,2.173,73,2.173,75,0.83,77,0.583,78,1.082,82,3.459,83,3.562,84,2.032,93,0.674,102,0.51,112,0.51,113,0.475,126,0.021,127,0.014,128,0.009,130,0.888,134,2.353,136,0.674,201,1.1,224,1.41,225,1.731,242,0.772,253,1.614,266,0.886,269,1.09,272,2.353,277,2.131,280,1.552,281,1.552,286,1.291,290,1.021,294,1.552,295,1.552,296,1.952,297,2.131,300,1.1,303,1.437,304,1.799,306,1.952,308,1.614,309,1.664,310,1.291,313,2.168,318,2.006,319,1.552,326,1.189,334,1.189,338,2.347,339,1.731,340,1.731,341,3.776,342,1.731,343,1.731,346,2.347,347,1.552,349,1.664,355,1.552,356,1.41,357,1.552,358,1.41,359,1.021,360,1.189,361,1.368,364,2.344,370,2.829,371,1.021,373,1.552,374,1.552,387,1.664,394,1.731,396,1.952,397,2.347,399,0.772,402,1.952,415,2.075,420,2.617,431,1.731,440,2.617,447,1.731,482,1.731,483,3.973,484,1.97,485,1.97,486,1.41,487,2.131,488,2.131,489,1.552,490,1.552,491,1.97,492,1.97,493,1.731,494,1.97,495,1.97,496,1.97,497,1.41,498,1.731,499,2.347,500,1.41,501,1.97,502,1.97,503,1.552,504,2.131,505,1.731,506,1.731,507,1.97,508,1.97,509,1.97,510,1.97,511,1.97,512,1.731,513,1.97,514,1.41,515,1.97,516,2.978,517,1.97,518,1.664,519,1.97,520,1.97,521,1.731,522,1.97,523,1.731,524,1.97,525,1.97,526,1.97,527,2.617,528,1.97,529,1.97,530,1.97,531,1.97,532,1.97,533,2.347,534,1.41,535,1.731,536,1.97,537,2.978,538,3.59,539,1.97,540,4.298,541,4.002,542,1.97,543,1.97,544,1.97,545,1.97,546,4.002,547,2.978,548,1.97,549,1.97,550,1.97,551,2.978,552,1.97,553,1.731,554,1.97,555,2.978,556,4.298,557,2.617,558,2.978,559,2.978,560,1.97,561,1.97,562,1.97,563,1.97,564,1.97,565,3.442,566,4.52,567,3.776,568,3.516,569,1.97,570,1.97,571,1.41,572,1.97,573,1.552,574,2.978,575,1.97,576,2.617,577,1.97,578,1.97,579,1.97,580,1.97,581,1.97,582,1.97,583,1.731,584,1.798,585,1.97,586,1.731,587,1.97,588,1.97,589,2.617,590,1.97,591,1.97,592,1.97,593,1.97,594,1.731,595,1.731,596,1.97,597,1.97,598,1.97,599,2.416,600,1.731,601,1.552,602,1.552,603,1.552]],["title/interfaces/DialogData-1.html",[35,1.319,67,0.417,453,1.689]],["body/interfaces/DialogData-1.html",[0,0.222,1,0.852,3,0.265,4,0.226,9,0.226,10,3.106,11,0.346,12,3.535,13,1.975,14,1.638,15,3.535,17,1.129,18,0.852,19,3.106,20,1.129,21,3.535,22,1.129,23,3.535,24,0.346,25,0.605,26,1.531,27,1.798,28,2.744,30,3.535,31,3.106,32,1.079,34,3.527,35,2.744,39,0.027,41,0.423,43,3.535,44,2.547,46,3.535,47,3.124,48,0.916,49,1.648,51,3.106,52,2.786,53,2.012,54,3.106,55,2.53,56,1.294,58,3.106,61,0.492,62,1.975,63,1.589,64,0.525,65,3.106,66,1.705,67,0.868,68,2.5,69,0.335,70,4.476,71,4.069,72,2.321,73,2.447,74,4.476,75,0.868,76,3.535,77,0.727,78,1.002,79,2.786,80,3.535,81,3.535,126,0.016,127,0.02,128,0.016,266,1.589]],["title/components/HomeComponent.html",[0,0.122,106,0.733]],["body/components/HomeComponent.html",[0,0.221,1,0.761,2,1.422,3,0.236,4,0.202,5,1.591,6,1.155,7,1.155,8,1.155,9,0.202,11,0.407,13,2.323,14,1.81,16,1.155,17,1.841,18,1.39,20,1.328,22,1.328,32,1.122,36,0.818,38,0.878,39,0.027,40,0.569,41,0.272,42,0.878,55,2.258,61,0.457,62,2.323,64,0.469,69,0.236,77,0.675,78,0.707,91,0.941,92,1.522,93,1.422,94,1.155,95,1.691,96,1.155,97,1.155,98,0.878,99,1.155,100,0.818,101,1.155,102,0.818,103,1.522,104,0.818,105,1.155,106,1.282,107,1.155,108,0.818,109,1.155,110,0.818,111,1.155,112,0.818,113,0.761,114,1.155,115,0.818,116,1.155,117,0.818,118,1.155,119,0.878,120,1.155,121,1.155,122,0.818,123,0.605,124,1.155,125,1.155,126,0.014,127,0.019,128,0.014,130,1.387,176,2.773,220,2.258,256,2.726,257,2.157,259,2.976,381,1.636,382,2.157,383,1.905,384,1.636,387,1.763,465,2.068,466,2.773,468,2.773,471,3.666,472,2.976,473,3.278,571,2.976,599,1.905,604,3.155,605,4.159,606,5.51,607,4.926,608,3.155,609,5.382,610,3.737,611,4.926,612,4.159,613,2.068,614,5.857,615,3.737,616,3.155,617,3.655,618,4.159,619,4.926,620,5.857,621,3.278,622,3.155,623,2.773,624,3.737,625,3.155,626,3.737,627,3.737,628,4.926,629,3.155]],["title/modules/HomeModule.html",[139,1.854,153,2.025]],["body/modules/HomeModule.html",[3,0.253,4,0.216,9,0.216,11,0.331,39,0.027,61,0.641,64,0.503,66,1.633,69,0.326,77,0.55,91,1.009,100,1.394,104,1.394,110,1.394,113,1.297,117,1.394,126,0.015,127,0.02,128,0.015,139,2.853,141,2.218,142,2.422,143,4.229,144,2.974,145,2.667,146,2.667,153,4.128,155,3.825,156,2.974,157,2.422,160,4.464,161,4.353,162,3.825,169,2.667,179,4.353,180,3.384,183,4.353,184,3.384,185,4.353,186,3.384,189,4.353,190,3.384,191,4.353,192,3.384,199,3.384,200,3.384,201,1.891,217,2.218,313,2.628,356,2.422,358,2.422,630,3.384,631,3.384,632,4.008,633,5.155,634,5.155,635,5.155,636,4.008,637,5.155,638,4.008,639,5.155,640,5.155,641,5.155,642,4.008,643,4.008,644,4.008,645,4.008,646,4.008,647,4.008,648,4.008,649,4.008,650,4.008,651,4.008,652,1.755,653,4.008,654,4.008]],["title/injectables/IntercepterService.html",[154,1.708,655,1.365]],["body/injectables/IntercepterService.html",[3,0.273,4,0.233,9,0.233,11,0.446,24,0.356,29,1.635,36,0.944,38,1.013,39,0.027,40,0.445,41,0.314,42,1.013,48,1.182,53,2.051,61,0.573,62,2.548,64,0.541,69,0.273,75,0.644,77,0.592,78,1.021,126,0.017,127,0.021,128,0.017,131,2.2,154,2.754,217,2.388,253,1.638,273,2.99,335,3.735,518,3.063,527,3.201,652,2.787,655,2.518,656,2.871,657,3.643,658,3.595,659,5.898,660,4.315,661,6.182,662,5.22,663,6.182,664,4.315,665,5.898,666,3.007,667,3.265,668,5.402,669,2.035,670,2.2,671,2.2,672,2.388,673,2.388,674,4.315,675,4.315,676,3.201,677,4.315,678,4.315]],["title/components/LoginComponent.html",[0,0.122,108,0.733]],["body/components/LoginComponent.html",[0,0.199,1,0.568,2,1.162,3,0.176,4,0.151,5,1.363,6,0.862,7,0.862,8,0.862,9,0.151,11,0.332,16,0.862,17,1.772,18,1.338,20,1.086,22,1.086,24,0.23,25,0.459,26,1.363,29,1.013,32,1.052,36,1.131,38,0.655,39,0.027,40,0.488,41,0.203,42,0.655,48,0.61,56,1.244,61,0.508,64,0.35,69,0.176,77,0.552,78,0.977,91,0.702,92,1.244,93,1.162,94,0.862,95,1.493,96,0.862,97,0.862,98,0.655,99,0.862,100,0.61,101,0.862,102,0.61,103,1.244,104,0.61,105,0.862,106,0.61,107,0.862,108,1.131,109,0.862,110,0.61,111,0.862,112,0.61,113,0.568,114,0.862,115,0.61,116,0.862,117,0.61,118,0.862,119,0.655,120,0.862,121,0.862,122,0.61,123,0.925,124,0.862,125,0.862,126,0.011,127,0.015,128,0.011,130,1.189,135,1.244,136,1.162,154,2.636,201,1.316,226,2.07,234,1.64,242,0.923,253,1.793,262,3.258,263,2.432,304,2.366,309,2.439,310,2.228,334,2.052,353,3.033,361,1.493,364,1.762,381,2.263,382,2.578,383,2.052,384,2.4,387,2.227,388,1.422,399,1.332,402,3.258,415,1.762,453,1.686,463,1.856,465,2.861,472,2.432,486,1.686,487,3.124,504,2.854,505,2.986,571,2.432,617,2.986,621,2.678,623,2.07,652,1.762,658,3.8,679,2.356,680,4.722,681,4.025,682,3.917,683,4.722,684,3.836,685,2.07,686,2.455,687,2.79,688,2.79,689,4.025,690,2.432,691,2.79,692,3.557,693,2.986,694,3.033,695,3.836,696,2.986,697,3.836,698,2.986,699,3.836,700,2.986,701,2.986,702,2.986,703,2.79,704,1.544,705,2.79,706,2.79,707,2.79,708,2.79,709,2.79,710,2.79,711,2.79,712,2.356,713,2.79,714,2.356,715,2.79,716,2.356,717,2.79,718,2.356,719,2.79,720,2.356,721,2.79,722,2.356,723,2.79,724,2.356,725,2.79,726,2.356,727,4.365,728,3.836,729,2.986,730,2.986,731,2.356,732,2.356,733,2.356,734,2.356,735,2.356,736,2.986,737,2.356,738,3.399,739,3.504,740,2.356,741,2.79,742,2.356,743,2.356,744,2.356,745,2.356,746,3.504,747,2.356,748,2.356,749,3.987,750,2.356,751,3.987,752,3.399,753,2.356,754,2.356]],["title/interfaces/Market.html",[67,0.5,755,1.708]],["body/interfaces/Market.html",[3,0.302,4,0.258,9,0.258,11,0.556,24,0.394,25,0.656,39,0.027,40,0.687,41,0.466,67,0.858,69,0.302,75,1.034,126,0.018,127,0.022,128,0.018,266,1.813,269,2.057,755,3.519,756,4.032,757,5.619]],["title/components/MarketsComponent.html",[0,0.122,110,0.733]],["body/components/MarketsComponent.html",[0,0.208,1,0.634,2,1.256,3,0.197,4,0.168,5,0.899,6,0.962,7,0.962,8,0.962,9,0.168,11,0.414,14,1.678,16,0.962,17,1.8,18,1.359,20,1.174,22,1.174,24,0.257,25,0.497,26,1.448,27,1.345,29,1.096,32,1.106,36,1.25,38,1.022,39,0.027,40,0.611,41,0.365,42,1.022,48,1.098,56,1.766,61,0.504,63,1.904,64,0.39,69,0.197,75,0.749,77,0.427,78,0.948,91,0.784,92,1.345,93,1.256,94,0.962,95,1.568,96,0.962,97,0.962,98,0.731,99,0.962,100,0.681,101,0.962,102,0.681,103,1.345,104,0.681,105,0.962,106,0.681,107,0.962,108,0.681,109,0.962,110,1.188,111,0.962,112,0.681,113,0.634,114,0.962,115,0.681,116,0.962,117,0.681,118,0.962,119,0.731,120,0.962,121,0.962,122,0.681,123,0.504,124,0.962,125,0.962,126,0.012,127,0.017,128,0.012,130,1.096,135,0.962,136,0.899,242,1.03,253,1.182,256,3.601,269,1.878,290,1.905,296,2.776,300,2.562,302,2.072,303,2.212,304,2.354,306,2.776,314,2.212,317,1.881,318,2.366,322,2.408,326,2.218,330,3.674,345,2.408,349,2.053,353,1.723,359,1.363,360,1.587,361,1.256,381,1.363,382,1.363,384,1.363,399,1.959,401,3.674,474,3.282,514,2.63,755,2.914,758,2.629,759,5.016,760,4.351,761,5.431,762,3.674,763,4.351,764,4.351,765,4.351,766,4.351,767,4.351,768,3.674,769,3.113,770,4.351,771,3.113,772,3.674,773,3.113,774,2.63,775,3.113,776,2.629,777,2.629,778,3.113,779,3.113,780,3.113,781,3.113,782,2.629,783,3.113,784,4.351,785,4.351,786,4.351,787,4.586,788,3.113,789,3.674,790,3.674,791,3.674,792,4.586,793,3.674,794,3.113,795,3.113,796,3.113]],["title/components/OkdialogComponent.html",[0,0.122,112,0.733]],["body/components/OkdialogComponent.html",[0,0.238,1,0.758,2,1.418,3,0.235,4,0.201,5,1.075,6,1.15,7,1.15,8,1.15,9,0.201,11,0.406,16,1.15,17,1.84,18,1.389,20,1.325,22,1.325,24,0.307,25,0.561,26,1.418,28,2.868,29,1.237,32,1.12,33,2.762,34,4.045,36,1.33,38,0.874,39,0.027,40,0.568,41,0.425,42,0.874,48,0.814,56,1.15,61,0.456,62,3.004,64,0.467,66,1.516,68,2.868,69,0.235,77,0.674,78,0.704,79,2.477,91,0.937,92,1.518,93,1.418,94,1.15,95,1.689,96,1.15,97,1.15,98,0.874,99,1.15,100,0.814,101,1.15,102,0.814,103,1.518,104,0.814,105,1.15,106,0.814,107,1.15,108,0.814,109,1.15,110,0.814,111,1.15,112,1.28,113,0.758,114,1.15,115,0.814,116,1.15,117,0.814,118,1.15,119,0.874,120,1.15,121,1.15,122,0.814,123,0.603,124,1.15,125,1.15,126,0.014,127,0.019,128,0.014,130,1.385,134,3.456,499,3.659,557,4.339,599,3.184,797,3.143,798,4.148,799,5.499,800,4.913,801,5.848,802,4.913,803,4.913,804,4.644,805,5.848,806,3.722,807,3.722,808,3.722,809,3.722,810,3.722]],["title/interfaces/Product.html",[67,0.5,72,1.272]],["body/interfaces/Product.html",[3,0.282,4,0.241,9,0.241,11,0.369,24,0.369,25,0.63,39,0.027,40,0.676,41,0.476,47,3.089,49,1.649,61,0.414,67,0.894,69,0.282,72,2.608,73,2.441,75,1.009,126,0.017,127,0.021,128,0.017,266,1.695,269,2.072,277,3.958,286,3.463,314,2.248,811,3.77,812,6.257,813,4.66,814,5.519]],["title/components/ProductsComponent.html",[0,0.122,113,0.682]],["body/components/ProductsComponent.html",[0,0.152,1,0.52,2,0.737,3,0.098,4,0.084,5,0.939,6,0.479,7,0.479,8,0.479,9,0.084,11,0.312,14,0.789,16,0.479,17,1.585,18,1.197,19,1.894,20,0.688,22,0.688,24,0.128,25,0.291,26,1.837,27,1.006,28,1.535,29,0.643,32,0.768,35,0.731,36,1.364,38,0.979,39,0.027,40,0.571,41,0.444,42,0.979,44,2.077,47,2.494,48,1.038,49,1.293,56,1.587,57,0.937,61,0.523,63,1.235,64,0.194,66,0.631,67,0.381,68,2.773,69,0.161,71,2.775,72,2.257,73,2.232,75,0.809,77,0.517,78,0.937,82,3.406,83,3.519,84,1.95,87,2.799,88,2.799,89,2.51,91,0.39,92,0.789,93,1.089,94,0.479,95,1.089,96,0.479,97,0.479,98,0.364,99,0.479,100,0.339,101,0.479,102,0.559,103,0.789,104,0.339,105,0.479,106,0.339,107,0.479,108,0.339,109,0.479,110,0.339,111,0.479,112,0.559,113,0.768,114,0.479,115,0.339,116,0.479,117,0.339,118,0.479,119,0.364,120,0.479,121,0.479,122,0.339,123,0.251,124,0.479,125,0.479,126,0.018,127,0.01,128,0.006,130,0.819,134,2.308,135,1.466,136,1.483,201,0.731,220,0.937,224,0.937,225,1.15,242,0.513,253,1.235,256,1.413,269,1.166,272,2.483,277,2.52,280,2.775,281,1.698,286,1.413,290,1.118,294,2.165,295,2.165,296,2.308,297,2.279,300,1.779,303,1.537,304,1.882,306,2.087,308,1.583,309,1.779,310,1.413,313,2.287,318,2.116,319,1.031,326,1.301,334,1.301,338,2.51,339,1.894,340,1.894,341,3.329,342,1.894,343,1.894,346,2.165,347,1.698,349,1.779,355,1.031,356,0.937,357,1.031,358,0.937,359,0.679,360,0.79,361,1.089,364,2.373,370,2.165,371,0.679,373,1.031,374,1.031,381,1.425,382,1.826,383,1.301,384,1.425,385,1.15,387,1.779,388,0.79,394,3.094,396,1.801,397,2.51,399,0.844,402,2.087,415,2.17,420,2.414,431,1.15,440,1.894,447,1.15,463,1.031,464,1.309,465,2.087,466,1.894,467,1.309,468,1.894,469,1.309,470,1.309,471,1.031,472,0.937,473,1.031,474,0.937,475,1.309,476,1.309,477,1.309,478,1.309,479,1.309,480,1.309,481,1.309,482,1.15,483,3.864,484,1.309,485,1.309,486,0.937,487,2.279,488,2.52,489,1.031,490,1.031,491,1.309,492,1.309,493,1.15,494,1.309,495,2.155,496,2.748,497,1.542,498,1.894,499,2.51,500,1.542,501,2.748,502,2.748,503,1.698,504,2.279,505,1.894,506,1.894,507,2.155,508,2.155,509,2.748,510,2.155,511,2.748,512,1.894,513,2.155,514,1.542,515,2.748,516,3.789,517,2.155,518,1.779,519,2.155,520,1.309,521,1.15,522,1.309,523,1.15,524,1.309,525,2.155,526,2.155,527,3.519,528,1.309,529,1.309,530,1.309,531,1.309,532,1.309,533,2.51,534,1.542,535,1.894,536,2.155,537,2.155,538,2.748,539,1.309,540,3.522,541,3.185,542,1.309,543,1.309,544,1.309,545,1.309,546,3.185,547,2.155,548,1.309,549,1.309,550,1.309,551,3.185,552,2.155,553,2.799,554,1.309,555,2.155,556,3.522,557,1.894,558,2.155,559,2.155,560,1.309,561,1.309,562,1.309,563,1.309,564,1.309,565,3.119,566,3.789,567,3.094,568,2.799,569,2.155,570,2.155,571,1.542,572,2.155,573,1.698,574,3.185,575,2.155,576,1.894,577,1.309,578,1.309,579,1.309,580,1.309,581,1.309,582,1.309,583,1.15,584,1.301,585,1.309,586,2.799,587,3.185,588,1.309,589,1.894,590,1.309,591,1.309,592,1.309,593,1.309,594,1.894,595,1.894,596,2.155,597,2.155,598,2.155,599,2.418,600,1.894,601,1.031,602,1.031,603,1.031,793,2.155,815,2.552,816,2.155,817,2.552,818,1.55,819,2.552,820,1.55,821,1.55,822,1.55,823,1.55,824,1.55,825,1.55,826,1.55,827,1.55,828,1.55,829,1.55,830,1.55,831,1.55,832,1.55,833,1.55,834,1.55,835,1.55,836,1.55,837,1.55,838,1.55,839,1.55,840,1.55,841,3.772,842,2.552,843,2.552,844,2.552,845,2.552,846,2.552]],["title/injectables/PublicDataService.html",[303,1.365,655,1.365]],["body/injectables/PublicDataService.html",[3,0.156,4,0.134,9,0.134,11,0.468,14,1.925,24,0.204,25,0.421,26,1.798,27,0.765,29,0.928,32,0.897,36,1.346,38,1.285,39,0.027,40,0.565,41,0.398,42,1.285,44,1.929,48,1.442,49,1.666,53,2.26,61,0.526,64,0.31,69,0.156,72,2.078,73,1.399,75,0.779,77,0.604,78,1.126,82,2.949,83,2.452,84,2.364,123,0.597,126,0.009,127,0.014,128,0.009,130,0.928,131,1.261,135,0.765,136,0.714,217,1.369,253,2.301,256,2.438,257,2.137,259,3.307,269,2.006,270,3.719,272,3.137,273,3.029,275,4.407,277,3.154,282,3.621,286,3.137,303,1.501,308,1.672,309,1.167,314,2.609,359,2.726,361,1.272,448,2.227,483,3.248,500,1.495,512,2.735,518,1.739,534,2.227,568,3.621,586,3.621,595,1.836,613,1.369,655,1.988,656,1.646,666,2.89,669,1.167,670,1.261,671,1.261,672,1.369,755,1.261,782,2.089,847,2.089,848,4.881,849,4.881,850,3.686,851,4.122,852,3.686,853,4.881,854,3.686,855,3.686,856,3.686,857,2.089,858,3.621,859,3.686,860,3.873,861,3.112,862,3.686,863,3.686,864,2.474,865,2.452,866,2.474,867,3.686,868,3.686,869,3.686,870,2.474,871,3.686,872,2.474,873,4.881,874,3.686,875,2.474,876,3.686,877,2.474,878,3.686,879,2.474,880,4.881,881,3.686,882,2.474,883,3.686,884,5.219,885,2.474,886,3.686,887,2.735,888,1.495,889,1.836,890,2.474,891,2.474,892,1.836,893,4.417,894,3.621,895,5.472,896,2.735,897,3.686,898,3.686,899,2.474,900,3.686,901,3.686,902,2.474,903,2.474,904,3.268,905,2.931,906,2.474,907,2.474]],["title/components/RegisterComponent.html",[0,0.122,115,0.733]],["body/components/RegisterComponent.html",[0,0.179,1,0.439,2,0.958,3,0.136,4,0.116,5,1.418,6,0.666,7,0.666,8,0.666,9,0.116,11,0.334,13,1.566,14,1.406,16,0.666,17,1.698,18,1.282,20,0.895,22,0.895,24,0.178,25,0.379,26,1.169,28,1.016,29,0.836,32,0.926,36,1.183,38,0.779,39,0.027,40,0.591,41,0.295,42,0.779,44,1.453,48,0.726,49,0.836,55,2.748,56,1.251,61,0.501,63,0.818,64,0.27,66,0.878,68,2.885,69,0.136,75,0.775,77,0.295,78,1.022,91,0.542,92,1.026,93,1.313,94,0.666,95,1.313,96,0.666,97,0.666,98,0.506,99,0.666,100,0.471,101,0.666,102,0.471,103,1.026,104,0.471,105,0.666,106,0.471,107,0.666,108,0.471,109,0.666,110,0.471,111,0.666,112,0.726,113,0.439,114,0.666,115,0.995,116,0.666,117,0.471,118,0.666,119,0.506,120,0.666,121,0.666,122,0.471,123,0.947,124,0.666,125,0.666,126,0.008,127,0.013,128,0.008,134,2.718,135,1.251,136,1.169,201,1.016,234,2.001,242,0.713,253,2.22,263,3.135,269,1.026,304,2.119,308,1.727,314,1.352,334,2.319,349,2.448,353,2.718,361,1.169,364,1.453,381,1.991,382,2.272,383,1.692,384,1.991,387,1.91,388,1.098,399,1.098,402,2.718,442,2.462,453,1.302,463,1.434,465,2.517,472,2.006,486,2.446,487,2.748,488,2.968,490,1.434,499,2.208,503,2.208,504,2.446,514,2.006,518,1.566,523,2.462,535,2.462,553,2.462,565,2.24,567,1.598,571,2.748,584,1.098,594,2.462,599,3.183,601,1.434,602,1.434,603,1.434,617,2.462,621,2.208,623,1.598,667,2.968,682,3.81,684,3.374,685,1.598,686,1.853,692,3.737,693,2.462,694,2.871,695,4.481,696,3.374,697,3.85,698,2.462,699,3.374,700,2.462,701,3.374,702,2.462,704,1.192,727,2.803,728,4.538,729,3.374,730,3.374,731,1.819,732,1.819,733,1.819,734,1.819,735,1.819,736,2.462,737,1.819,738,2.803,739,3.004,740,1.819,742,1.819,743,1.819,744,1.819,745,1.819,746,3.004,747,1.819,748,1.819,749,3.419,750,1.819,751,3.419,752,2.803,753,1.819,754,1.819,774,2.006,776,2.803,908,1.819,909,3.319,910,4.048,911,3.319,912,4.912,913,4.048,914,2.154,915,3.319,916,3.319,917,3.319,918,2.154,919,2.803,920,3.319,921,3.319,922,4.912,923,2.154,924,2.803,925,3.319,926,3.319,927,2.154,928,2.154,929,2.154,930,4.048,931,3.453,932,2.718,933,3.319,934,3.319,935,4.548,936,4.548,937,3.319,938,2.154,939,3.319,940,3.319,941,2.154,942,2.154,943,2.154,944,2.154,945,4.048,946,2.064,947,2.154,948,2.154,949,2.154,950,2.154,951,2.154,952,2.803,953,2.154,954,2.154,955,2.154,956,2.154,957,2.154,958,2.154,959,3.319,960,2.154,961,2.154,962,2.154,963,2.154,964,3.319,965,2.154,966,2.154]],["title/interfaces/Shop.html",[67,0.5,314,1.365]],["body/interfaces/Shop.html",[3,0.263,4,0.225,9,0.225,11,0.344,24,0.344,25,0.603,39,0.027,40,0.664,41,0.486,49,1.705,61,0.386,67,0.866,69,0.263,75,1.028,126,0.016,127,0.02,128,0.016,266,1.58,269,1.989,314,2.838,755,3.404,757,5.433,813,5.433,931,3.514,932,3.561,967,3.514,968,3.687,969,5.433,970,5.433,971,5.281,972,5.281]],["title/components/ShopsComponent.html",[0,0.122,117,0.733]],["body/components/ShopsComponent.html",[0,0.202,1,0.588,2,1.191,3,0.183,4,0.156,5,0.834,6,0.892,7,0.892,8,0.892,9,0.156,11,0.398,14,1.785,16,0.892,17,1.781,18,1.357,20,1.113,22,1.113,24,0.238,25,0.471,26,1.756,27,1.785,29,1.039,32,1.069,36,1.264,38,0.969,39,0.027,40,0.542,41,0.382,42,0.969,44,2.299,48,1.053,49,1.212,56,1.717,61,0.487,64,0.362,69,0.183,72,1.566,75,0.784,77,0.566,78,0.993,91,0.727,92,1.275,93,1.516,94,0.892,95,1.516,96,0.892,97,0.892,98,0.678,99,0.892,100,0.632,101,0.892,102,0.632,103,1.275,104,0.632,105,0.892,106,0.632,107,0.892,108,0.632,109,0.892,110,0.632,111,0.892,112,0.632,113,0.588,114,0.892,115,0.632,116,0.892,117,1.149,118,0.892,119,0.678,120,0.892,121,0.892,122,0.632,123,0.468,124,0.892,125,0.892,126,0.011,127,0.016,128,0.011,130,1.212,135,1.275,136,1.191,211,2.745,242,0.955,253,1.096,259,3.841,269,1.984,296,2.906,300,2.477,302,1.921,303,2.139,304,2.309,306,2.664,308,1.566,309,2.477,310,2.283,314,2.423,317,1.745,318,2.271,322,2.283,349,1.946,353,1.598,359,1.264,360,1.472,361,1.39,376,3.484,381,1.264,382,1.264,384,1.264,396,2.906,397,3.494,399,1.737,415,2.299,474,3.173,503,2.745,514,2.493,518,1.946,521,2.142,755,2.103,762,3.484,772,3.484,774,2.493,777,2.438,787,4.434,789,4.065,790,4.065,791,4.065,792,4.434,851,4.434,924,3.484,973,2.438,974,4.813,975,4.125,976,4.813,977,4.125,978,2.887,979,2.887,980,2.887,981,2.887,982,2.887,983,2.887,984,4.813,985,2.887,986,2.887,987,4.125,988,2.887,989,4.125,990,2.887,991,4.125,992,4.125,993,2.887]],["title/components/SidBarComponent.html",[0,0.122,119,0.787]],["body/components/SidBarComponent.html",[0,0.177,1,0.431,2,0.945,3,0.134,4,0.114,5,0.611,6,0.654,7,0.654,8,0.654,9,0.114,11,0.27,16,0.654,17,1.693,18,1.312,20,0.883,22,0.883,24,0.331,25,0.373,26,1.797,27,1.011,29,1.226,32,0.917,36,1.333,38,0.497,39,0.027,40,0.601,41,0.375,42,0.497,48,1.127,49,1.297,56,1.66,61,0.515,63,1.519,64,0.265,69,0.134,75,0.673,77,0.449,78,0.921,84,1.849,91,0.533,92,1.011,93,0.945,94,0.654,95,1.301,96,0.654,97,0.654,98,0.497,99,0.654,100,0.463,101,0.654,102,0.463,103,1.011,104,0.463,105,0.654,106,0.463,107,0.654,108,0.463,109,0.654,110,0.463,111,0.654,112,0.463,113,0.431,114,0.654,115,0.463,116,0.654,117,0.463,118,0.654,119,1.058,120,1.715,121,0.654,122,0.463,123,1.038,124,0.654,125,0.654,126,0.008,127,0.013,128,0.008,135,1.505,136,1.406,169,1.408,176,1.57,207,4.571,234,0.862,242,0.7,256,1.811,257,1.433,259,1.978,285,2.997,290,1.433,293,2.428,298,3.804,300,2.125,303,1.835,304,2.107,308,1.242,309,1.544,310,1.811,317,2.722,318,0.998,320,2.764,322,1.811,326,2.297,334,1.668,345,1.811,349,2.125,353,2.493,359,0.926,360,1.079,361,1.301,364,2.133,381,2.255,382,2.133,383,1.668,384,1.752,386,1.786,387,0.998,388,1.079,399,1.611,405,2.419,415,1.972,442,3.342,444,1.978,445,2.764,453,1.278,465,1.171,471,2.997,473,2.663,573,2.178,584,1.668,599,1.079,605,4.349,608,1.786,609,4.535,612,3.804,616,1.786,618,2.764,621,1.408,625,1.786,629,1.786,652,2.352,666,2.041,667,1.978,669,0.998,670,1.079,671,1.079,673,1.171,682,2.178,686,1.984,690,1.978,704,1.171,736,1.57,739,2.428,768,2.764,774,1.978,905,2.178,946,2.297,994,5.202,995,1.786,996,3.273,997,3.273,998,4.002,999,3.273,1000,4.002,1001,4.871,1002,4.002,1003,4.505,1004,5.151,1005,3.822,1006,4.505,1007,4.505,1008,5.819,1009,3.273,1010,2.428,1011,3.273,1012,3.273,1013,2.764,1014,3.273,1015,2.116,1016,1.978,1017,3.273,1018,2.116,1019,3.273,1020,2.116,1021,3.273,1022,2.116,1023,3.273,1024,3.273,1025,3.273,1026,3.273,1027,3.273,1028,2.116,1029,2.116,1030,2.116,1031,2.764,1032,3.273,1033,3.273,1034,3.273,1035,3.273,1036,3.273,1037,4.002,1038,2.116,1039,3.273,1040,2.116,1041,3.273,1042,2.116,1043,2.428,1044,2.116,1045,2.116,1046,1.786,1047,1.786,1048,2.116,1049,2.116,1050,1.786,1051,2.116,1052,2.428,1053,4.002,1054,2.116,1055,2.116,1056,2.116,1057,2.116,1058,2.116,1059,2.116,1060,2.116,1061,2.116,1062,2.116,1063,3.273,1064,3.273,1065,3.273,1066,3.273,1067,3.273,1068,4.505,1069,3.273,1070,3.273,1071,4.871,1072,2.116,1073,2.116,1074,3.273,1075,2.116,1076,3.273,1077,2.116,1078,2.116,1079,2.116,1080,2.116,1081,2.116,1082,2.116,1083,2.116,1084,2.116,1085,2.116,1086,2.116]],["title/interfaces/Unit.html",[67,0.5,73,1.272]],["body/interfaces/Unit.html",[3,0.291,4,0.249,9,0.249,11,0.38,24,0.38,25,0.642,39,0.027,40,0.681,41,0.48,47,3.112,49,1.529,67,0.84,69,0.291,73,2.536,75,1.039,126,0.018,127,0.022,128,0.018,136,1.905,266,1.748,269,2.039,281,4.39,1087,3.887,1088,6.598]],["title/interfaces/User.html",[67,0.5,123,0.543]],["body/interfaces/User.html",[3,0.26,4,0.222,9,0.222,11,0.34,24,0.34,25,0.599,39,0.027,40,0.663,41,0.489,49,1.702,67,0.783,69,0.26,75,1.049,123,1.12,126,0.016,127,0.02,128,0.016,266,1.564,269,1.983,652,2.81,694,3.551,932,3.551,968,3.878,969,5.419,970,5.419,1089,3.478,1090,6.417,1091,6.417,1092,5.247]],["title/components/UserComponent.html",[0,0.122,122,0.733]],["body/components/UserComponent.html",[0,0.181,1,0.45,2,0.977,3,0.14,4,0.119,5,1.188,6,0.683,7,0.683,8,0.683,9,0.268,11,0.34,13,1.597,16,0.683,17,1.706,18,1.306,20,0.913,22,0.913,24,0.183,25,0.386,26,1.882,27,1.046,28,1.043,29,0.852,32,0.938,36,1.36,38,0.795,39,0.027,40,0.642,41,0.436,42,0.795,48,1.009,49,0.852,52,2.252,56,1.536,61,0.461,63,1.562,64,0.277,66,0.9,68,2.96,69,0.14,75,0.958,77,0.464,78,0.94,91,0.556,92,1.046,93,0.977,94,0.683,95,1.331,96,0.683,97,0.683,98,0.519,99,0.683,100,0.484,101,0.683,102,0.484,103,1.046,104,0.484,105,0.683,106,0.484,107,0.683,108,0.484,109,0.683,110,0.484,111,0.683,112,0.741,113,0.45,114,0.683,115,0.484,116,0.683,117,0.484,118,0.683,119,0.519,120,0.683,121,0.683,122,1.009,123,1.032,124,0.683,125,0.683,126,0.008,127,0.013,128,0.008,130,1.58,134,2.75,135,1.739,136,1.625,201,1.043,234,1.379,290,1.482,299,3.42,300,2.174,317,2.045,318,1.597,322,1.873,361,0.977,362,1.64,371,1.482,399,1.12,402,1.873,415,1.482,486,1.336,487,3.168,488,3.003,490,1.471,504,2.486,506,2.511,565,1.223,573,2.252,576,2.511,583,1.64,584,1.127,599,2.781,600,2.511,601,1.471,602,1.471,603,1.471,682,3.63,684,3.42,685,1.64,686,2.292,690,2.045,692,3.823,693,2.511,694,3.193,695,4.176,696,2.511,697,4.176,698,2.511,699,3.42,700,2.511,701,2.511,702,2.511,704,1.223,712,1.866,714,1.866,716,1.866,718,1.866,720,1.866,722,1.866,724,1.866,728,1.64,729,3.42,730,3.889,816,2.858,919,2.858,932,3.019,952,4.607,968,3.558,1010,1.64,1046,2.858,1047,1.866,1093,1.866,1094,4.113,1095,3.385,1096,4.113,1097,3.385,1098,2.21,1099,2.21,1100,2.21,1101,3.385,1102,3.889,1103,3.687,1104,2.21,1105,3.385,1106,3.42,1107,2.21,1108,2.21,1109,2.21,1110,2.21,1111,3.385,1112,2.21,1113,2.21,1114,2.21,1115,2.21,1116,2.21,1117,2.21,1118,2.21,1119,2.21,1120,2.21,1121,2.21,1122,4.113,1123,2.21,1124,3.385,1125,2.21,1126,4.61,1127,2.21,1128,4.61,1129,2.21,1130,2.21,1131,2.21,1132,1.64,1133,1.64,1134,2.21,1135,2.21,1136,2.21,1137,2.21,1138,2.21,1139,2.21,1140,2.21,1141,2.21,1142,2.21,1143,2.21,1144,2.21,1145,2.21,1146,2.21,1147,2.21,1148,2.21,1149,2.21,1150,2.21,1151,2.21,1152,2.21,1153,2.21,1154,2.21,1155,2.21,1156,2.21]],["title/guards/UserGuard.html",[243,2.229,497,2.025]],["body/guards/UserGuard.html",[0,0.221,3,0.171,4,0.146,9,0.146,11,0.466,24,0.223,25,0.308,29,0.989,32,0.943,36,1.183,38,1.27,39,0.027,40,0.558,41,0.393,42,1.27,48,1.353,53,2.348,61,0.54,62,1.852,64,0.338,69,0.171,75,0.403,77,0.538,78,1.198,95,1.134,123,0.967,126,0.01,127,0.015,128,0.01,130,0.679,131,1.375,154,1.375,226,2.001,234,2.073,241,2.173,242,0.892,243,2.613,254,2.613,255,4.012,273,2.816,290,1.181,304,2.379,318,1.852,335,3.738,345,1.492,361,0.779,364,1.181,396,3.618,399,1.299,448,2.373,613,1.492,652,2.228,655,2.073,662,3.316,666,3.333,667,3.898,669,1.272,670,1.375,671,1.375,672,1.492,673,2.173,686,2.203,690,1.629,704,2.173,861,3.316,865,4.116,946,2.878,1052,3.436,1157,3.436,1158,2.277,1159,5.408,1160,5.408,1161,5.408,1162,2.277,1163,2.696,1164,3.316,1165,2.277,1166,5.223,1167,5.351,1168,5.402,1169,2.696,1170,2.914,1171,3.927,1172,5.042,1173,5.042,1174,5.141,1175,2.696,1176,2.696,1177,3.927,1178,3.927,1179,3.927,1180,4.632,1181,3.927,1182,2.696,1183,4.632,1184,5.088,1185,5.088,1186,5.088,1187,2.696,1188,3.927,1189,3.927,1190,2.696,1191,2.696,1192,5.088,1193,5.088,1194,2.696,1195,3.927,1196,2.001,1197,2.277,1198,3.927,1199,2.277,1200,2.001,1201,2.001,1202,2.001,1203,2.001,1204,2.001,1205,2.277,1206,2.277,1207,2.001]],["title/guards/UserLoggedGuard.html",[245,2.229,497,2.025]],["body/guards/UserLoggedGuard.html",[0,0.181,3,0.24,4,0.205,9,0.205,11,0.459,24,0.314,25,0.433,29,1.253,32,1.131,36,1.089,38,1.169,39,0.027,40,0.514,41,0.362,42,1.169,48,1.089,53,2.238,61,0.567,62,2.348,64,0.476,69,0.24,75,0.567,77,0.683,78,1.114,123,1.064,126,0.015,127,0.019,128,0.015,131,1.936,157,3.008,234,2.028,241,2.755,242,1.256,245,3.312,254,3.312,255,4.54,290,1.663,304,2.534,335,3.562,345,2.101,361,1.096,364,1.663,396,3.073,399,1.647,613,2.101,652,2.581,655,2.401,666,2.831,667,3.562,669,1.791,670,1.936,671,1.936,672,2.101,673,2.101,686,2.401,690,2.295,704,2.101,726,3.206,946,1.936,1016,3.008,1031,4.689,1052,3.693,1157,2.817,1162,3.206,1164,4.203,1165,3.206,1166,4.977,1167,4.977,1168,4.977,1172,4.203,1173,4.203,1174,4.689,1197,3.206,1199,3.206,1205,3.206,1206,3.206,1208,4.689,1209,3.206,1210,3.797,1211,3.797,1212,4.978]],["title/injectables/UserService.html",[655,1.365,686,1.365]],["body/injectables/UserService.html",[3,0.143,4,0.122,9,0.122,11,0.437,14,1.832,18,0.702,24,0.187,25,0.394,27,1.066,29,0.868,32,0.85,36,1.271,38,1.243,39,0.027,40,0.681,41,0.385,42,1.243,48,1.367,53,2.319,61,0.491,64,0.284,67,0.515,69,0.218,75,1.036,77,0.473,78,1.192,123,1.021,126,0.013,127,0.013,128,0.009,130,0.57,131,1.155,135,0.7,136,0.654,217,1.254,234,1.405,253,2.153,262,2.78,263,3.198,308,2.153,313,1.758,361,1.206,371,2.317,399,1.751,400,2.295,404,2.559,405,1.369,415,2.044,444,2.084,448,3.198,450,2.559,500,2.084,518,1.627,533,2.295,534,2.821,565,1.254,584,1.155,613,1.254,652,2.595,655,1.902,656,1.507,658,2.295,666,2.698,669,1.069,670,1.155,671,1.155,672,1.254,673,1.254,676,2.559,686,1.405,692,4.026,694,3.663,857,1.913,858,3.464,860,4.083,865,2.295,887,2.559,888,1.369,889,1.681,892,2.559,893,3.927,894,1.681,896,2.559,904,3.099,905,3.107,931,4.009,932,3.045,946,1.758,968,3.198,1005,3.099,1016,2.084,1043,2.559,1102,2.559,1103,2.559,1106,4.083,1132,2.559,1133,2.559,1170,2.559,1196,1.681,1200,2.559,1201,1.681,1202,1.681,1203,1.681,1204,2.559,1207,1.681,1213,1.681,1214,2.912,1215,2.912,1216,3.449,1217,3.942,1218,3.449,1219,3.527,1220,3.942,1221,2.265,1222,2.912,1223,2.912,1224,2.265,1225,2.912,1226,2.912,1227,2.265,1228,2.912,1229,3.942,1230,2.912,1231,2.265,1232,4.469,1233,2.559,1234,2.912,1235,2.912,1236,2.912,1237,2.265,1238,2.912,1239,2.265,1240,2.265,1241,2.265,1242,2.265,1243,3.942,1244,3.942,1245,2.265,1246,2.265,1247,2.912,1248,2.912,1249,1.913,1250,1.913,1251,1.913,1252,1.913,1253,1.913,1254,4.469,1255,1.913,1256,2.912,1257,1.913,1258,1.913,1259,1.913,1260,1.913]],["title/components/commentDialog.html",[0,0.122,102,0.733]],["body/components/commentDialog.html",[0,0.217,1,0.719,2,1.37,3,0.223,4,0.191,5,1.547,6,1.091,7,1.091,8,1.091,9,0.289,11,0.392,13,2.237,16,1.091,17,1.829,18,1.38,20,1.279,22,1.279,24,0.292,25,0.541,26,1.776,27,2,28,2.818,29,1.194,31,4.249,32,1.166,33,2.62,34,3.975,35,2.818,36,1.253,38,0.829,39,0.027,40,0.553,41,0.39,42,0.829,48,0.773,51,3.519,52,3.81,53,2.268,54,3.519,55,2.866,56,1.466,57,2.134,58,3.519,61,0.497,62,1.666,63,1.34,64,0.443,65,2.62,66,1.438,68,2.527,69,0.223,77,0.65,78,0.897,79,2.349,82,2.866,90,4.005,91,0.889,92,1.466,93,1.37,94,1.091,95,1.653,96,1.091,97,1.091,98,0.829,99,1.091,100,0.773,101,1.091,102,1.253,103,1.466,104,0.773,105,1.091,106,0.773,107,1.091,108,0.773,109,1.091,110,0.773,111,1.091,112,0.773,113,0.719,114,1.091,115,0.773,116,1.091,117,0.773,118,1.091,119,0.829,120,1.091,121,1.091,122,0.773,123,0.572,124,1.091,125,1.091,126,0.014,127,0.018,128,0.014,130,1.549,224,3.61,309,2.527,483,4.306,488,2.134,489,3.975,589,3.519,798,4.005,804,4.523,1261,2.982,1262,5.356,1263,4.743,1264,3.531,1265,3.531,1266,3.531,1267,3.531,1268,3.531]],["title/coverage.html",[1269,3.865]],["body/coverage.html",[0,0.248,1,0.803,9,0.213,10,3.787,35,2.408,39,0.027,41,0.287,67,0.996,72,1.498,73,1.498,84,1.498,98,0.927,100,0.863,102,0.863,104,0.863,106,0.863,108,0.863,110,0.863,112,0.863,113,0.803,115,0.863,117,0.863,119,0.927,122,0.863,123,0.639,126,0.015,127,0.02,128,0.015,129,3.332,154,2.012,207,2.928,224,2.385,243,2.626,245,2.626,257,1.728,262,2.184,267,3.332,283,3.332,289,3.332,297,2.385,303,1.607,314,1.607,359,1.728,371,1.728,388,3.587,389,3.332,444,3.084,482,3.787,489,2.626,497,3.084,604,3.332,655,2.305,657,3.332,679,3.332,686,1.607,755,2.012,756,3.332,758,3.332,797,3.332,811,3.332,847,3.332,888,3.084,908,3.332,967,3.332,973,3.332,994,3.332,995,3.332,1087,3.332,1089,3.332,1093,3.332,1158,3.332,1208,3.332,1209,3.332,1213,3.787,1261,3.332,1269,3.332,1270,3.946,1271,3.946,1272,3.946,1273,6.195,1274,5.104,1275,5.982,1276,5.657,1277,5.982,1278,5.104,1279,5.104,1280,5.104,1281,5.104,1282,3.946,1283,3.946,1284,3.946,1285,3.332,1286,5.104,1287,3.332,1288,3.946]],["title/dependencies.html",[142,2.436,1289,2.795]],["body/dependencies.html",[39,0.027,64,0.621,126,0.019,127,0.023,128,0.019,142,2.992,164,4.961,165,4.359,169,3.295,201,2.336,203,4.181,204,4.181,219,4.181,220,2.992,221,4.181,242,1.638,493,3.674,669,2.336,1290,4.951,1291,6.832,1292,4.951,1293,5.875,1294,5.875,1295,4.951,1296,4.951,1297,4.951,1298,4.951,1299,4.951,1300,4.951,1301,4.951,1302,4.951,1303,4.951,1304,4.951]],["title/index.html",[24,0.231,1050,2.36,1305,2.795]],["body/index.html",[0,0.221,4,0.25,18,0.943,39,0.022,40,0.478,73,2.143,126,0.018,127,0.022,128,0.018,137,3.913,157,2.8,326,2.362,335,3.68,371,2.029,400,4.052,405,3.83,409,3.913,622,3.913,746,4.963,774,2.8,1010,3.438,1013,3.913,1016,2.8,1233,4.189,1306,5.646,1307,4.634,1308,6.089,1309,4.634,1310,4.634,1311,4.634,1312,6.497,1313,4.634,1314,4.634,1315,4.634,1316,4.634,1317,4.634,1318,4.634,1319,6.089,1320,4.634,1321,6.497,1322,4.634,1323,4.634,1324,4.634,1325,4.634,1326,4.634,1327,4.634,1328,3.913,1329,5.646,1330,6.338,1331,4.634,1332,5.646,1333,5.646,1334,4.634,1335,4.634,1336,4.634,1337,4.634,1338,6.089,1339,4.634,1340,3.438,1341,4.634,1342,4.634]],["title/interfaces/login.html",[67,0.5,262,1.854]],["body/interfaces/login.html",[3,0.178,4,0.152,9,0.152,11,0.232,14,1.866,18,0.572,24,0.232,25,0.462,27,0.868,32,0.572,39,0.027,40,0.653,41,0.204,48,1.291,53,2.4,61,0.531,64,0.352,67,0.708,69,0.256,75,1.003,77,0.555,78,1.228,123,0.978,126,0.015,127,0.015,128,0.011,130,0.707,131,1.432,217,1.555,234,1.144,253,2.292,262,3.042,263,2.865,266,1.067,308,2.24,313,1.432,361,0.811,371,2.076,399,1.568,400,1.869,404,2.084,405,1.698,415,1.771,444,1.698,448,2.865,450,2.084,500,1.698,518,1.325,533,1.869,534,2.445,565,1.555,584,1.432,613,1.555,652,2.643,655,1.931,658,1.869,666,2.644,669,1.325,670,1.432,671,1.432,672,1.555,673,1.555,676,3.001,686,1.144,692,3.951,694,3.594,858,3.001,860,3.848,865,1.869,887,2.084,888,1.698,889,2.084,892,3.001,893,4.247,894,2.084,896,3.001,904,3.517,905,3.451,931,3.925,932,2.87,946,1.432,968,2.865,1005,3.001,1016,1.698,1043,2.084,1102,2.084,1103,2.084,1106,4.377,1132,2.084,1133,2.084,1170,2.084,1196,2.084,1200,3.001,1201,2.084,1202,2.084,1203,2.084,1204,3.001,1207,2.084,1213,2.084,1214,2.372,1215,2.372,1217,2.372,1219,2.372,1220,2.372,1222,2.372,1223,2.372,1225,2.372,1226,2.372,1228,2.372,1229,3.416,1230,2.372,1232,4.003,1233,2.084,1234,2.372,1235,2.372,1236,2.372,1238,2.372,1243,3.416,1244,3.416,1247,2.372,1248,2.372,1249,2.372,1250,2.372,1251,3.416,1252,4.379,1253,2.372,1254,4.834,1255,2.372,1256,3.416,1257,2.372,1258,2.372,1259,2.372,1260,2.372]],["title/modules.html",[141,2.533]],["body/modules.html",[39,0.024,126,0.02,127,0.024,128,0.02,140,3.55,141,2.953,152,3.224,153,3.224,165,4.554,1343,6.138,1344,6.138,1345,6.461,1346,5.336,1347,5.336]],["title/overview.html",[1340,3.396]],["body/overview.html",[1,1.2,2,1.244,39,0.027,91,1.085,98,1.547,100,1.29,102,1.29,104,1.29,106,1.29,108,1.29,110,1.29,112,1.29,113,1.2,115,1.29,117,1.29,119,1.384,122,1.29,126,0.017,127,0.021,128,0.017,139,2.384,140,4.689,141,2.384,142,2.603,143,3.196,144,3.196,145,2.867,146,2.867,147,3.638,148,3.638,149,3.638,150,3.638,151,3.638,152,3.562,153,4.149,154,3.005,155,4.004,156,3.196,157,2.603,241,2.384,266,1.636,454,3.638,456,4.558,474,2.603,630,3.638,631,3.638,656,2.867,1157,3.196,1340,3.196,1348,4.308,1349,4.308]],["title/routes.html",[241,2.533]],["body/routes.html",[39,0.024,126,0.021,127,0.024,128,0.021,241,3.033]],["title/miscellaneous/variables.html",[1350,2.36,1351,3.404]],["body/miscellaneous/variables.html",[14,1.81,24,0.407,39,0.027,41,0.426,126,0.019,127,0.022,128,0.019,130,1.629,135,1.81,136,1.691,234,2.006,308,2.456,498,4.346,888,3.909,946,2.511,1285,4.159,1287,4.159,1328,5.463,1350,4.159,1351,4.159,1352,4.925,1353,4.925,1354,5.857,1355,5.857,1356,5.857,1357,5.857]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":364,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["0.11.4",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":453,"title":{"interfaces/DialogData-1.html":{}},"body":{"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{}}}],["1.1.11",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":474,"title":{},"body":{"components/DetailsComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{},"overview.html":{}}}],["10/10",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":388,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"coverage.html":{}}}],["100px",{"_index":628,"title":{},"body":{"components/HomeComponent.html":{}}}],["10px",{"_index":624,"title":{},"body":{"components/HomeComponent.html":{}}}],["11",{"_index":1349,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["11.2.12",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["11.2.9",{"_index":1310,"title":{},"body":{"index.html":{}}}],["11/11",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["12.0.0",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["12/12",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["14",{"_index":1348,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["15/15",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["195",{"_index":1079,"title":{},"body":{"components/SidBarComponent.html":{}}}],["2",{"_index":454,"title":{},"body":{"components/DetailsComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":792,"title":{},"body":{"components/MarketsComponent.html":{},"components/ShopsComponent.html":{}}}],["200px",{"_index":1072,"title":{},"body":{"components/SidBarComponent.html":{}}}],["20px",{"_index":472,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["24/24",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":555,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["3",{"_index":456,"title":{},"body":{"components/DetailsComponent.html":{},"overview.html":{}}}],["34",{"_index":475,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["4",{"_index":479,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["4/4",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":623,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6.6.0",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["649c9d",{"_index":383,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{}}}],["7/7",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":787,"title":{},"body":{"components/MarketsComponent.html":{},"components/ShopsComponent.html":{}}}],["8/8",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":467,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["9",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["9._",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["90px",{"_index":477,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["999",{"_index":1075,"title":{},"body":{"components/SidBarComponent.html":{}}}],["absolute",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{}}}],["access",{"_index":1043,"title":{},"body":{"components/SidBarComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["access_token",{"_index":1252,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["account",{"_index":959,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acess",{"_index":1251,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["action",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["activatedroute",{"_index":397,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1166,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["actual_component",{"_index":125,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["add",{"_index":82,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/commentDialog.html":{}}}],["added",{"_index":341,"title":{},"body":{"components/BasketsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["adding",{"_index":568,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{}}}],["addproduct",{"_index":19,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/ProductsComponent.html":{}}}],["addproduct'},{'name",{"_index":97,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["addproduct(product",{"_index":575,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["addproduct.component.html",{"_index":23,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["addproduct.component.scss",{"_index":21,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["addproductcomponent",{"_index":1,"title":{"components/AddproductComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["address",{"_index":931,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["adress",{"_index":968,"title":{},"body":{"interfaces/Shop.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["alavora",{"_index":1063,"title":{},"body":{"components/SidBarComponent.html":{}}}],["alavora_session",{"_index":654,"title":{},"body":{"modules/HomeModule.html":{}}}],["align",{"_index":625,"title":{},"body":{"components/HomeComponent.html":{},"components/SidBarComponent.html":{}}}],["angular",{"_index":335,"title":{},"body":{"components/BasketsComponent.html":{},"injectables/IntercepterService.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"index.html":{}}}],["angular/animations",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/SidBarComponent.html":{}}}],["angular/common",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"components/SidBarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["angular/common/locales/de",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"dependencies.html":{}}}],["angular/compiler/src/util",{"_index":941,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"dependencies.html":{},"interfaces/login.html":{}}}],["angular/flex",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["angular/material/badge",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["angular/material/card",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":66,"title":{},"body":{"components/AddproductComponent.html":{},"modules/AppModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/HomeModule.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["angular/material/grid",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["angular/material/input",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["angular/material/list",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["angular/material/menu",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":356,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"modules/HomeModule.html":{},"components/ProductsComponent.html":{}}}],["angular/material/radio",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["angular/material/sidenav",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sort",{"_index":642,"title":{},"body":{"modules/HomeModule.html":{}}}],["angular/material/table",{"_index":358,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"modules/HomeModule.html":{},"components/ProductsComponent.html":{}}}],["angular/material/toolbar",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"dependencies.html":{}}}],["anonniation",{"_index":633,"title":{},"body":{"modules/HomeModule.html":{}}}],["api",{"_index":308,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{},"miscellaneous/variables.html":{}}}],["api_url",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"index.html":{},"interfaces/login.html":{}}}],["app.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":98,"title":{"components/AppComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["applyfilter",{"_index":815,"title":{},"body":{"components/ProductsComponent.html":{}}}],["applyfilter(event",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["appmodule",{"_index":140,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":152,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":282,"title":{},"body":{"interfaces/Basket.html":{},"components/BasketsComponent.html":{},"injectables/PublicDataService.html":{}}}],["artifacts",{"_index":1322,"title":{},"body":{"index.html":{}}}],["assign",{"_index":442,"title":{},"body":{"components/DetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{}}}],["async",{"_index":868,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["attributes",{"_index":940,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authguard",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auto",{"_index":734,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["automatically",{"_index":1316,"title":{},"body":{"index.html":{}}}],["available",{"_index":1347,"title":{},"body":{"modules.html":{}}}],["back",{"_index":404,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["backend",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["background",{"_index":381,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{}}}],["bar",{"_index":997,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar'},{'name",{"_index":121,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["bar.component",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":999,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.scss",{"_index":998,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts",{"_index":995,"title":{},"body":{"components/SidBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:18",{"_index":1042,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1040,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:22",{"_index":1038,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:29",{"_index":1030,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:31",{"_index":1009,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:43",{"_index":1044,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:50",{"_index":1029,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:58",{"_index":1015,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:75",{"_index":1022,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:81",{"_index":1018,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:89",{"_index":1028,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar.component.ts:93",{"_index":1020,"title":{},"body":{"components/SidBarComponent.html":{}}}],["bar/sid",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"components/SidBarComponent.html":{},"coverage.html":{}}}],["basekt",{"_index":268,"title":{},"body":{"interfaces/Basket.html":{}}}],["basket",{"_index":84,"title":{"interfaces/Basket.html":{}},"body":{"components/AddproductComponent.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/SidBarComponent.html":{},"coverage.html":{}}}],["basket_id",{"_index":284,"title":{},"body":{"interfaces/Baskets.html":{}}}],["basketitems",{"_index":293,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/SidBarComponent.html":{}}}],["basketitems.items",{"_index":424,"title":{},"body":{"components/DetailsComponent.html":{}}}],["basketitems.length",{"_index":1060,"title":{},"body":{"components/SidBarComponent.html":{}}}],["basketitemslenght",{"_index":1019,"title":{},"body":{"components/SidBarComponent.html":{}}}],["basketitemslength",{"_index":1000,"title":{},"body":{"components/SidBarComponent.html":{}}}],["baskets",{"_index":257,"title":{"interfaces/Baskets.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"injectables/PublicDataService.html":{},"components/SidBarComponent.html":{},"coverage.html":{}}}],["baskets'},{'name",{"_index":101,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["baskets.component.html",{"_index":292,"title":{},"body":{"components/BasketsComponent.html":{}}}],["baskets.component.scss",{"_index":291,"title":{},"body":{"components/BasketsComponent.html":{}}}],["baskets/:id/details",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["baskets/addproduct",{"_index":903,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["baskets/all",{"_index":902,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["baskets/baskets.component",{"_index":644,"title":{},"body":{"modules/HomeModule.html":{}}}],["baskets/comment",{"_index":907,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["baskets/confirm",{"_index":906,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["baskets/details/details.component",{"_index":648,"title":{},"body":{"modules/HomeModule.html":{}}}],["basketscomponent",{"_index":100,"title":{"components/BasketsComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["basketstatus",{"_index":392,"title":{},"body":{"components/DetailsComponent.html":{}}}],["bearer",{"_index":676,"title":{},"body":{"injectables/IntercepterService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["belong",{"_index":972,"title":{},"body":{"interfaces/Shop.html":{}}}],["beta.33",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bolder",{"_index":470,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["boolean",{"_index":667,"title":{},"body":{"injectables/IntercepterService.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["bootstrap",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["bottom",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"dependencies.html":{}}}],["bottomnavmodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["bought",{"_index":458,"title":{},"body":{"components/DetailsComponent.html":{}}}],["break",{"_index":452,"title":{},"body":{"components/DetailsComponent.html":{}}}],["breakpoint",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["breakpointobserver",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{},"components/SidBarComponent.html":{}}}],["breakpoints",{"_index":1045,"title":{},"body":{"components/SidBarComponent.html":{}}}],["browse",{"_index":1345,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":380,"title":{},"body":{"components/BasketsComponent.html":{}}}],["btnadd",{"_index":481,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["btnavbar",{"_index":1083,"title":{},"body":{"components/SidBarComponent.html":{}}}],["btnconfirm",{"_index":385,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["btnconfirmc",{"_index":478,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["build",{"_index":1321,"title":{},"body":{"index.html":{}}}],["buildeer",{"_index":915,"title":{},"body":{"components/RegisterComponent.html":{}}}],["builder",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{}}}],["button",{"_index":571,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["calculate",{"_index":46,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["call",{"_index":317,"title":{},"body":{"components/BasketsComponent.html":{},"components/MarketsComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{}}}],["called",{"_index":570,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["calls",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["camps",{"_index":1152,"title":{},"body":{"components/UserComponent.html":{}}}],["canactivate",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["canactivate(route",{"_index":1165,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["canactivatechild",{"_index":1159,"title":{},"body":{"guards/UserGuard.html":{}}}],["canactivatechild(childroute",{"_index":1175,"title":{},"body":{"guards/UserGuard.html":{}}}],["cancel",{"_index":90,"title":{},"body":{"components/AddproductComponent.html":{},"components/commentDialog.html":{}}}],["candeactivate",{"_index":1160,"title":{},"body":{"guards/UserGuard.html":{}}}],["candeactivate(component",{"_index":1182,"title":{},"body":{"guards/UserGuard.html":{}}}],["canload",{"_index":1161,"title":{},"body":{"guards/UserGuard.html":{}}}],["canload(route",{"_index":1191,"title":{},"body":{"guards/UserGuard.html":{}}}],["card",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["case",{"_index":450,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["catcherror",{"_index":1196,"title":{},"body":{"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["catcherror((error",{"_index":1200,"title":{},"body":{"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["center",{"_index":626,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1010,"title":{},"body":{"components/SidBarComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["changement",{"_index":1039,"title":{},"body":{"components/SidBarComponent.html":{}}}],["check",{"_index":1016,"title":{},"body":{"components/SidBarComponent.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"index.html":{},"interfaces/login.html":{}}}],["checking",{"_index":1048,"title":{},"body":{"components/SidBarComponent.html":{}}}],["checkloggedin",{"_index":1216,"title":{},"body":{"injectables/UserService.html":{}}}],["checkloggedin(jwt",{"_index":1223,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["checkpermission",{"_index":1003,"title":{},"body":{"components/SidBarComponent.html":{}}}],["child",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["childroute",{"_index":1180,"title":{},"body":{"guards/UserGuard.html":{}}}],["cif",{"_index":757,"title":{},"body":{"interfaces/Market.html":{},"interfaces/Shop.html":{}}}],["class",{"_index":77,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["cli",{"_index":1308,"title":{},"body":{"index.html":{}}}],["click",{"_index":51,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/commentDialog.html":{}}}],["client",{"_index":320,"title":{},"body":{"components/BasketsComponent.html":{},"components/SidBarComponent.html":{}}}],["clients",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["clisks",{"_index":1101,"title":{},"body":{"components/UserComponent.html":{}}}],["close",{"_index":557,"title":{},"body":{"interfaces/DialogData.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{}}}],["clr",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{}}}],["cluster_appmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":630,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":631,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["code",{"_index":409,"title":{},"body":{"components/DetailsComponent.html":{},"index.html":{}}}],["col",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["col:last",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["color",{"_index":382,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{}}}],["column",{"_index":572,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["columns",{"_index":338,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["command",{"_index":1341,"title":{},"body":{"index.html":{}}}],["comment",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/commentDialog.html":{}}}],["commentdialog",{"_index":102,"title":{"components/commentDialog.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["comments",{"_index":884,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["commnet",{"_index":886,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["commonmodule",{"_index":637,"title":{},"body":{"modules/HomeModule.html":{}}}],["compodoc/compodoc",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"components/commentDialog.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":96,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"overview.html":{}}}],["confirm",{"_index":586,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{}}}],["confirmbasket",{"_index":587,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["confirmed",{"_index":319,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["confirming",{"_index":593,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["connect",{"_index":766,"title":{},"body":{"components/MarketsComponent.html":{}}}],["connected",{"_index":1017,"title":{},"body":{"components/SidBarComponent.html":{}}}],["connet",{"_index":862,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["connetced",{"_index":1170,"title":{},"body":{"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["console.clear",{"_index":1207,"title":{},"body":{"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["const",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["constructor(breakpointobserver",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{},"components/SidBarComponent.html":{}}}],["constructor(dialogref",{"_index":33,"title":{},"body":{"components/AddproductComponent.html":{},"components/OkdialogComponent.html":{},"components/commentDialog.html":{}}}],["constructor(fb",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["constructor(http",{"_index":857,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{},"injectables/PublicDataService.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["constructor(public",{"_index":809,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["constructor(publicservice",{"_index":302,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/MarketsComponent.html":{},"components/ShopsComponent.html":{}}}],["constructor(route",{"_index":818,"title":{},"body":{"components/ProductsComponent.html":{}}}],["constructor(router",{"_index":1162,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["container",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{},"components/SidBarComponent.html":{}}}],["contains",{"_index":313,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"modules/HomeModule.html":{},"components/ProductsComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["content",{"_index":599,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{}}}],["control",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/UserComponent.html":{}}}],["control_point",{"_index":846,"title":{},"body":{"components/ProductsComponent.html":{}}}],["controls",{"_index":1111,"title":{},"body":{"components/UserComponent.html":{}}}],["convert",{"_index":408,"title":{},"body":{"components/DetailsComponent.html":{}}}],["cookiename",{"_index":650,"title":{},"body":{"modules/HomeModule.html":{}}}],["cookies",{"_index":1234,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["core/models/baskets",{"_index":354,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{}}}],["core/models/product",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["core/models/shop",{"_index":982,"title":{},"body":{"components/ShopsComponent.html":{}}}],["core/services/intercepter.service",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"guards/UserGuard.html":{}}}],["core/services/user.service",{"_index":704,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["correcrt",{"_index":926,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cost",{"_index":843,"title":{},"body":{"components/ProductsComponent.html":{}}}],["coverage",{"_index":1269,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":963,"title":{},"body":{"components/RegisterComponent.html":{}}}],["created",{"_index":960,"title":{},"body":{"components/RegisterComponent.html":{}}}],["created_at",{"_index":1090,"title":{},"body":{"interfaces/User.html":{}}}],["currency",{"_index":87,"title":{},"body":{"components/AddproductComponent.html":{},"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["current",{"_index":865,"title":{},"body":{"injectables/PublicDataService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["currentroute",{"_index":1184,"title":{},"body":{"guards/UserGuard.html":{}}}],["currentstate",{"_index":1185,"title":{},"body":{"guards/UserGuard.html":{}}}],["currrent",{"_index":1027,"title":{},"body":{"components/SidBarComponent.html":{}}}],["cursor",{"_index":1085,"title":{},"body":{"components/SidBarComponent.html":{}}}],["dades",{"_index":770,"title":{},"body":{"components/MarketsComponent.html":{}}}],["dashboard",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{}}}],["data",{"_index":27,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["data.service",{"_index":360,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{}}}],["data.service.ts",{"_index":847,"title":{},"body":{"injectables/PublicDataService.html":{},"coverage.html":{}}}],["data.service.ts:102",{"_index":879,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.service.ts:112",{"_index":885,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.service.ts:21",{"_index":859,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.service.ts:31",{"_index":866,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.service.ts:40",{"_index":875,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.service.ts:51",{"_index":872,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.service.ts:60",{"_index":870,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.service.ts:73",{"_index":864,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.service.ts:82",{"_index":877,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.service.ts:93",{"_index":882,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["data.unit",{"_index":86,"title":{},"body":{"components/AddproductComponent.html":{}}}],["datas",{"_index":446,"title":{},"body":{"components/DetailsComponent.html":{}}}],["datasource",{"_index":294,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["datatable",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["de",{"_index":89,"title":{},"body":{"components/AddproductComponent.html":{},"modules/AppModule.html":{},"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["deactive",{"_index":1188,"title":{},"body":{"guards/UserGuard.html":{}}}],["decalration",{"_index":996,"title":{},"body":{"components/SidBarComponent.html":{}}}],["declaration",{"_index":635,"title":{},"body":{"modules/HomeModule.html":{}}}],["declarations",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["declared",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["decorators",{"_index":57,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/ProductsComponent.html":{},"components/commentDialog.html":{}}}],["deep",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["deep.mat",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["default",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Basket.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/ShopsComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{}}}],["definition",{"_index":12,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["delete",{"_index":1023,"title":{},"body":{"components/SidBarComponent.html":{}}}],["dependencies",{"_index":142,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":597,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["desired",{"_index":74,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["detail",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["details",{"_index":337,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{}}}],["details'},{'name",{"_index":105,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["details.component.html",{"_index":391,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":390,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailscomponent",{"_index":104,"title":{"components/DetailsComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["dev",{"_index":1314,"title":{},"body":{"index.html":{}}}],["development",{"_index":1311,"title":{},"body":{"index.html":{}}}],["dialgo",{"_index":552,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["dialog",{"_index":68,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["dialog(pop",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["dialog.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["dialog.component.html",{"_index":1263,"title":{},"body":{"components/commentDialog.html":{}}}],["dialog.component.scss",{"_index":1262,"title":{},"body":{"components/commentDialog.html":{}}}],["dialog.component.ts",{"_index":1261,"title":{},"body":{"components/commentDialog.html":{},"coverage.html":{}}}],["dialog.component.ts:17",{"_index":1264,"title":{},"body":{"components/commentDialog.html":{}}}],["dialog.component.ts:24",{"_index":1267,"title":{},"body":{"components/commentDialog.html":{}}}],["dialog.component.ts:25",{"_index":1266,"title":{},"body":{"components/commentDialog.html":{}}}],["dialog.component.ts:28",{"_index":1265,"title":{},"body":{"components/commentDialog.html":{}}}],["dialog/comment",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/commentDialog.html":{},"coverage.html":{}}}],["dialogdata",{"_index":35,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{}},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/ProductsComponent.html":{},"components/commentDialog.html":{},"coverage.html":{}}}],["dialogref",{"_index":28,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":558,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["dialogref.afterclosed().subscribe((res",{"_index":964,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dialogref.componentinstance.content",{"_index":603,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["dialogref.componentinstance.title",{"_index":602,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["didn't",{"_index":564,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["different",{"_index":595,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{}}}],["direction",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["directive",{"_index":94,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["directives",{"_index":124,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1320,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1325,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1026,"title":{},"body":{"components/SidBarComponent.html":{}}}],["display",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{}}}],["displayed",{"_index":339,"title":{},"body":{"components/BasketsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["displayedcolumns",{"_index":295,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["dist",{"_index":1324,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["dosen't",{"_index":955,"title":{},"body":{"components/RegisterComponent.html":{}}}],["downlogout",{"_index":1078,"title":{},"body":{"components/SidBarComponent.html":{}}}],["drfine",{"_index":76,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["dsfadsfdaf",{"_index":1120,"title":{},"body":{"components/UserComponent.html":{}}}],["dynamic",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1335,"title":{},"body":{"index.html":{}}}],["element",{"_index":93,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["element.basket_id",{"_index":366,"title":{},"body":{"components/BasketsComponent.html":{}}}],["element.items.foreach((ele",{"_index":438,"title":{},"body":{"components/DetailsComponent.html":{}}}],["element.items.length",{"_index":367,"title":{},"body":{"components/BasketsComponent.html":{}}}],["element.shop_id",{"_index":433,"title":{},"body":{"components/DetailsComponent.html":{}}}],["element.shop_name",{"_index":435,"title":{},"body":{"components/DetailsComponent.html":{}}}],["elements",{"_index":768,"title":{},"body":{"components/MarketsComponent.html":{},"components/SidBarComponent.html":{}}}],["email",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["enabled",{"_index":1001,"title":{},"body":{"components/SidBarComponent.html":{}}}],["end",{"_index":405,"title":{},"body":{"components/DetailsComponent.html":{},"components/SidBarComponent.html":{},"injectables/UserService.html":{},"index.html":{},"interfaces/login.html":{}}}],["endpoint",{"_index":1254,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["enter",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["entered",{"_index":54,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/commentDialog.html":{}}}],["entrycomponents",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["enviroment",{"_index":1248,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["environment",{"_index":888,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/login.html":{},"miscellaneous/variables.html":{}}}],["environment.api_url",{"_index":887,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["environments/environment",{"_index":889,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["error",{"_index":565,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["error.error",{"_index":1201,"title":{},"body":{"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["errorevent",{"_index":1203,"title":{},"body":{"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["eur\":\"symbol\":undefined:\"de",{"_index":88,"title":{},"body":{"components/AddproductComponent.html":{},"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["event",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"injectables/IntercepterService.html":{},"components/ProductsComponent.html":{}}}],["event.target",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["event.value",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["execute",{"_index":1332,"title":{},"body":{"index.html":{}}}],["exists",{"_index":867,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["export",{"_index":69,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["exports",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["extensions",{"_index":1215,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["extract",{"_index":401,"title":{},"body":{"components/DetailsComponent.html":{},"components/MarketsComponent.html":{}}}],["extracted",{"_index":330,"title":{},"body":{"components/BasketsComponent.html":{},"components/MarketsComponent.html":{}}}],["extraction",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{}}}],["f9b826",{"_index":384,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{}}}],["false",{"_index":946,"title":{},"body":{"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["field",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["files",{"_index":1317,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1150,"title":{},"body":{"components/UserComponent.html":{}}}],["filter",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["filtervalue",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["find",{"_index":327,"title":{},"body":{"components/BasketsComponent.html":{}}}],["first",{"_index":954,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fixed",{"_index":1073,"title":{},"body":{"components/SidBarComponent.html":{}}}],["flag",{"_index":1327,"title":{},"body":{"index.html":{}}}],["flex",{"_index":739,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{}}}],["flexlayoutmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["focused",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["font",{"_index":468,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["forb",{"_index":939,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form",{"_index":402,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["formbuilder",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["formcontrol",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["forms",{"_index":916,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["formsmodule,reactiveformsmodule",{"_index":647,"title":{},"body":{"modules/HomeModule.html":{}}}],["full",{"_index":463,"title":{},"body":{"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["further",{"_index":1337,"title":{},"body":{"index.html":{}}}],["general",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["generate",{"_index":1319,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1307,"title":{},"body":{"index.html":{}}}],["get(url",{"_index":897,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["getbasketlength",{"_index":298,"title":{},"body":{"components/BasketsComponent.html":{},"components/SidBarComponent.html":{}}}],["getbasketlength(id",{"_index":311,"title":{},"body":{"components/BasketsComponent.html":{}}}],["getbasketlength(row.basket_id",{"_index":378,"title":{},"body":{"components/BasketsComponent.html":{}}}],["getbaskets",{"_index":848,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["getdata",{"_index":299,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/UserComponent.html":{}}}],["getmaerkets",{"_index":761,"title":{},"body":{"components/MarketsComponent.html":{}}}],["getmarkets",{"_index":849,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["getprice",{"_index":30,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["getproductbyshopid",{"_index":850,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["getproductbyshopid(id",{"_index":869,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["gets",{"_index":1247,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["getshops",{"_index":851,"title":{},"body":{"injectables/PublicDataService.html":{},"components/ShopsComponent.html":{}}}],["getshopsbyid",{"_index":852,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["getshopsbyid(id",{"_index":874,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["getstatusstring",{"_index":395,"title":{},"body":{"components/DetailsComponent.html":{}}}],["getstatusstring(str",{"_index":406,"title":{},"body":{"components/DetailsComponent.html":{}}}],["getting",{"_index":1050,"title":{"index.html":{}},"body":{"components/SidBarComponent.html":{}}}],["getunits",{"_index":853,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["getuserdata",{"_index":1217,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["global",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go",{"_index":1339,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1004,"title":{},"body":{"components/SidBarComponent.html":{}}}],["graph",{"_index":1346,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{}}}],["gte",{"_index":871,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["guard",{"_index":497,"title":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["guards",{"_index":1157,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"overview.html":{}}}],["guards/user",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/user.guard",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guigui",{"_index":989,"title":{},"body":{"components/ShopsComponent.html":{}}}],["handl",{"_index":1012,"title":{},"body":{"components/SidBarComponent.html":{}}}],["handle",{"_index":309,"title":{},"body":{"components/BasketsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/commentDialog.html":{}}}],["handled",{"_index":1171,"title":{},"body":{"guards/UserGuard.html":{}}}],["handles",{"_index":349,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{}}}],["hanldes",{"_index":1177,"title":{},"body":{"guards/UserGuard.html":{}}}],["headername",{"_index":653,"title":{},"body":{"modules/HomeModule.html":{}}}],["headers",{"_index":665,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["height",{"_index":629,"title":{},"body":{"components/HomeComponent.html":{},"components/SidBarComponent.html":{}}}],["help",{"_index":1338,"title":{},"body":{"index.html":{}}}],["here",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{}}}],["hideagain",{"_index":912,"title":{},"body":{"components/RegisterComponent.html":{}}}],["home",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{},"components/SidBarComponent.html":{}}}],["home'},{'name",{"_index":107,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["home.component.html",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/baskets/baskets.component",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home/baskets/details/details.component",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home/home.component",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home/home.module",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["home/markets/markets.component",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home/products/products.component",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home/shops/shops.component",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":106,"title":{"components/HomeComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":153,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["html",{"_index":92,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["htmlinputelement).value",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["http",{"_index":860,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["http://localhost:4200",{"_index":1315,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":858,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["httpclientmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientxsrfmodule",{"_index":646,"title":{},"body":{"modules/HomeModule.html":{}}}],["httpclientxsrfmodule.withoptions",{"_index":649,"title":{},"body":{"modules/HomeModule.html":{}}}],["httperrorresponse",{"_index":1250,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["httpevent",{"_index":668,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["httphandler",{"_index":663,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["httprequest",{"_index":661,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["https://alavora.cat/api",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":269,"title":{},"body":{"interfaces/Basket.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{}}}],["id_product",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["id_shop",{"_index":901,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["identifier",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["idmarket",{"_index":976,"title":{},"body":{"components/ShopsComponent.html":{}}}],["idr",{"_index":781,"title":{},"body":{"components/MarketsComponent.html":{}}}],["ids",{"_index":340,"title":{},"body":{"components/BasketsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["image",{"_index":813,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Shop.html":{}}}],["image_url",{"_index":812,"title":{},"body":{"interfaces/Product.html":{}}}],["implements",{"_index":290,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["important",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["imports",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{},"miscellaneous/variables.html":{}}}],["inect",{"_index":764,"title":{},"body":{"components/MarketsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["information",{"_index":573,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{}}}],["informations",{"_index":944,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inherit",{"_index":1077,"title":{},"body":{"components/SidBarComponent.html":{}}}],["init",{"_index":777,"title":{},"body":{"components/MarketsComponent.html":{},"components/ShopsComponent.html":{}}}],["inject",{"_index":62,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"injectables/IntercepterService.html":{},"components/OkdialogComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"components/commentDialog.html":{}}}],["inject(mat_dialog_data",{"_index":58,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/commentDialog.html":{}}}],["injectable",{"_index":655,"title":{"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"injectables/UserService.html":{}},"body":{"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["injectables",{"_index":656,"title":{},"body":{"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":43,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["injects",{"_index":307,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{}}}],["input",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["inputs",{"_index":802,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["instanceof",{"_index":1202,"title":{},"body":{"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["intercept",{"_index":659,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["intercept(request",{"_index":660,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["intercepter",{"_index":658,"title":{},"body":{"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["intercepterservice",{"_index":154,"title":{"injectables/IntercepterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"guards/UserGuard.html":{},"coverage.html":{},"overview.html":{}}}],["interface",{"_index":67,"title":{"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Market.html":{},"interfaces/Product.html":{},"interfaces/Shop.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"interfaces/login.html":{}},"body":{"components/AddproductComponent.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Market.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"interfaces/Shop.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["interfaces",{"_index":266,"title":{},"body":{"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Market.html":{},"interfaces/Product.html":{},"interfaces/Shop.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"interfaces/login.html":{},"overview.html":{}}}],["internal",{"_index":1172,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["ishandset",{"_index":1002,"title":{},"body":{"components/SidBarComponent.html":{}}}],["item",{"_index":83,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{}}}],["items",{"_index":285,"title":{},"body":{"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/SidBarComponent.html":{}}}],["items[products",{"_index":288,"title":{},"body":{"interfaces/Baskets.html":{}}}],["json",{"_index":873,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["jwt",{"_index":1226,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["karma",{"_index":1334,"title":{},"body":{"index.html":{}}}],["keyboard_arrow_right",{"_index":379,"title":{},"body":{"components/BasketsComponent.html":{}}}],["keyboard_backspace",{"_index":1069,"title":{},"body":{"components/SidBarComponent.html":{}}}],["label",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["landing",{"_index":1179,"title":{},"body":{"guards/UserGuard.html":{}}}],["large",{"_index":627,"title":{},"body":{"components/HomeComponent.html":{}}}],["lastname",{"_index":1243,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["later",{"_index":1228,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["latitude",{"_index":969,"title":{},"body":{"interfaces/Shop.html":{},"interfaces/User.html":{}}}],["layout",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["lazy",{"_index":1178,"title":{},"body":{"guards/UserGuard.html":{}}}],["lcoalstorage",{"_index":1235,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["left",{"_index":466,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["legend",{"_index":91,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"overview.html":{}}}],["lenght",{"_index":315,"title":{},"body":{"components/BasketsComponent.html":{}}}],["length",{"_index":363,"title":{},"body":{"components/BasketsComponent.html":{}}}],["length]=\"markets?.data?.length",{"_index":788,"title":{},"body":{"components/MarketsComponent.html":{}}}],["length]=\"markets?.length",{"_index":794,"title":{},"body":{"components/MarketsComponent.html":{}}}],["length]=\"shops?.data?.length",{"_index":990,"title":{},"body":{"components/ShopsComponent.html":{}}}],["length]=\"shops?.length",{"_index":992,"title":{},"body":{"components/ShopsComponent.html":{}}}],["libraries",{"_index":636,"title":{},"body":{"modules/HomeModule.html":{}}}],["list",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/ShopsComponent.html":{}}}],["listreturned",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["lists",{"_index":814,"title":{},"body":{"interfaces/Product.html":{}}}],["load",{"_index":776,"title":{},"body":{"components/MarketsComponent.html":{},"components/RegisterComponent.html":{}}}],["loads",{"_index":322,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/MarketsComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{}}}],["local",{"_index":1132,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["locale_id",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["localede",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["localstorage.clear",{"_index":1057,"title":{},"body":{"components/SidBarComponent.html":{}}}],["localstorage.getitem('adress",{"_index":1154,"title":{},"body":{"components/UserComponent.html":{}}}],["localstorage.getitem('email",{"_index":1153,"title":{},"body":{"components/UserComponent.html":{}}}],["localstorage.getitem('name",{"_index":1047,"title":{},"body":{"components/SidBarComponent.html":{},"components/UserComponent.html":{}}}],["localstorage.getitem('phone",{"_index":1156,"title":{},"body":{"components/UserComponent.html":{}}}],["localstorage.getitem('token",{"_index":673,"title":{},"body":{"injectables/IntercepterService.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["localstorage.setitem('adress",{"_index":714,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["localstorage.setitem('created_at",{"_index":1141,"title":{},"body":{"components/UserComponent.html":{}}}],["localstorage.setitem('email",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["localstorage.setitem('id",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["localstorage.setitem('latitude",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["localstorage.setitem('longitude",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["localstorage.setitem('name",{"_index":712,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["localstorage.setitem('phone",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["localstorage.setitem('token",{"_index":710,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('updated_at",{"_index":1148,"title":{},"body":{"components/UserComponent.html":{}}}],["location",{"_index":1008,"title":{},"body":{"components/SidBarComponent.html":{}}}],["log",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["logged",{"_index":1031,"title":{},"body":{"components/SidBarComponent.html":{},"guards/UserLoggedGuard.html":{}}}],["logged.guard",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["logged.guard.ts",{"_index":1209,"title":{},"body":{"guards/UserLoggedGuard.html":{},"coverage.html":{}}}],["logged.guard.ts:19",{"_index":1210,"title":{},"body":{"guards/UserLoggedGuard.html":{}}}],["logged.guard.ts:32",{"_index":1211,"title":{},"body":{"guards/UserLoggedGuard.html":{}}}],["login",{"_index":262,"title":{"interfaces/login.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["login'},{'name",{"_index":109,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["login(email",{"_index":1230,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["login.component.html",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login/register/register.component",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":108,"title":{"components/LoginComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":1005,"title":{},"body":{"components/SidBarComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["longitude",{"_index":970,"title":{},"body":{"interfaces/Shop.html":{},"interfaces/User.html":{}}}],["make",{"_index":1222,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["map",{"_index":670,"title":{},"body":{"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["map((event",{"_index":678,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["map((res",{"_index":1205,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["map((result",{"_index":1035,"title":{},"body":{"components/SidBarComponent.html":{}}}],["margin",{"_index":465,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{}}}],["market",{"_index":755,"title":{"interfaces/Market.html":{}},"body":{"interfaces/Market.html":{},"components/MarketsComponent.html":{},"injectables/PublicDataService.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"coverage.html":{}}}],["market.name",{"_index":793,"title":{},"body":{"components/MarketsComponent.html":{},"components/ProductsComponent.html":{}}}],["market_id",{"_index":899,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["markets",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/SidBarComponent.html":{}}}],["markets'},{'name",{"_index":111,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["markets.component.html",{"_index":760,"title":{},"body":{"components/MarketsComponent.html":{}}}],["markets.component.scss",{"_index":759,"title":{},"body":{"components/MarketsComponent.html":{}}}],["markets/markets.component",{"_index":643,"title":{},"body":{"modules/HomeModule.html":{}}}],["markets/shop/:id",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["markets/shop/:id/products",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["marketscomponent",{"_index":110,"title":{"components/MarketsComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["marlets",{"_index":971,"title":{},"body":{"interfaces/Shop.html":{}}}],["mat",{"_index":353,"title":{},"body":{"components/BasketsComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{}}}],["mat_dialog_data",{"_index":65,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/commentDialog.html":{}}}],["matbadgemodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["matcardmodule",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":956,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":127,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["matdialogmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["matdialogref",{"_index":34,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/OkdialogComponent.html":{},"components/commentDialog.html":{}}}],["material",{"_index":336,"title":{},"body":{"components/BasketsComponent.html":{}}}],["matgridlistmodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["matinputmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["matlistmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["matmenumodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginator",{"_index":346,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["matpaginatormodule",{"_index":640,"title":{},"body":{"modules/HomeModule.html":{}}}],["matradiomodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["matsidenavmodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":641,"title":{},"body":{"modules/HomeModule.html":{}}}],["mattable",{"_index":350,"title":{},"body":{"components/BasketsComponent.html":{}}}],["mattabledatasource",{"_index":357,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["mattabledatasource(this.basketitems",{"_index":372,"title":{},"body":{"components/BasketsComponent.html":{}}}],["mattabledatasource(this.products",{"_index":447,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["mattablemodule",{"_index":639,"title":{},"body":{"modules/HomeModule.html":{}}}],["mattoolbarmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["me/update",{"_index":1259,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["means",{"_index":1214,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["menu",{"_index":1068,"title":{},"body":{"components/SidBarComponent.html":{}}}],["message",{"_index":596,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["method",{"_index":318,"title":{},"body":{"components/BasketsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{}}}],["methods",{"_index":29,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{}}}],["min",{"_index":732,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["minibtn",{"_index":464,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["miscellaneous",{"_index":1350,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modele",{"_index":634,"title":{},"body":{"modules/HomeModule.html":{}}}],["models/market",{"_index":890,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["models/shop",{"_index":891,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["models/user",{"_index":1249,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["module",{"_index":139,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["modules",{"_index":141,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":622,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["multi",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"interfaces/Basket.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"index.html":{},"interfaces/login.html":{}}}],["nav",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["navigate",{"_index":774,"title":{},"body":{"components/MarketsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"index.html":{}}}],["navigateto",{"_index":1006,"title":{},"body":{"components/SidBarComponent.html":{}}}],["navigation",{"_index":310,"title":{},"body":{"components/BasketsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{}}}],["nd",{"_index":1024,"title":{},"body":{"components/SidBarComponent.html":{}}}],["necessary",{"_index":943,"title":{},"body":{"components/RegisterComponent.html":{}}}],["new",{"_index":371,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"interfaces/login.html":{}}}],["next",{"_index":662,"title":{},"body":{"injectables/IntercepterService.html":{},"guards/UserGuard.html":{}}}],["next.handle(request).pipe",{"_index":677,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["nextstate",{"_index":1186,"title":{},"body":{"guards/UserGuard.html":{}}}],["ng",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{}}}],["ngoninit",{"_index":300,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{}}}],["ngx",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["null",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["number",{"_index":49,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{}}}],["number(ele.total_price",{"_index":441,"title":{},"body":{"components/DetailsComponent.html":{}}}],["number(id",{"_index":782,"title":{},"body":{"components/MarketsComponent.html":{},"injectables/PublicDataService.html":{}}}],["number(this.idmarket",{"_index":985,"title":{},"body":{"components/ShopsComponent.html":{}}}],["number(this.route.snapshot.parammap.get('id",{"_index":430,"title":{},"body":{"components/DetailsComponent.html":{}}}],["number(un.id",{"_index":549,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["nurim",{"_index":786,"title":{},"body":{"components/MarketsComponent.html":{}}}],["obervable",{"_index":1229,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["object",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":666,"title":{},"body":{"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["observable.tostring",{"_index":1204,"title":{},"body":{"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["observe(breakpoints.handset",{"_index":1034,"title":{},"body":{"components/SidBarComponent.html":{}}}],["occured",{"_index":567,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["ok",{"_index":52,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["okdialog",{"_index":798,"title":{},"body":{"components/OkdialogComponent.html":{},"components/commentDialog.html":{}}}],["okdialog'},{'name",{"_index":103,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["okdialog.component.html",{"_index":800,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["okdialog.component.scss",{"_index":799,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["okdialogcomponent",{"_index":112,"title":{"components/OkdialogComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["onclose",{"_index":801,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["one",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{}}}],["oninit",{"_index":63,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["onnavigate",{"_index":762,"title":{},"body":{"components/MarketsComponent.html":{},"components/ShopsComponent.html":{}}}],["onnavigate(id",{"_index":772,"title":{},"body":{"components/MarketsComponent.html":{},"components/ShopsComponent.html":{}}}],["onnoclick",{"_index":31,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/commentDialog.html":{}}}],["onsubmit",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["open",{"_index":551,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["opendialog",{"_index":553,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["opendialog(title",{"_index":921,"title":{},"body":{"components/RegisterComponent.html":{}}}],["openokdialog",{"_index":816,"title":{},"body":{"components/ProductsComponent.html":{},"components/UserComponent.html":{}}}],["openokdialog(title",{"_index":600,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/UserComponent.html":{}}}],["opens",{"_index":1105,"title":{},"body":{"components/UserComponent.html":{}}}],["operation",{"_index":925,"title":{},"body":{"components/RegisterComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{}}}],["out",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"guards/UserLoggedGuard.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1340,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1289,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":326,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/SidBarComponent.html":{},"index.html":{}}}],["pageindex]=\"0",{"_index":789,"title":{},"body":{"components/MarketsComponent.html":{},"components/ShopsComponent.html":{}}}],["pagesize]=\"10",{"_index":790,"title":{},"body":{"components/MarketsComponent.html":{},"components/ShopsComponent.html":{}}}],["pagesizeoptions]=\"[5",{"_index":791,"title":{},"body":{"components/MarketsComponent.html":{},"components/ShopsComponent.html":{}}}],["pagination",{"_index":422,"title":{},"body":{"components/DetailsComponent.html":{}}}],["paginator",{"_index":296,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{}}}],["paginator[length]=\"markets?.data?.length\"[pageindex]=\"0\"[pagesize]=\"10\"[pagesizeoptions]=\"[5",{"_index":795,"title":{},"body":{"components/MarketsComponent.html":{}}}],["paginator[length]=\"markets?.length\"[pageindex]=\"0\"[pagesize]=\"10\"[pagesizeoptions]=\"[5",{"_index":796,"title":{},"body":{"components/MarketsComponent.html":{}}}],["paginator[length]=\"shops?.data?.length\"[pageindex]=\"0\"[pagesize]=\"10\"[pagesizeoptions]=\"[5",{"_index":993,"title":{},"body":{"components/ShopsComponent.html":{}}}],["param",{"_index":78,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{}}}],["params",{"_index":898,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["parent",{"_index":805,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["pass",{"_index":924,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShopsComponent.html":{}}}],["passed",{"_index":922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["password",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["password).subscribe((res",{"_index":708,"title":{},"body":{"components/LoginComponent.html":{}}}],["password:'adasda",{"_index":1119,"title":{},"body":{"components/UserComponent.html":{}}}],["passwordagain",{"_index":937,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["person_pin",{"_index":1066,"title":{},"body":{"components/SidBarComponent.html":{}}}],["phone",{"_index":932,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["phone).subscribe",{"_index":958,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phone:'asdasf",{"_index":1121,"title":{},"body":{"components/UserComponent.html":{}}}],["pipe",{"_index":905,"title":{},"body":{"injectables/PublicDataService.html":{},"components/SidBarComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["pipe(map((result",{"_index":900,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["pipe(tap((res",{"_index":1257,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["point",{"_index":1025,"title":{},"body":{"components/SidBarComponent.html":{}}}],["pointer",{"_index":1086,"title":{},"body":{"components/SidBarComponent.html":{}}}],["position",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{},"components/SidBarComponent.html":{}}}],["possible",{"_index":765,"title":{},"body":{"components/MarketsComponent.html":{}}}],["post",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["post(url",{"_index":1256,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["postbasket",{"_index":854,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["postbasket(shop_id",{"_index":878,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["postitemtobasket",{"_index":855,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["postitemtobasket(product_id",{"_index":881,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["postitemtobasket(this.shopid",{"_index":582,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["postprofile",{"_index":1218,"title":{},"body":{"injectables/UserService.html":{}}}],["postprofile(name",{"_index":1236,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["postprofile(this.name",{"_index":1135,"title":{},"body":{"components/UserComponent.html":{}}}],["postuser",{"_index":1219,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["postuser(name",{"_index":1239,"title":{},"body":{"injectables/UserService.html":{}}}],["potscomment",{"_index":856,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["potscomment(shop_id",{"_index":883,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["potscomment(this.shopid",{"_index":560,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["power_settings_new",{"_index":1067,"title":{},"body":{"components/SidBarComponent.html":{}}}],["preparing",{"_index":455,"title":{},"body":{"components/DetailsComponent.html":{}}}],["press",{"_index":920,"title":{},"body":{"components/RegisterComponent.html":{}}}],["previous",{"_index":1021,"title":{},"body":{"components/SidBarComponent.html":{}}}],["price",{"_index":47,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/Basket.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"interfaces/Unit.html":{}}}],["primary",{"_index":1081,"title":{},"body":{"components/SidBarComponent.html":{}}}],["private",{"_index":361,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["privce",{"_index":278,"title":{},"body":{"interfaces/Basket.html":{}}}],["processed",{"_index":590,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["prod",{"_index":1326,"title":{},"body":{"index.html":{}}}],["prod.id",{"_index":543,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["prod.price",{"_index":548,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["prod.units.foreach((un",{"_index":544,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["prodcut",{"_index":279,"title":{},"body":{"interfaces/Basket.html":{}}}],["product",{"_index":72,"title":{"interfaces/Product.html":{}},"body":{"components/AddproductComponent.html":{},"interfaces/Basket.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/ShopsComponent.html":{},"coverage.html":{}}}],["product.id",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["product.name",{"_index":842,"title":{},"body":{"components/ProductsComponent.html":{}}}],["product.price",{"_index":844,"title":{},"body":{"components/ProductsComponent.html":{}}}],["product.product_name",{"_index":459,"title":{},"body":{"components/DetailsComponent.html":{}}}],["product.quantity",{"_index":460,"title":{},"body":{"components/DetailsComponent.html":{}}}],["product.total_price",{"_index":462,"title":{},"body":{"components/DetailsComponent.html":{}}}],["product.unit_symbol",{"_index":461,"title":{},"body":{"components/DetailsComponent.html":{}}}],["product_id",{"_index":270,"title":{},"body":{"interfaces/Basket.html":{},"injectables/PublicDataService.html":{}}}],["product_name",{"_index":271,"title":{},"body":{"interfaces/Basket.html":{},"components/DetailsComponent.html":{}}}],["production",{"_index":1328,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":44,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{}}}],["products'},{'name",{"_index":114,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["products.component.html",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["products.component.scss",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["products/products.component",{"_index":645,"title":{},"body":{"modules/HomeModule.html":{}}}],["productscomponent",{"_index":113,"title":{"components/ProductsComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["profile",{"_index":1103,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["project",{"_index":1306,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1173,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["properties",{"_index":25,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["protected",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["protocol",{"_index":863,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["protractor",{"_index":1336,"title":{},"body":{"index.html":{}}}],["provide",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":672,"title":{},"body":{"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["provider",{"_index":1253,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["providers",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["publi",{"_index":1011,"title":{},"body":{"components/SidBarComponent.html":{}}}],["public",{"_index":26,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["publicdata",{"_index":1007,"title":{},"body":{"components/SidBarComponent.html":{}}}],["publicdataservice",{"_index":303,"title":{"injectables/PublicDataService.html":{}},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"coverage.html":{}}}],["publicservice",{"_index":306,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{}}}],["purchase",{"_index":589,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/commentDialog.html":{}}}],["purschased",{"_index":416,"title":{},"body":{"components/DetailsComponent.html":{}}}],["putlogout",{"_index":1220,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["qty",{"_index":71,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/ProductsComponent.html":{}}}],["quanitity",{"_index":85,"title":{},"body":{"components/AddproductComponent.html":{}}}],["quantity",{"_index":272,"title":{},"body":{"interfaces/Basket.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{}}}],["quantoty",{"_index":70,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["radio",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["raised",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["re",{"_index":1130,"title":{},"body":{"components/UserComponent.html":{}}}],["reactiveformsmodule",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["readable",{"_index":412,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ready",{"_index":457,"title":{},"body":{"components/DetailsComponent.html":{}}}],["receive",{"_index":1164,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["recovered",{"_index":1197,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["redirect",{"_index":325,"title":{},"body":{"components/BasketsComponent.html":{}}}],["ref",{"_index":804,"title":{},"body":{"components/OkdialogComponent.html":{},"components/commentDialog.html":{}}}],["reference",{"_index":1342,"title":{},"body":{"index.html":{}}}],["register",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["register'},{'name",{"_index":116,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["register(name",{"_index":1242,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.html",{"_index":911,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":910,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":115,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["registerlocaledata",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["related",{"_index":917,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":1013,"title":{},"body":{"components/SidBarComponent.html":{},"index.html":{}}}],["removed",{"_index":342,"title":{},"body":{"components/BasketsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["reordered",{"_index":343,"title":{},"body":{"components/BasketsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["repeat",{"_index":952,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["request",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"injectables/IntercepterService.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["request.clone",{"_index":674,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["request.headers.set('authorization",{"_index":675,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["requests",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["requird",{"_index":1151,"title":{},"body":{"components/UserComponent.html":{}}}],["required",{"_index":1238,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["res",{"_index":584,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["res.access_token",{"_index":711,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.adress",{"_index":1140,"title":{},"body":{"components/UserComponent.html":{}}}],["res.created_at",{"_index":1142,"title":{},"body":{"components/UserComponent.html":{}}}],["res.email",{"_index":1143,"title":{},"body":{"components/UserComponent.html":{}}}],["res.latitude",{"_index":1145,"title":{},"body":{"components/UserComponent.html":{}}}],["res.longitude",{"_index":1146,"title":{},"body":{"components/UserComponent.html":{}}}],["res.name",{"_index":1139,"title":{},"body":{"components/UserComponent.html":{}}}],["res.phone",{"_index":1147,"title":{},"body":{"components/UserComponent.html":{}}}],["res.updated_at",{"_index":1149,"title":{},"body":{"components/UserComponent.html":{}}}],["res.user",{"_index":709,"title":{},"body":{"components/LoginComponent.html":{}}}],["res['id",{"_index":1206,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["reset",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["response",{"_index":448,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/PublicDataService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["result",{"_index":126,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.data",{"_index":895,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["result.matches",{"_index":1036,"title":{},"body":{"components/SidBarComponent.html":{}}}],["results",{"_index":128,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":53,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData-1.html":{},"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["returns",{"_index":48,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData-1.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"interfaces/login.html":{}}}],["revceived",{"_index":443,"title":{},"body":{"components/DetailsComponent.html":{}}}],["right",{"_index":621,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{}}}],["ripple",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["root'},{'name",{"_index":99,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["route",{"_index":396,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["router",{"_index":304,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["routermodule",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1168,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["routes",{"_index":241,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":738,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["row.id",{"_index":784,"title":{},"body":{"components/MarketsComponent.html":{}}}],["row.name",{"_index":785,"title":{},"body":{"components/MarketsComponent.html":{}}}],["row.shop_name",{"_index":377,"title":{},"body":{"components/BasketsComponent.html":{}}}],["run",{"_index":1312,"title":{},"body":{"index.html":{}}}],["running",{"_index":1329,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":669,"title":{},"body":{"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/login.html":{}}}],["rxjs/operators",{"_index":671,"title":{},"body":{"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["same",{"_index":328,"title":{},"body":{"components/BasketsComponent.html":{}}}],["save",{"_index":415,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["scaffolding",{"_index":1318,"title":{},"body":{"index.html":{}}}],["screen",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{},"components/SidBarComponent.html":{}}}],["sdad",{"_index":1117,"title":{},"body":{"components/UserComponent.html":{}}}],["search",{"_index":841,"title":{},"body":{"components/ProductsComponent.html":{}}}],["second",{"_index":930,"title":{},"body":{"components/RegisterComponent.html":{}}}],["segments",{"_index":1192,"title":{},"body":{"guards/UserGuard.html":{}}}],["select",{"_index":577,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["selected",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["seller",{"_index":329,"title":{},"body":{"components/BasketsComponent.html":{}}}],["send",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["sended",{"_index":1212,"title":{},"body":{"guards/UserLoggedGuard.html":{}}}],["sends",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["serve",{"_index":1313,"title":{},"body":{"index.html":{}}}],["server",{"_index":1233,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"interfaces/login.html":{}}}],["service",{"_index":399,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["session",{"_index":1092,"title":{},"body":{"interfaces/User.html":{}}}],["set",{"_index":1106,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["setunit",{"_index":817,"title":{},"body":{"components/ProductsComponent.html":{}}}],["setunit(product",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["sfdfsdf",{"_index":1118,"title":{},"body":{"components/UserComponent.html":{}}}],["shared/dialogs/addproduct/addproduct.component",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/dialogs/comment",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/dialogs/okdialog/okdialog.component",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/sid",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["sharereplay",{"_index":1037,"title":{},"body":{"components/SidBarComponent.html":{}}}],["sheet",{"_index":909,"title":{},"body":{"components/RegisterComponent.html":{}}}],["shipping",{"_index":731,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["shop",{"_index":314,"title":{"interfaces/Shop.html":{}},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/MarketsComponent.html":{},"interfaces/Product.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"coverage.html":{}}}],["shop.name",{"_index":991,"title":{},"body":{"components/ShopsComponent.html":{}}}],["shop_id",{"_index":286,"title":{},"body":{"interfaces/Baskets.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{}}}],["shop_name",{"_index":287,"title":{},"body":{"interfaces/Baskets.html":{},"components/BasketsComponent.html":{}}}],["shop_two",{"_index":1064,"title":{},"body":{"components/SidBarComponent.html":{}}}],["shopid",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["shopname",{"_index":393,"title":{},"body":{"components/DetailsComponent.html":{}}}],["shopping:hover",{"_index":1084,"title":{},"body":{"components/SidBarComponent.html":{}}}],["shopping_basket",{"_index":1065,"title":{},"body":{"components/SidBarComponent.html":{}}}],["shopping_cart",{"_index":1070,"title":{},"body":{"components/SidBarComponent.html":{}}}],["shops",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/PublicDataService.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{}}}],["shops'},{'name",{"_index":118,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["shops.component.html",{"_index":975,"title":{},"body":{"components/ShopsComponent.html":{}}}],["shops.component.scss",{"_index":974,"title":{},"body":{"components/ShopsComponent.html":{}}}],["shops/:id/products",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shops/shops.component",{"_index":638,"title":{},"body":{"modules/HomeModule.html":{}}}],["shopscomponent",{"_index":117,"title":{"components/ShopsComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["show",{"_index":334,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{}}}],["showdetails",{"_index":301,"title":{},"body":{"components/BasketsComponent.html":{}}}],["showdetails(id",{"_index":323,"title":{},"body":{"components/BasketsComponent.html":{}}}],["shows",{"_index":594,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["sid",{"_index":120,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["sidbarcomponent",{"_index":119,"title":{"components/SidBarComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["sidenav",{"_index":1071,"title":{},"body":{"components/SidBarComponent.html":{}}}],["situation",{"_index":598,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["size",{"_index":471,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/SidBarComponent.html":{}}}],["soon",{"_index":591,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"index.html":{},"interfaces/login.html":{}}}],["specific",{"_index":876,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["src/.../environment.prod.ts",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/models/basket",{"_index":428,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/core/models/basket.ts",{"_index":267,"title":{},"body":{"interfaces/Basket.html":{},"coverage.html":{}}}],["src/app/core/models/baskets.ts",{"_index":283,"title":{},"body":{"interfaces/Baskets.html":{},"coverage.html":{}}}],["src/app/core/models/market",{"_index":775,"title":{},"body":{"components/MarketsComponent.html":{}}}],["src/app/core/models/market.ts",{"_index":756,"title":{},"body":{"interfaces/Market.html":{},"coverage.html":{}}}],["src/app/core/models/product.ts",{"_index":811,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/app/core/models/shop.ts",{"_index":967,"title":{},"body":{"interfaces/Shop.html":{},"coverage.html":{}}}],["src/app/core/models/unit",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["src/app/core/models/unit.ts",{"_index":1087,"title":{},"body":{"interfaces/Unit.html":{},"coverage.html":{}}}],["src/app/core/models/user.ts",{"_index":1089,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/intercepter.service.ts",{"_index":657,"title":{},"body":{"injectables/IntercepterService.html":{},"coverage.html":{}}}],["src/app/core/services/intercepter.service.ts:16",{"_index":664,"title":{},"body":{"injectables/IntercepterService.html":{}}}],["src/app/core/services/public",{"_index":359,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1213,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["src/app/core/services/user.service.ts:103",{"_index":1237,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:123",{"_index":1240,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:138",{"_index":1241,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:20",{"_index":1221,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:27",{"_index":1246,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:35",{"_index":1231,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:49",{"_index":1245,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:67",{"_index":1224,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:89",{"_index":1227,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/guards/user",{"_index":1208,"title":{},"body":{"guards/UserLoggedGuard.html":{},"coverage.html":{}}}],["src/app/guards/user.guard.ts",{"_index":1158,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/guards/user.guard.ts:120",{"_index":1194,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/guards/user.guard.ts:28",{"_index":1163,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/guards/user.guard.ts:41",{"_index":1169,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/guards/user.guard.ts:81",{"_index":1176,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/guards/user.guard.ts:99",{"_index":1187,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/home/baskets/baskets.component.ts",{"_index":289,"title":{},"body":{"components/BasketsComponent.html":{},"coverage.html":{}}}],["src/app/home/baskets/baskets.component.ts:16",{"_index":348,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/baskets.component.ts:18",{"_index":352,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/baskets.component.ts:20",{"_index":333,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/baskets.component.ts:22",{"_index":331,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/baskets.component.ts:24",{"_index":344,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/baskets.component.ts:26",{"_index":305,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/baskets.component.ts:37",{"_index":321,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/baskets.component.ts:45",{"_index":312,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/baskets.component.ts:55",{"_index":316,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/baskets.component.ts:68",{"_index":324,"title":{},"body":{"components/BasketsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts",{"_index":389,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["src/app/home/baskets/details/details.component.ts:17",{"_index":421,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:19",{"_index":427,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:21",{"_index":417,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:23",{"_index":423,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:25",{"_index":414,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:27",{"_index":425,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:29",{"_index":426,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:31",{"_index":398,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:42",{"_index":418,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:44",{"_index":413,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:49",{"_index":403,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/baskets/details/details.component.ts:77",{"_index":407,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:13",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.module.ts",{"_index":632,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/markets/markets.component.ts",{"_index":758,"title":{},"body":{"components/MarketsComponent.html":{},"coverage.html":{}}}],["src/app/home/markets/markets.component.ts:16",{"_index":763,"title":{},"body":{"components/MarketsComponent.html":{}}}],["src/app/home/markets/markets.component.ts:28",{"_index":771,"title":{},"body":{"components/MarketsComponent.html":{}}}],["src/app/home/markets/markets.component.ts:33",{"_index":769,"title":{},"body":{"components/MarketsComponent.html":{}}}],["src/app/home/markets/markets.component.ts:42",{"_index":773,"title":{},"body":{"components/MarketsComponent.html":{}}}],["src/app/home/products/products.component",{"_index":1268,"title":{},"body":{"components/commentDialog.html":{}}}],["src/app/home/products/products.component.ts",{"_index":482,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["src/app/home/products/products.component.ts:104",{"_index":826,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:127",{"_index":824,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:158",{"_index":820,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:206",{"_index":822,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:229",{"_index":825,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:29",{"_index":835,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:32",{"_index":819,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:45",{"_index":829,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:50",{"_index":832,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:53",{"_index":828,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:56",{"_index":827,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:59",{"_index":836,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:62",{"_index":839,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:65",{"_index":838,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:68",{"_index":840,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:71",{"_index":833,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:74",{"_index":831,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:77",{"_index":837,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:79",{"_index":830,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:81",{"_index":834,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:84",{"_index":823,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/products/products.component.ts:97",{"_index":821,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/home/shops/shops.component.ts",{"_index":973,"title":{},"body":{"components/ShopsComponent.html":{},"coverage.html":{}}}],["src/app/home/shops/shops.component.ts:18",{"_index":981,"title":{},"body":{"components/ShopsComponent.html":{}}}],["src/app/home/shops/shops.component.ts:20",{"_index":977,"title":{},"body":{"components/ShopsComponent.html":{}}}],["src/app/home/shops/shops.component.ts:34",{"_index":979,"title":{},"body":{"components/ShopsComponent.html":{}}}],["src/app/home/shops/shops.component.ts:39",{"_index":978,"title":{},"body":{"components/ShopsComponent.html":{}}}],["src/app/home/shops/shops.component.ts:58",{"_index":980,"title":{},"body":{"components/ShopsComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:14",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/register/register.component.ts",{"_index":908,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/login/register/register.component.ts:16",{"_index":928,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/login/register/register.component.ts:18",{"_index":929,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/login/register/register.component.ts:20",{"_index":938,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/login/register/register.component.ts:46",{"_index":914,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/login/register/register.component.ts:57",{"_index":927,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/login/register/register.component.ts:62",{"_index":918,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/login/register/register.component.ts:98",{"_index":923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/shared/dialogs/addproduct/addproduct.component",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["src/app/shared/dialogs/addproduct/addproduct.component.ts",{"_index":10,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"coverage.html":{}}}],["src/app/shared/dialogs/addproduct/addproduct.component.ts:19",{"_index":37,"title":{},"body":{"components/AddproductComponent.html":{}}}],["src/app/shared/dialogs/addproduct/addproduct.component.ts:26",{"_index":60,"title":{},"body":{"components/AddproductComponent.html":{}}}],["src/app/shared/dialogs/addproduct/addproduct.component.ts:27",{"_index":59,"title":{},"body":{"components/AddproductComponent.html":{}}}],["src/app/shared/dialogs/addproduct/addproduct.component.ts:33",{"_index":50,"title":{},"body":{"components/AddproductComponent.html":{}}}],["src/app/shared/dialogs/addproduct/addproduct.component.ts:40",{"_index":45,"title":{},"body":{"components/AddproductComponent.html":{}}}],["src/app/shared/dialogs/comment",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/commentDialog.html":{},"coverage.html":{}}}],["src/app/shared/dialogs/okdialog/okdialog.component",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["src/app/shared/dialogs/okdialog/okdialog.component.ts",{"_index":797,"title":{},"body":{"components/OkdialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/dialogs/okdialog/okdialog.component.ts:12",{"_index":806,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["src/app/shared/dialogs/okdialog/okdialog.component.ts:14",{"_index":803,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["src/app/shared/dialogs/okdialog/okdialog.component.ts:19",{"_index":808,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["src/app/shared/dialogs/okdialog/okdialog.component.ts:21",{"_index":807,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["src/app/shared/sid",{"_index":994,"title":{},"body":{"components/SidBarComponent.html":{},"coverage.html":{}}}],["src/app/user/user.component.ts",{"_index":1093,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/user/user.component.ts:109",{"_index":1104,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:15",{"_index":1109,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:17",{"_index":1112,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:19",{"_index":1113,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:21",{"_index":1114,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:23",{"_index":1107,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:25",{"_index":1097,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:34",{"_index":1108,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:38",{"_index":1110,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:40",{"_index":1115,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:55",{"_index":1099,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:61",{"_index":1100,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:98",{"_index":1098,"title":{},"body":{"components/UserComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1305,"title":{"index.html":{}},"body":{}}],["state",{"_index":1167,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["statements",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["stats¡us",{"_index":1189,"title":{},"body":{"guards/UserGuard.html":{}}}],["status",{"_index":273,"title":{},"body":{"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/DetailsComponent.html":{},"injectables/IntercepterService.html":{},"injectables/PublicDataService.html":{},"guards/UserGuard.html":{}}}],["staus",{"_index":411,"title":{},"body":{"components/DetailsComponent.html":{}}}],["sticky",{"_index":1082,"title":{},"body":{"components/SidBarComponent.html":{}}}],["storage",{"_index":1133,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["store",{"_index":345,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/MarketsComponent.html":{},"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["stored",{"_index":1323,"title":{},"body":{"index.html":{}}}],["str",{"_index":410,"title":{},"body":{"components/DetailsComponent.html":{}}}],["string",{"_index":75,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"injectables/IntercepterService.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["string(res.id",{"_index":1144,"title":{},"body":{"components/UserComponent.html":{}}}],["string(user.id",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{}}}],["strore",{"_index":332,"title":{},"body":{"components/BasketsComponent.html":{}}}],["style",{"_index":13,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["subscribe",{"_index":583,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/UserComponent.html":{}}}],["subscribe((res",{"_index":561,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["success",{"_index":585,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["support",{"_index":1343,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1344,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":449,"title":{},"body":{"components/DetailsComponent.html":{}}}],["symbol",{"_index":281,"title":{},"body":{"interfaces/Basket.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"interfaces/Unit.html":{}}}],["tabel",{"_index":419,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":297,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":892,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["tap((res",{"_index":1255,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["tbl",{"_index":386,"title":{},"body":{"components/BasketsComponent.html":{},"components/SidBarComponent.html":{}}}],["tblelem",{"_index":476,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["tblprod",{"_index":480,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["teh",{"_index":574,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["tenplate",{"_index":15,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["test",{"_index":1331,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1330,"title":{},"body":{"index.html":{}}}],["text",{"_index":55,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/commentDialog.html":{}}}],["this.adress",{"_index":1128,"title":{},"body":{"components/UserComponent.html":{}}}],["this.basketitems",{"_index":369,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{}}}],["this.basketitems.foreach((element",{"_index":365,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{}}}],["this.basketitems[this.shop_id].items",{"_index":432,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.basketitemslength",{"_index":1059,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.basketstatus",{"_index":436,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.breakpointobserver",{"_index":1033,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.checkpermission",{"_index":1049,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.comment",{"_index":556,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.comment).subscribe(res",{"_index":581,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.data.price",{"_index":81,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["this.data.qty",{"_index":80,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{}}}],["this.datasource",{"_index":370,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.datasource.filter",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.datasource.paginator",{"_index":373,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.dialog.open(addproductcomponent",{"_index":578,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.dialog.open(commentdialog",{"_index":554,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.dialog.open(okdialogcomponent",{"_index":601,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["this.dialogref.close",{"_index":79,"title":{},"body":{"components/AddproductComponent.html":{},"interfaces/DialogData-1.html":{},"components/OkdialogComponent.html":{},"components/commentDialog.html":{}}}],["this.email",{"_index":1126,"title":{},"body":{"components/UserComponent.html":{}}}],["this.enabled",{"_index":1053,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.fb.group",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["this.getbasketlength",{"_index":1051,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.getdata",{"_index":362,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/UserComponent.html":{}}}],["this.getmaerkets",{"_index":778,"title":{},"body":{"components/MarketsComponent.html":{}}}],["this.getshops",{"_index":983,"title":{},"body":{"components/ShopsComponent.html":{}}}],["this.getstatusstring(element.status",{"_index":437,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.http",{"_index":896,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["this.http.get(url).pipe",{"_index":1258,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["this.http.get(url).pipe(map((result",{"_index":894,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["this.http.post(url",{"_index":904,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["this.http.put(url",{"_index":1260,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["this.id_product",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.idmarket",{"_index":984,"title":{},"body":{"components/ShopsComponent.html":{}}}],["this.location.back",{"_index":1062,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.markets",{"_index":780,"title":{},"body":{"components/MarketsComponent.html":{}}}],["this.name",{"_index":1046,"title":{},"body":{"components/SidBarComponent.html":{},"components/UserComponent.html":{}}}],["this.opendialog('error",{"_index":945,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.opendialog('success",{"_index":961,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.openokdialog",{"_index":566,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.openokdialog('comment",{"_index":562,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.openokdialog('error",{"_index":576,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/UserComponent.html":{}}}],["this.openokdialog('notice",{"_index":563,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.openokdialog('success",{"_index":1136,"title":{},"body":{"components/UserComponent.html":{}}}],["this.paginator",{"_index":374,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.password",{"_index":1122,"title":{},"body":{"components/UserComponent.html":{}}}],["this.phone",{"_index":1155,"title":{},"body":{"components/UserComponent.html":{}}}],["this.price",{"_index":546,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.products",{"_index":431,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.products.foreach((prod",{"_index":542,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.products.push(ele",{"_index":439,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.publicdata.getbaskets().subscribe((res",{"_index":1058,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.publicservice",{"_index":559,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.publicservice.getbaskets().subscribe((data",{"_index":368,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{}}}],["this.publicservice.getmarkets().subscribe((data",{"_index":779,"title":{},"body":{"components/MarketsComponent.html":{}}}],["this.publicservice.getproductbyshopid(this.shopid).subscribe((data",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.publicservice.getshops().subscribe((data",{"_index":988,"title":{},"body":{"components/ShopsComponent.html":{}}}],["this.publicservice.getshopsbyid(id).subscribe((data",{"_index":986,"title":{},"body":{"components/ShopsComponent.html":{}}}],["this.publicservice.postbasket(this.shopid).subscribe",{"_index":588,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.publicservice.potscomment(this.shopid",{"_index":580,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.qty",{"_index":579,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.repeat",{"_index":1124,"title":{},"body":{"components/UserComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{},"components/ShopsComponent.html":{}}}],["this.router.navigatebyurl",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{},"guards/UserLoggedGuard.html":{}}}],["this.router.navigatebyurl('/baskets",{"_index":1061,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":1198,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.router.navigatebyurl('baskets",{"_index":592,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.router.navigatebyurl('login",{"_index":965,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigatebyurl('markets/shop",{"_index":783,"title":{},"body":{"components/MarketsComponent.html":{}}}],["this.router.navigatebyurl('register",{"_index":966,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigatebyurl(this.router.url",{"_index":376,"title":{},"body":{"components/BasketsComponent.html":{},"components/ShopsComponent.html":{}}}],["this.shop_id",{"_index":429,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.shopid",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.shopname",{"_index":434,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.shops",{"_index":987,"title":{},"body":{"components/ShopsComponent.html":{}}}],["this.table.datasource",{"_index":375,"title":{},"body":{"components/BasketsComponent.html":{}}}],["this.token",{"_index":1052,"title":{},"body":{"components/SidBarComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["this.totalprice",{"_index":440,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.unit",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.unitsymbol",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["this.url",{"_index":893,"title":{},"body":{"injectables/PublicDataService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["this.user.checkloggedin(this.token).pipe",{"_index":1199,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["this.user.checkloggedin(this.token).subscribe((res",{"_index":1054,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.user.postuser(name",{"_index":957,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.putlogout().subscribe((res",{"_index":1056,"title":{},"body":{"components/SidBarComponent.html":{}}}],["this.userlogin.get('email')?.value",{"_index":705,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userlogin.get('password')?.value",{"_index":706,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userregister.get('address')?.value",{"_index":948,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userregister.get('email')?.value",{"_index":950,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userregister.get('name')?.value",{"_index":947,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userregister.get('password')?.value",{"_index":951,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userregister.get('passwordagain')?.value",{"_index":953,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userregister.get('phone')?.value",{"_index":949,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userregister.valid",{"_index":942,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice",{"_index":1134,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.getuserdata().subscribe((res",{"_index":1138,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.login(email",{"_index":707,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userupdate.get('adress')?.value",{"_index":1129,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userupdate.get('email')?.value",{"_index":1127,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userupdate.get('password')?.value",{"_index":1123,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userupdate.get('repeat')?.value",{"_index":1125,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userupdate.setvalue({email",{"_index":1116,"title":{},"body":{"components/UserComponent.html":{}}}],["thiw",{"_index":569,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["those",{"_index":445,"title":{},"body":{"components/DetailsComponent.html":{},"components/SidBarComponent.html":{}}}],["throwstmt",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["ths",{"_index":880,"title":{},"body":{"injectables/PublicDataService.html":{}}}],["title",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["title}}{{content",{"_index":810,"title":{},"body":{"components/OkdialogComponent.html":{}}}],["token",{"_index":652,"title":{},"body":{"modules/HomeModule.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"components/SidBarComponent.html":{},"interfaces/User.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["tool",{"_index":861,"title":{},"body":{"injectables/PublicDataService.html":{},"guards/UserGuard.html":{}}}],["toolbar",{"_index":1076,"title":{},"body":{"components/SidBarComponent.html":{}}}],["toolbar.mat",{"_index":1080,"title":{},"body":{"components/SidBarComponent.html":{}}}],["top",{"_index":473,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/SidBarComponent.html":{}}}],["total",{"_index":280,"title":{},"body":{"interfaces/Basket.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["total_price",{"_index":274,"title":{},"body":{"interfaces/Basket.html":{},"components/DetailsComponent.html":{}}}],["totalprice",{"_index":394,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["trigerred",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["triggered",{"_index":919,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["true",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"interfaces/login.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":962,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tslib",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"interfaces/Basket.html":{},"interfaces/Baskets.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"injectables/IntercepterService.html":{},"components/LoginComponent.html":{},"interfaces/Market.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"interfaces/Shop.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"coverage.html":{},"interfaces/login.html":{},"miscellaneous/variables.html":{}}}],["un.price",{"_index":547,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["un.symbol",{"_index":550,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["un.value",{"_index":845,"title":{},"body":{"components/ProductsComponent.html":{}}}],["un.viewvalue",{"_index":545,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["unconfirmed",{"_index":451,"title":{},"body":{"components/DetailsComponent.html":{}}}],["undefined",{"_index":420,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["underline",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["unit",{"_index":73,"title":{"interfaces/Unit.html":{}},"body":{"components/AddproductComponent.html":{},"interfaces/Basket.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"interfaces/Unit.html":{},"coverage.html":{},"index.html":{}}}],["unit_id",{"_index":275,"title":{},"body":{"interfaces/Basket.html":{},"injectables/PublicDataService.html":{}}}],["unit_symbol",{"_index":276,"title":{},"body":{"interfaces/Basket.html":{}}}],["units",{"_index":277,"title":{},"body":{"interfaces/Basket.html":{},"interfaces/DialogData.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{}}}],["unitsymbol",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["unknown",{"_index":1183,"title":{},"body":{"guards/UserGuard.html":{}}}],["up",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["update",{"_index":1102,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["updated",{"_index":1137,"title":{},"body":{"components/UserComponent.html":{}}}],["updated_at",{"_index":1091,"title":{},"body":{"interfaces/User.html":{}}}],["upgrade",{"_index":1131,"title":{},"body":{"components/UserComponent.html":{}}}],["url",{"_index":14,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/HomeComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"injectables/UserService.html":{},"interfaces/login.html":{},"miscellaneous/variables.html":{}}}],["urlsegment",{"_index":1193,"title":{},"body":{"guards/UserGuard.html":{}}}],["urltree",{"_index":1174,"title":{},"body":{"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{}}}],["use",{"_index":400,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/UserService.html":{},"index.html":{},"interfaces/login.html":{}}}],["useclass",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1181,"title":{},"body":{"guards/UserGuard.html":{}}}],["user",{"_index":123,"title":{"interfaces/User.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"components/commentDialog.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["user.adress",{"_index":715,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.component.html",{"_index":1095,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.scss",{"_index":1094,"title":{},"body":{"components/UserComponent.html":{}}}],["user.email",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.id",{"_index":1055,"title":{},"body":{"components/SidBarComponent.html":{}}}],["user.latitude",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.longitude",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.name",{"_index":713,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.phone",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{}}}],["user/user.component",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["usercomponent",{"_index":122,"title":{"components/UserComponent.html":{}},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{},"coverage.html":{},"overview.html":{}}}],["userguard",{"_index":243,"title":{"guards/UserGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["userloggedguard",{"_index":245,"title":{"guards/UserLoggedGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UserLoggedGuard.html":{},"coverage.html":{}}}],["userlogin",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{}}}],["username",{"_index":1244,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["userregister",{"_index":913,"title":{},"body":{"components/RegisterComponent.html":{}}}],["users",{"_index":1032,"title":{},"body":{"components/SidBarComponent.html":{}}}],["userservice",{"_index":686,"title":{"injectables/UserService.html":{}},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"guards/UserLoggedGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["userupdate",{"_index":1096,"title":{},"body":{"components/UserComponent.html":{}}}],["usevalue",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":1225,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["validation",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["validators",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["validators.compose",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["validators.compose([validators.required",{"_index":935,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":936,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(9",{"_index":934,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern('^[0",{"_index":933,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern('^[a",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["validators.required",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["value",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/ProductsComponent.html":{},"injectables/PublicDataService.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"interfaces/Unit.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":95,"title":{},"body":{"components/AddproductComponent.html":{},"components/AppComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/commentDialog.html":{}}}],["variable",{"_index":444,"title":{},"body":{"components/DetailsComponent.html":{},"components/SidBarComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["variables",{"_index":1351,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1309,"title":{},"body":{"index.html":{}}}],["via",{"_index":1333,"title":{},"body":{"index.html":{}}}],["view",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["viewchild",{"_index":355,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["viewchild(matpaginator",{"_index":347,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/ProductsComponent.html":{}}}],["viewchild(mattable",{"_index":351,"title":{},"body":{"components/BasketsComponent.html":{}}}],["viewvalue",{"_index":1088,"title":{},"body":{"interfaces/Unit.html":{}}}],["visibility",{"_index":730,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["visibility_off",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["void",{"_index":56,"title":{},"body":{"components/AddproductComponent.html":{},"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/LoginComponent.html":{},"components/MarketsComponent.html":{},"components/OkdialogComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/ShopsComponent.html":{},"components/SidBarComponent.html":{},"components/UserComponent.html":{},"components/commentDialog.html":{}}}],["wanted",{"_index":1195,"title":{},"body":{"guards/UserGuard.html":{}}}],["web",{"_index":1232,"title":{},"body":{"injectables/UserService.html":{},"interfaces/login.html":{}}}],["webs",{"_index":767,"title":{},"body":{"components/MarketsComponent.html":{}}}],["website",{"_index":1014,"title":{},"body":{"components/SidBarComponent.html":{}}}],["weight",{"_index":469,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["whaere",{"_index":1041,"title":{},"body":{"components/SidBarComponent.html":{}}}],["width",{"_index":387,"title":{},"body":{"components/BasketsComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SidBarComponent.html":{}}}],["xsrf",{"_index":651,"title":{},"body":{"modules/HomeModule.html":{}}}],["yes",{"_index":1190,"title":{},"body":{"guards/UserGuard.html":{}}}],["z",{"_index":1074,"title":{},"body":{"components/SidBarComponent.html":{}}}],["z0",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["z]{2,4",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["zone.js",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddproductComponent.html":{"url":"components/AddproductComponent.html","title":"component - AddproductComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddproductComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialogs/addproduct/addproduct.component.ts\n\n\n    \n        Description\n    \n    \n        definition of component and its style url and tenplate url \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addproduct\n            \n\n            \n                styleUrls\n                ./addproduct.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./addproduct.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPrice\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialogs/addproduct/addproduct.component.ts:19\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this is the dialogref\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected data from products component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrice\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialogs/addproduct/addproduct.component.ts:40\n                \n            \n\n\n            \n                \n                    Calculate the price\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the price\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialogs/addproduct/addproduct.component.ts:33\n                \n            \n\n\n            \n                \n                    when click ok then return the entered text\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/dialogs/addproduct/addproduct.component.ts:27\n                            \n                        \n\n                \n                    \n                        injected data from products component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/dialogs/addproduct/addproduct.component.ts:26\n                            \n                        \n\n                \n                    \n                        this is the dialogref\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n/** interface of the Dialog */\nexport interface DialogData {\n  /** quantoty of products */\n  qty: number;\n  /** price of product */\n  price: number;\n  /** unit of the desired product */\n  unit: string;\n}\n/** definition of component and its style url and tenplate url */\n@Component({\n  selector: 'app-addproduct',\n  templateUrl: './addproduct.component.html',\n  styleUrls: ['./addproduct.component.scss'],\n})\n/** drfine the class */\nexport class AddproductComponent {\n  /**\n   *constructor\n   * @param dialogRef this is the dialogref\n   * @param data injected data from products component\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  /**\n   * when click ok then return the entered text\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  /**\n   * Calculate the price\n   * @returns the price\n   */\n  getPrice(): number {\n    return this.data.qty * this.data.price;\n  }\n}\n\n    \n\n    \n        \n  Add item to your basket\n  \n    Quanitity\n    \n     {{ data.unit }}\n  \n\n\n  Price: {{ getPrice() | currency: \"EUR\":\"symbol\":undefined:\"de-DE\" }}\n  \n\n\n\n  Cancel\n  \n    Ok\n  \n\n\n    \n\n    \n                \n                    ./addproduct.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add item to your basket      Quanitity         {{ data.unit }}    Price: {{ getPrice() | currency: \"EUR\":\"symbol\":undefined:\"de-DE\" }}    Cancel      Ok  '\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddproductComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Define the component and its file of style file of template\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Clients'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                        title of app \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * Define the component and its file of style file of template\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\n/**\n * define the class\n */\nexport class AppComponent {\n  /** title of app */\n  title = 'Clients';\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAddproductComponent\n\nAddproductComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddproductComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nOkdialogComponent\n\nOkdialogComponent\n\nAppModule -->\n\nOkdialogComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSidBarComponent\n\nSidBarComponent\n\nAppModule -->\n\nSidBarComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\ncommentDialog\n\ncommentDialog\n\nAppModule -->\n\ncommentDialog->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nIntercepterService\n\nIntercepterService\n\nAppModule -->\n\nIntercepterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddproductComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            OkdialogComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            SidBarComponent\n                        \n                        \n                            UserComponent\n                        \n                        \n                            commentDialog\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            OkdialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            IntercepterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            HomeModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MatDialogModule } from '@angular/material/dialog';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport localeDe from '@angular/common/locales/de';\nimport { registerLocaleData } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { HomeModule } from './home/home.module';\nimport { LoginComponent } from './login/login.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RegisterComponent } from './login/register/register.component';\nimport { SidBarComponent } from './shared/sid-bar/sid-bar.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { OkdialogComponent } from './shared/dialogs/okdialog/okdialog.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BottomNavModule } from 'ngx-bottom-nav';\nimport { LOCALE_ID } from '@angular/core';\nimport { commentDialog } from './shared/dialogs/comment-dialog/comment-dialog.component';\nimport { IntercepterService } from './core/services/intercepter.service';\nimport { AddproductComponent } from './shared/dialogs/addproduct/addproduct.component';\nimport { UserComponent } from './user/user.component';\n\nregisterLocaleData(localeDe);\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    SidBarComponent,\n    OkdialogComponent,\n    commentDialog,\n    AddproductComponent,\n    UserComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatDialogModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatBadgeModule,\n    MatListModule,\n    HomeModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    MatGridListModule,\n    MatMenuModule,\n    BottomNavModule,\n    HttpClientModule,\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'de-DE' },\n    { provide: HTTP_INTERCEPTORS, useClass: IntercepterService, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [OkdialogComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ShopsComponent } from './home/shops/shops.component';\nimport { BasketsComponent } from './home/baskets/baskets.component';\nimport { MarketsComponent } from './home/markets/markets.component';\nimport { RegisterComponent } from './login/register/register.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserGuard } from './guards/user.guard';\nimport { UserLoggedGuard } from './guards/user-logged.guard';\nimport { ProductsComponent } from './home/products/products.component';\nimport { UserComponent } from './user/user.component';\nimport { DetailsComponent } from './home/baskets/details/details.component';\n/** where our routes declared and protected by authguard . */\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [UserGuard] },\n  { path: 'markets', component: MarketsComponent, canActivate: [UserGuard] },\n  { path: 'baskets', component: BasketsComponent, canActivate: [UserGuard] },\n  {\n    path: 'markets/shop/:id',\n    component: ShopsComponent,\n    canActivate: [UserGuard],\n  },\n  { path: 'shops', component: ShopsComponent, canActivate: [UserGuard] },\n  {\n    path: 'markets/shop/:id/products',\n    component: ProductsComponent,\n    canActivate: [UserGuard],\n  },\n  {\n    path: 'shops/:id/products',\n    component: ProductsComponent,\n    canActivate: [UserGuard],\n  },\n  { path: 'user', component: UserComponent, canActivate: [UserGuard] },\n  { path: 'login', component: LoginComponent, canActivate: [UserLoggedGuard] },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    canActivate: [UserLoggedGuard],\n  },\n  {\n    path: 'baskets/:id/details',\n    component: DetailsComponent,\n    canActivate: [UserGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [UserGuard],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Basket.html":{"url":"interfaces/Basket.html","title":"interface - Basket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Basket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/basket.ts\n        \n\n            \n                Description\n            \n            \n                interface of Basekt\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        price\n                                \n                                \n                                        product_id\n                                \n                                \n                                        product_name\n                                \n                                \n                                        quantity\n                                \n                                \n                                        status\n                                \n                                \n                                        total_price\n                                \n                                \n                                        unit_id\n                                \n                                \n                                        unit_symbol\n                                \n                                \n                                        units\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id of basket \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    privce of prodcut in basket\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product_id\n                                    \n                                \n                                \n                                    \n                                        product_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id of product\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product_name\n                                    \n                                \n                                \n                                    \n                                        product_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of product\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                    \n                                \n                                \n                                    \n                                        quantity:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    quantity of product \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    status of product\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_price\n                                    \n                                \n                                \n                                    \n                                        total_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    total price in basket \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit_id\n                                    \n                                \n                                \n                                    \n                                        unit_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unit id  [default]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit_symbol\n                                    \n                                \n                                \n                                    \n                                        unit_symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unit symbol  [default\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        units\n                                    \n                                \n                                \n                                    \n                                        units:         Unit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    array of units \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Unit } from './unit';\n/**\n * interface of Basekt\n */\nexport interface Basket {\n  /** id of basket */\n  id: number;\n  /** privce of prodcut in basket*/\n  price: string;\n  /** quantity of product */\n  quantity: string;\n  /** id of product*/\n  product_id: number;\n  /** name of product*/\n  product_name: string;\n  /** status of product*/\n  status: string;\n  /** total price in basket */\n  total_price: number;\n  /** unit id  [default]*/\n  unit_id: number;\n  /** unit symbol  [default*/\n  unit_symbol: string;\n  /** array of units */\n  units: Unit[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Baskets.html":{"url":"interfaces/Baskets.html","title":"interface - Baskets","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Baskets\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/baskets.ts\n        \n\n            \n                Description\n            \n            \n                interface of list of baskets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        basket_id\n                                \n                                \n                                        items\n                                \n                                \n                                        shop_id\n                                \n                                \n                                        shop_name\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        basket_id\n                                    \n                                \n                                \n                                    \n                                        basket_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    basket_id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:         Basket[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Basket[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    items[products] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shop_id\n                                    \n                                \n                                \n                                    \n                                        shop_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    shop_id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shop_name\n                                    \n                                \n                                \n                                    \n                                        shop_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    shop_name \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    status \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Basket } from './basket';\n/** interface of list of baskets */\nexport interface Baskets {\n  /** basket_id */\n  basket_id: number;\n  /** shop_id */\n  shop_id: number;\n  /** shop_name */\n  shop_name: string;\n  /** items[products] */\n  items: Basket[];\n  /** status */\n  status: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BasketsComponent.html":{"url":"components/BasketsComponent.html","title":"component - BasketsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BasketsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/baskets/baskets.component.ts\n\n\n    \n        Description\n    \n    \n        define component and its style path and template path \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-baskets\n            \n\n            \n                styleUrls\n                ./baskets.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./baskets.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                basketItems\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                paginator\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBasketLength\n                            \n                            \n                                getData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(publicService: PublicDataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/baskets/baskets.component.ts:26\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publicService\n                                                  \n                                                        \n                                                                        PublicDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injects the public api\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                will handle navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBasketLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetBasketLength(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/baskets/baskets.component.ts:45\n                \n            \n\n\n            \n                \n                    returns the quantity of items in basket\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this contains the shop id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        basket lenght\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/baskets/baskets.component.ts:55\n                \n            \n\n\n            \n                \n                    call the get method to get all the confirmed baskets of the client. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/baskets/baskets.component.ts:37\n                \n            \n\n\n            \n                \n                    when app loads \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDetails\n                        \n                        \n                    \n                \n            \n            \n                \nshowDetails(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/baskets/baskets.component.ts:68\n                \n            \n\n\n            \n                \n                    redirect to page where the client can find all products from the same seller.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this will be extracted from url\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            basketItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Baskets[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/baskets.component.ts:22\n                            \n                        \n\n                \n                    \n                        array to strore baskets list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/baskets.component.ts:20\n                            \n                        \n\n                \n                    \n                        data to show in the angular material table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['shop_name', 'quantity', 'details']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/baskets.component.ts:26\n                            \n                        \n\n                \n                    \n                        Columns displayed in the table. Columns IDs can be added, removed, or reordered. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/baskets.component.ts:24\n                            \n                        \n\n                \n                    \n                        where to store products \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/baskets.component.ts:16\n                            \n                        \n\n                \n                    \n                        handles paginator \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatTable)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/baskets.component.ts:18\n                            \n                        \n\n                \n                    \n                        angular mat table \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Router } from '@angular/router';\nimport { Baskets } from './../../core/models/baskets';\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { PublicDataService } from 'src/app/core/services/public-data.service';\n/** define component and its style path and template path */\n@Component({\n  selector: 'app-baskets',\n  templateUrl: './baskets.component.html',\n  styleUrls: ['./baskets.component.scss'],\n})\n/** define the class */\nexport class BasketsComponent implements OnInit {\n  /** handles paginator */\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  /** angular mat table */\n  @ViewChild(MatTable) table!: MatTable;\n  /** data to show in the angular material table */\n  dataSource: any;\n  /** array to strore baskets list */\n  basketItems: Baskets[] = [];\n  /** where to store products */\n  public items: any[] = [];\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['shop_name', 'quantity', 'details'];\n  /**\n   *constructor\n   * @param publicService injects the public api\n   * @param router will handle navigation\n   */\n  constructor(\n    private publicService: PublicDataService,\n    private router: Router\n  ) {}\n  /** when app loads */\n  ngOnInit(): void {\n    this.getData();\n  }\n  /**\n   *   returns the quantity of items in basket\n   * @param id this contains the shop id\n   * @returns basket lenght\n   */\n  getBasketLength(id: number): number {\n    let length = 0;\n    this.basketItems.forEach((element) => {\n      if (element.basket_id == id) {\n        length = element.items.length;\n      }\n    });\n    return length;\n  }\n  /** call the get method to get all the confirmed baskets of the client. */\n  getData() {\n    this.publicService.getBaskets().subscribe((data) => {\n      this.basketItems = data;\n      this.dataSource = new MatTableDataSource(this.basketItems);\n      this.dataSource.paginator = this.paginator;\n      this.table.dataSource = this.dataSource;\n    });\n  }\n\n  /**\n   * redirect to page where the client can find all products from the same seller.\n   * @param id this will be extracted from url\n   */\n  showDetails(id: number) {\n    this.router.navigateByUrl(this.router.url + '/' + id + '/details');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Shop\n      {{ row.shop_name }}\n    \n\n    \n      Quantity\n      \n        {{ getBasketLength(row.basket_id) }}\n      \n    \n\n    \n      Quantity\n      \n        \n          \n            keyboard_arrow_right\n          \n        \n      \n    \n\n    \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./baskets.component.scss\n                \n                \n.btn-show{\n  background-color: #649C9D;\n  color: #F9B826;\n\n}\n.btnconfirm{\n  background-color: #F9B826;\n  color: #649C9D;\n\n}\n.tbl{\n  background-color: #F9B826;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Shop      {{ row.shop_name }}              Quantity              {{ getBasketLength(row.basket_id) }}                    Quantity                                    keyboard_arrow_right                                          '\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BasketsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/baskets/details/details.component.ts\n\n\n    \n        Description\n    \n    \n        define component \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n            \n                styleUrls\n                ./details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                basketItems\n                            \n                            \n                                basketStatus\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                products\n                            \n                            \n                                shop_id\n                            \n                            \n                                shopName\n                            \n                            \n                                totalPrice\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getStatusString\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(publicService: PublicDataService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/baskets/details/details.component.ts:31\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publicService\n                                                  \n                                                        \n                                                                        PublicDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the injects the Public service api handles\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this will use it to extract id form url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/baskets/details/details.component.ts:49\n                \n            \n\n\n            \n                \n                    get the data from the back end of the items of the basket  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatusString\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatusString(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/baskets/details/details.component.ts:77\n                \n            \n\n\n            \n                \n                    will convert a status code to string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contains the number of staus\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        status as readable string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/baskets/details/details.component.ts:44\n                \n            \n\n\n            \n                \n                    when the page loads  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            basketItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Baskets[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/details/details.component.ts:25\n                            \n                        \n\n                \n                    \n                        Items of basket   \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            basketStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/details/details.component.ts:31\n                            \n                        \n\n                \n                    \n                        where to save the status of the Purschased Basket \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/details/details.component.ts:21\n                            \n                        \n\n                \n                    \n                        data for the table  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['product_name', 'quantity', 'total_price']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/details/details.component.ts:42\n                            \n                        \n\n                \n                    \n                        define the columns of the tabel \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator | undefined\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/details/details.component.ts:17\n                            \n                        \n\n                \n                    \n                        table Pagination \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Basket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/details/details.component.ts:23\n                            \n                        \n\n                \n                    \n                        where to store products which is basketItems.items \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shop_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/details/details.component.ts:27\n                            \n                        \n\n                \n                    \n                        to save id of shop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shopName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/details/details.component.ts:29\n                            \n                        \n\n                \n                    \n                        to store the name of the shop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/baskets/details/details.component.ts:19\n                            \n                        \n\n                \n                    \n                        to save total price \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Baskets } from './../../../core/models/baskets';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\nimport { Basket } from 'src/app/core/models/basket';\nimport { PublicDataService } from 'src/app/core/services/public-data.service';\n/** define component */\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss'],\n})\n/** define class */\nexport class DetailsComponent implements OnInit {\n  /** table Pagination */\n  @ViewChild(MatPaginator) paginator: MatPaginator | undefined;\n  /** to save total price */\n  totalPrice: number = 0;\n  /** data for the table  */\n  dataSource: any;\n  /** where to store products which is basketItems.items */\n  products: Basket[] = [];\n  /** Items of basket   */\n  basketItems: Baskets[] = [];\n  /** to save id of shop */\n  shop_id!: number;\n  /** to store the name of the shop */\n  shopName: string = '';\n  /** where to save the status of the Purschased Basket */\n  basketStatus: string = '';\n  /**\n   *constructor\n   * @param publicService the injects the Public service api handles\n   * @param route this will use it to extract id form url\n   */\n  constructor(\n    private publicService: PublicDataService,\n    private route: ActivatedRoute\n  ) {}\n  /** define the columns of the tabel */\n  displayedColumns = ['product_name', 'quantity', 'total_price'];\n  /** when the page loads  */\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  /** get the data from the back end of the items of the basket  */\n  getData() {\n    this.publicService.getBaskets().subscribe((data) => {\n      this.shop_id = Number(this.route.snapshot.paramMap.get('id'));\n\n      this.basketItems = data;\n\n      // this.products = this.basketItems[this.shop_id].items;\n      this.basketItems.forEach((element) => {\n        if (element.shop_id === this.shop_id) {\n          this.shopName = element.shop_name;\n          this.basketStatus = this.getStatusString(element.status);\n          element.items.forEach((ele) => {\n            this.products.push(ele);\n            this.totalPrice = this.totalPrice + Number(ele.total_price);\n          });\n        }\n      });\n\n      /** assign all the revceived data to this variable which will show those datas in the table */\n      this.dataSource = new MatTableDataSource(this.products);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n  /**\n   * will convert a status code to string\n   * @param str contains the number of staus\n   * @returns status as readable string\n   */\n  getStatusString(str: string): string {\n    let response = '';\n    switch (str) {\n      case '0':\n        response = 'UNCONFIRMED';\n        break;\n      case '1':\n        response = 'CONFIRMED';\n        break;\n      case '2':\n        response = 'PREPARING';\n        break;\n      case '3':\n        response = 'READY';\n        break;\n\n      default:\n        break;\n    }\n    return response;\n  }\n}\n\n    \n\n    \n        Products bought from {{ shopName }}\nStatus: {{ basketStatus }}\n\n  >\n\n  \n    Product\n    {{ product.product_name }}\n  \n  >\n\n  \n    Quantity\n    \n      {{ product.quantity }} {{ product.unit_symbol }}\n    \n  \n  >\n  \n    Price\n    \n      {{ product.total_price | currency: \"EUR\":\"symbol\":undefined:\"de-DE\" }}\n    \n  \n\n  \n  \n  \n  \n\n\n  total: {{ totalPrice | currency: \"EUR\":\"symbol\":undefined:\"de-DE\" }}\n\n\n    \n\n    \n                \n                    ./details.component.scss\n                \n                .full {\n  width: 100%;\n}\n#minibtn {\n  margin-left: 88%;\n}\n#total {\n  font-weight: bolder;\n  font-size: 20px;\n  /* margin-top: 10%;\n margin-left: 34%; */\n}\n.tblelem {\n  width: 90px;\n}\n\n.btnconfirmC {\n  margin-bottom: 4%;\n}\n.tblprod {\n  background-color: #f9b826;\n}\n.btnadd {\n  background-color: #649c9d;\n  color: #f9b826;\n}\n.btnconfirm {\n  background-color: #f9b826;\n  color: #649c9d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Products bought from {{ shopName }}Status: {{ basketStatus }}  >      Product    {{ product.product_name }}    >      Quantity          {{ product.quantity }} {{ product.unit_symbol }}        >      Price          {{ product.total_price | currency: \"EUR\":\"symbol\":undefined:\"de-DE\" }}                total: {{ totalPrice | currency: \"EUR\":\"symbol\":undefined:\"de-DE\" }}'\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/products/products.component.ts\n        \n\n            \n                Description\n            \n            \n                interface of comment dialog \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of dialog \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { PublicDataService } from 'src/app/core/services/public-data.service';\nimport { Product } from './../../core/models/product';\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { commentDialog } from 'src/app/shared/dialogs/comment-dialog/comment-dialog.component';\nimport { OkdialogComponent } from 'src/app/shared/dialogs/okdialog/okdialog.component';\nimport { Unit } from 'src/app/core/models/unit';\nimport { ThrowStmt } from '@angular/compiler';\nimport { AddproductComponent } from 'src/app/shared/dialogs/addproduct/addproduct.component';\n\n/** interface of comment dialog */\nexport interface DialogData {\n  /** name of dialog */\n  name: string;\n}\n/** define the component */\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\n/** define the class */\nexport class ProductsComponent implements OnInit {\n  /** will be the quantity */\n  public qty!: number;\n\n  /** to guard value of object of the input  */\n  quantity: any;\n\n  /**\n   * constructor\n   * @param route this will handle the navigation from this class\n   * @param publicService this is service that handles our api requests\n   * @param dialog this is the dialog(pop up)\n   * @param router this handles the extraction of element form url\n   * @param fb this is a form builder to control and add validation to our input in template\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private publicService: PublicDataService,\n    public dialog: MatDialog,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n  /** handle the paginator */\n  @ViewChild(MatPaginator) paginator: MatPaginator | undefined;\n\n  /**contains datatable */\n  dataSource: any;\n\n  /**on to save the comment */\n  comment: any;\n\n  /** to save the shop_id */\n  public shopid: any;\n\n  /** contains all units */\n  public units: any[] = [];\n\n  /** add unit id */\n  public unit!: number;\n\n  /** CONTAINS THE symbol view */\n  public unitSymbol: string = '';\n\n  /** price of one product */\n  public price: number = 0;\n\n  /** id general of selected product */\n  public id_product = 0;\n\n  /** to save the total price */\n  public totalPrice: number = 0;\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns: string[] = ['name', 'price', 'unit', 'action'];\n  /**where to save product listreturned from api request  */\n  products: Product[] = [];\n\n  /** when page trigerred */\n  ngOnInit(): void {\n    this.shopid = this.route.snapshot.paramMap.get('id');\n\n    /** sends the api calls */\n    this.publicService.getProductByShopID(this.shopid).subscribe((data) => {\n      this.products = data;\n      this.dataSource = new MatTableDataSource(this.products);\n\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  /** method to filter table */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    this.dataSource = this.dataSource;\n  }\n\n  /** method to add item to basket this will send request of post to backend */\n  setUnit(product: Product, event: any) {\n    this.id_product = product.id;\n    let unit = event.value;\n\n    this.unit = 0;\n    this.unitSymbol = '';\n\n    this.products.forEach((prod) => {\n      if (prod.id === product.id) {\n        prod.units.forEach((un) => {\n          if (un.viewValue === unit) {\n            this.price = un.price;\n\n            prod.price = un.price;\n            this.unit = Number(un.id);\n            this.unitSymbol = un.symbol;\n          }\n        });\n      }\n    });\n  }\n\n  /** to open dialgo where to add comment */\n  openDialog(): void {\n    const dialogRef = this.dialog.open(commentDialog, {\n      width: '250px',\n      data: { name: this.comment },\n    });\n    /** after the close of the dialog will add comment */\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        this.comment = result;\n        if (this.comment) {\n          this.publicService\n            .potsComment(this.shopid, this.comment)\n            .subscribe((res) => {});\n          this.openOkDialog('Comment Added', 'Your Have Added The comment!');\n        } else {\n          this.openOkDialog('Notice!', \"You didn't add the comment!\");\n        }\n        this.comment = '';\n      },\n      (error) => {\n        this.openOkDialog(\n          'Error!',\n          'An error occured when adding the comment!'\n        );\n      }\n    );\n  }\n  /**\n   * method to add item to basket thiw will be called from button in Action column.\n   * @param product will send this to dialog to show some information about teh product\n   */\n  addProduct(product: any) {\n    if (!this.unit || product.id !== this.id_product) {\n      this.openOkDialog('Error!', 'You have to select an unit!');\n    } else {\n      const dialogRef = this.dialog.open(AddproductComponent, {\n        width: '250px',\n        data: { quantity: this.qty, price: this.price, unit: this.unitSymbol },\n      });\n      /** after the close of the dialog will add comment */\n      dialogRef.afterClosed().subscribe(\n        (result) => {\n          /*   this.publicService.potsComment(this.shopid, this.comment).subscribe(res=>{}); */\n          if (result === undefined) {\n            this.openOkDialog(\n              'Error!',\n              'An error occured when adding the item!'\n            );\n          } else {\n            this.publicService\n              .postItemToBasket(this.shopid, result, this.unit)\n              .subscribe(\n                (res) => {\n                  this.openOkDialog(\n                    'Success!',\n                    'You have added the item to the basket!'\n                  );\n                  this.totalPrice = this.totalPrice + result * this.price;\n                  this.unitSymbol = '';\n                  this.unit = 0;\n                  this.price = 0;\n                },\n                (error) => {\n                  this.openOkDialog(\n                    'Error!',\n                    'An error occured when adding the item to basket!'\n                  );\n                }\n              );\n          }\n        },\n        (error) => {\n          this.openOkDialog('Error!', 'An error occured when adding the item!');\n        }\n      );\n    }\n  }\n\n  /** to confirm basket */\n  confirmBasket() {\n    this.publicService.postBasket(this.shopid).subscribe(\n      (res) => {\n        this.openOkDialog(\n          'Purchase Confirmed',\n          'You have added the purchase and it will be processed soon!'\n        );\n        this.router.navigateByUrl('baskets');\n      },\n      (error) => {\n        this.openOkDialog(\n          'Error!',\n          'An error occured when confirming the basket!'\n        );\n      }\n    );\n  }\n\n  /**\n   * to open a dialog shows different message ! depends on the situation\n   * @param title the title of dialog\n   * @param content teh content\n   */\n  openOkDialog(title: string, content: string) {\n    let dialogRef = this.dialog.open(OkdialogComponent);\n    dialogRef.componentInstance.title = title;\n    dialogRef.componentInstance.content = content;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData-1.html":{"url":"interfaces/DialogData-1.html","title":"interface - DialogData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/dialogs/addproduct/addproduct.component.ts\n        \n\n            \n                Description\n            \n            \n                interface of the Dialog \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        price\n                                \n                                \n                                        qty\n                                \n                                \n                                        unit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    price of product \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qty\n                                    \n                                \n                                \n                                    \n                                        qty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    quantoty of products \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unit of the desired product \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n/** interface of the Dialog */\nexport interface DialogData {\n  /** quantoty of products */\n  qty: number;\n  /** price of product */\n  price: number;\n  /** unit of the desired product */\n  unit: string;\n}\n/** definition of component and its style url and tenplate url */\n@Component({\n  selector: 'app-addproduct',\n  templateUrl: './addproduct.component.html',\n  styleUrls: ['./addproduct.component.scss'],\n})\n/** drfine the class */\nexport class AddproductComponent {\n  /**\n   *constructor\n   * @param dialogRef this is the dialogref\n   * @param data injected data from products component\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  /**\n   * when click ok then return the entered text\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  /**\n   * Calculate the price\n   * @returns the price\n   */\n  getPrice(): number {\n    return this.data.qty * this.data.price;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        define the component and its style url and template url\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this inject breakpoint of the screen size\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * define the component and its style url and template url\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\n/** DEFINE THE CLASS */\nexport class HomeComponent {\n  /**\n   * Constructor\n   * @param breakpointObserver this inject breakpoint of the screen size\n   */\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n\n    \n\n    \n        \nDashboard\n -->  \n    \n      Markets\n\n    \n    \n      Shops\n\n    \n    \n      Baskets\n\n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n\n.large-button {\n  background-color: #F9B826;\n  color: #649C9D;\n\n  width: 100px;\n  height: 100px;\n  font-size: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Dashboard -->            Markets              Shops              Baskets      '\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nBasketsComponent\n\nBasketsComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nBasketsComponent->HomeModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nHomeModule -->\n\nDetailsComponent->HomeModule\n\n\n\n\n\nMarketsComponent\n\nMarketsComponent\n\nHomeModule -->\n\nMarketsComponent->HomeModule\n\n\n\n\n\nProductsComponent\n\nProductsComponent\n\nHomeModule -->\n\nProductsComponent->HomeModule\n\n\n\n\n\nShopsComponent\n\nShopsComponent\n\nHomeModule -->\n\nShopsComponent->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n        \n            Description\n        \n        \n            anonniation of the modele that contains declaration and imports \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BasketsComponent\n                        \n                        \n                            DetailsComponent\n                        \n                        \n                            MarketsComponent\n                        \n                        \n                            ProductsComponent\n                        \n                        \n                            ShopsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /** imports of libraries */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShopsComponent } from './shops/shops.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MarketsComponent } from './markets/markets.component';\nimport { BasketsComponent } from './baskets/baskets.component';\nimport { ProductsComponent } from './products/products.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport { HttpClientXsrfModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport {MatSelectModule} from '@angular/material/select';\nimport { DetailsComponent } from './baskets/details/details.component';\n\n\n\n\n\n/** anonniation of the modele that contains declaration and imports */\n@NgModule({\n  declarations: [ShopsComponent, MarketsComponent, BasketsComponent, ProductsComponent, DetailsComponent],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatListModule,\n    FormsModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatIconModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'XSRF-TOKEN',\n      headerName: 'alavora_session',\n    }),\n  ]\n})\n/**export module */\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IntercepterService.html":{"url":"injectables/IntercepterService.html","title":"injectable - IntercepterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IntercepterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/intercepter.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable to this intercepter \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/intercepter.service.ts:16\n                \n            \n\n\n            \n                \n                    will inject the token into headers of request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        angular methods\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        angular methods\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        boolean of status\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n/** Injectable to this intercepter */\n@Injectable({\n  providedIn: 'root',\n})\nexport class IntercepterService {\n  /**\n   * will inject the token into headers of request\n   * @param request angular methods\n   * @param next angular methods\n   * @returns boolean of status\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // ...\n    const token: string = localStorage.getItem('token') || '';\n    if (token) {\n      request = request.clone({\n        headers: request.headers.set('Authorization', 'Bearer ' + token),\n      });\n    }\n    return next.handle(request).pipe(\n      map((event: HttpEvent) => {\n        return event;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        define component \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                userLogin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, userService: UserService, intercepter: IntercepterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                form builder\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                router to handle the navigation\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                user service\n\n                                                        \n                                                \n                                                \n                                                        intercepter\n                                                  \n                                                        \n                                                                        IntercepterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                intercepter\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:43\n                \n            \n\n\n            \n                \n                    login and save user detail and token in localstorage \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:29\n                            \n                        \n\n                \n                    \n                        handle hide and show of password in template \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    email: [\n      null,\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n      ]),\n    ],\n    password: [null, Validators.required],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                        form of login \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { IntercepterService } from './../core/services/intercepter.service';\nimport { UserService } from './../core/services/user.service';\nimport { Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n/** define component */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\n/**define class of login  */\nexport class LoginComponent {\n  /**\n   *constructor\n   * @param fb form builder\n   * @param router router to handle the navigation\n   * @param userService user service\n   * @param intercepter intercepter\n   */\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private intercepter: IntercepterService\n  ) {}\n  /** handle hide and show of password in template */\n  hide = true;\n  /** form of login */\n  userLogin = this.fb.group({\n    email: [\n      null,\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n      ]),\n    ],\n    password: [null, Validators.required],\n  });\n\n  /** login and save user detail and token in localstorage */\n  public onSubmit(): void {\n    const email = this.userLogin.get('email')?.value;\n    const password = this.userLogin.get('password')?.value;\n    this.userService.login(email, password).subscribe((res) => {\n      const user = res.user;\n      localStorage.setItem('token', res.access_token);\n      localStorage.setItem('name', user.name);\n      localStorage.setItem('adress', user.adress);\n      localStorage.setItem('email', user.email);\n      localStorage.setItem('id', String(user.id));\n      localStorage.setItem('latitude', user.latitude);\n      localStorage.setItem('longitude', user.longitude);\n      localStorage.setItem('phone', user.phone);\n      this.router.navigateByUrl('/');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Log In\n    \n    \n      \n        \n          \n            Enter your email\n            \n          \n        \n      \n      \n        \n          \n            Enter your password\n            \n            \n              {{ hide ? \"visibility_off\" : \"visibility\" }}\n            \n          \n        \n      \n    \n    \n      Log In\n    \n  \n\nRegister\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .full-width {\n  width: 100%;\n}\n\n.shipping-card {\n  min-width: 120px;\n  margin: 20px auto;\n}\n\n.mat-radio-button {\n  display: block;\n  margin: 5px 0;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n}\n.clr{\n  color: #F9B826;\n}\n.col {\n  flex: 1;\n  margin-right: 20px;\n}\n\n.col:last-child {\n  margin-right: 0;\n}\n.mat-card{\n  background-color: #649C9D;\n}\n.mat-raised-button {\n  background-color: #F9B826;\n  color: #649C9D;\n}\n::ng-deep .mat-focused .mat-form-field-label {\n  color: #F9B826 !important;\n }\n\n ::ng-deep.mat-form-field-underline {\n  background-color: #F9B826 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n background-color: #F9B826 !important;;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Log In                                            Enter your email                                                                        Enter your password                                      {{ hide ? \"visibility_off\" : \"visibility\" }}                                                  Log In      Register'\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Market.html":{"url":"interfaces/Market.html","title":"interface - Market","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Market\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/market.ts\n        \n\n            \n                Description\n            \n            \n                interface of market\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cif\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cif\n                                    \n                                \n                                \n                                    \n                                        cif:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    cif of the market \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    description of the market \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id of the market \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of the market \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Market {\n  /** id of the market */\n  id: string;\n  /** name of the market */\n  name: string;\n  /** description of the market */\n  description: string;\n  /** cif of the market */\n  cif: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarketsComponent.html":{"url":"components/MarketsComponent.html","title":"component - MarketsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MarketsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/markets/markets.component.ts\n\n\n    \n        Description\n    \n    \n        define component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-markets\n            \n\n            \n                styleUrls\n                ./markets.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markets.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                markets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMaerkets\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNavigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(publicService: PublicDataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/markets/markets.component.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publicService\n                                                  \n                                                        \n                                                                        PublicDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                inect this service to be possible to connect to webs service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this handles the extract of elements from url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMaerkets\n                        \n                        \n                    \n                \n            \n            \n                \ngetMaerkets()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/markets/markets.component.ts:33\n                \n            \n\n\n            \n                \n                    method to get dades from a service \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/markets/markets.component.ts:28\n                \n            \n\n\n            \n                \n                    when page loads \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNavigate\n                        \n                        \n                    \n                \n            \n            \n                \nonNavigate(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/markets/markets.component.ts:42\n                \n            \n\n\n            \n                \n                    will navigate to selected shop\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        its the id of the shop will be extracted from url\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Market[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/markets/markets.component.ts:16\n                            \n                        \n\n                \n                    \n                        where to store markets \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { PublicDataService } from 'src/app/core/services/public-data.service';\nimport { Market } from 'src/app/core/models/market';\n/**\n * define component\n */\n@Component({\n  selector: 'app-markets',\n  templateUrl: './markets.component.html',\n  styleUrls: ['./markets.component.scss'],\n})\n/**this to load markets data */\nexport class MarketsComponent implements OnInit {\n  /** where to store markets */\n  public markets: Market[] = [];\n\n  /**\n   * constructor\n   * @param publicService inect this service to be possible to connect to webs service\n   * @param router this handles the extract of elements from url\n   */\n  constructor(\n    private publicService: PublicDataService,\n    private router: Router\n  ) {}\n  /** when page loads */\n  ngOnInit(): void {\n    /** on init call this method */\n    this.getMaerkets();\n  }\n  /** method to get dades from a service */\n  getMaerkets(): void {\n    this.publicService.getMarkets().subscribe((data) => {\n      this.markets = data;\n    });\n  }\n  /**\n   * will navigate to selected shop\n   * @param id its the id of the shop will be extracted from url\n   */\n  onNavigate(id: string) {\n    const idR = Number(id);\n    this.router.navigateByUrl('markets/shop/' + id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Id\n      {{row.id}}\n    \n\n    \n      Name\n      {{row.name}}\n    \n\n    \n    \n  \n\n  \n  \n\n -->\n Markets \n \n\n\t\n    \n\t\t Nurim Market\n\t\n\n8\" #paginator\n[length]=\"markets?.data?.length\"\n[pageIndex]=\"0\"\n[pageSize]=\"10\"\n[pageSizeOptions]=\"[5, 10, 20]\">\n -->\n\n\n\n Markets \n\n\n \n   \n   {{market.name}}\n \n\n8\" #paginator\n[length]=\"markets?.length\"\n[pageIndex]=\"0\"\n[pageSize]=\"10\"\n[pageSizeOptions]=\"[5, 10, 20]\">\n -->\n\n    \n\n    \n                \n                    ./markets.component.scss\n                \n                \n.mat-paginator {\n  background-color: #F9B826;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Id      {{row.id}}              Name      {{row.name}}                   --> Markets  \t    \t\t Nurim Market\t8\" #paginator[length]=\"markets?.data?.length\"[pageIndex]=\"0\"[pageSize]=\"10\"[pageSizeOptions]=\"[5, 10, 20]\"> --> Markets        {{market.name}} 8\" #paginator[length]=\"markets?.length\"[pageIndex]=\"0\"[pageSize]=\"10\"[pageSizeOptions]=\"[5, 10, 20]\"> -->'\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MarketsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OkdialogComponent.html":{"url":"components/OkdialogComponent.html","title":"component - OkdialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OkdialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialogs/okdialog/okdialog.component.ts\n\n\n    \n        Description\n    \n    \n        define component \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-okdialog\n            \n\n            \n                styleUrls\n                ./okdialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./okdialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onclose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialogs/okdialog/okdialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                inject the dialog ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/dialogs/okdialog/okdialog.component.ts:14\n                            \n                        \n                \n                    \n                        inject the content from parent component \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/dialogs/okdialog/okdialog.component.ts:12\n                            \n                        \n                \n                    \n                        inject the title from parent component \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onclose\n                        \n                        \n                    \n                \n            \n            \n                \nonclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialogs/okdialog/okdialog.component.ts:21\n                \n            \n\n\n            \n                \n                    this to close the dialog \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/dialogs/okdialog/okdialog.component.ts:19\n                            \n                        \n\n                \n                    \n                        inject the dialog ref\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n/** define component */\n@Component({\n  selector: 'app-okdialog',\n  templateUrl: './okdialog.component.html',\n  styleUrls: ['./okdialog.component.scss'],\n})\n/** define class */\nexport class OkdialogComponent {\n  /** inject the title from parent component */\n  @Input() title: any;\n  /** inject the content from parent component */\n  @Input() content: any;\n  /**\n   * constructor\n   * @param dialogRef inject the dialog ref\n   */\n  constructor(public dialogRef: MatDialogRef) {}\n  /** this to close the dialog */\n  onclose() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        {{title}}\n{{content}}\n\n  Close\n\n\n    \n\n    \n                \n                    ./okdialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}{{content}}  Close'\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OkdialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/product.ts\n        \n\n            \n                Description\n            \n            \n                interface of the Product\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        image_url\n                                \n                                \n                                        name\n                                \n                                \n                                        price\n                                \n                                \n                                        shop_id\n                                \n                                \n                                        units\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the id of product \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image_url\n                                    \n                                \n                                \n                                    \n                                        image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    image of product \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of product \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    price of product\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shop_id\n                                    \n                                \n                                \n                                    \n                                        shop_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the shop id  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        units\n                                    \n                                \n                                \n                                    \n                                        units:         Unit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    units lists \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Unit } from './unit';\n/**\n * interface of the Product\n */\nexport interface Product {\n  /** the id of product */\n  id: number;\n  /** image of product */\n  image_url: string;\n  /** name of product */\n  name: string;\n  /**\n   * price of product\n   */\n  price: number;\n  /** the shop id  */\n  shop_id: string;\n  /** units lists */\n  units: Unit[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductsComponent.html":{"url":"components/ProductsComponent.html","title":"component - ProductsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProductsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/products/products.component.ts\n\n\n    \n        Description\n    \n    \n        define the component \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-products\n            \n\n            \n                styleUrls\n                ./products.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./products.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Public\n                                id_product\n                            \n                            \n                                paginator\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                products\n                            \n                            \n                                    Public\n                                qty\n                            \n                            \n                                quantity\n                            \n                            \n                                    Public\n                                shopid\n                            \n                            \n                                    Public\n                                totalPrice\n                            \n                            \n                                    Public\n                                unit\n                            \n                            \n                                    Public\n                                units\n                            \n                            \n                                    Public\n                                unitSymbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProduct\n                            \n                            \n                                applyFilter\n                            \n                            \n                                confirmBasket\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openOkDialog\n                            \n                            \n                                setUnit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, publicService: PublicDataService, dialog: MatDialog, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/products/products.component.ts:32\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this will handle the navigation from this class\n\n                                                        \n                                                \n                                                \n                                                        publicService\n                                                  \n                                                        \n                                                                        PublicDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this is service that handles our api requests\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this is the dialog(pop up)\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this handles the extraction of element form url\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this is a form builder to control and add validation to our input in template\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addProduct\n                        \n                        \n                    \n                \n            \n            \n                \naddProduct(product: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/products/products.component.ts:158\n                \n            \n\n\n            \n                \n                    method to add item to basket thiw will be called from button in Action column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        will send this to dialog to show some information about teh product\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/products/products.component.ts:97\n                \n            \n\n\n            \n                \n                    method to filter table \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmBasket\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmBasket()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/products/products.component.ts:206\n                \n            \n\n\n            \n                \n                    to confirm basket \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/products/products.component.ts:84\n                \n            \n\n\n            \n                \n                    when page trigerred \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/products/products.component.ts:127\n                \n            \n\n\n            \n                \n                    to open dialgo where to add comment \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openOkDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenOkDialog(title: string, content: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/products/products.component.ts:229\n                \n            \n\n\n            \n                \n                    to open a dialog shows different message ! depends on the situation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the title of dialog\n\n                                    \n                                \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        teh content\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUnit\n                        \n                        \n                    \n                \n            \n            \n                \nsetUnit(product: Product, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/products/products.component.ts:104\n                \n            \n\n\n            \n                \n                    method to add item to basket this will send request of post to backend \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:56\n                            \n                        \n\n                \n                    \n                        on to save the comment \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:53\n                            \n                        \n\n                \n                    \n                        contains datatable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:45\n                            \n                        \n\n                \n                    \n                        this is the dialog(pop up)\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'price', 'unit', 'action']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:79\n                            \n                        \n\n                \n                    \n                        Columns displayed in the table. Columns IDs can be added, removed, or reordered. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id_product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:74\n                            \n                        \n\n                \n                    \n                        id general of selected product \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator | undefined\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:50\n                            \n                        \n\n                \n                    \n                        handle the paginator \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:71\n                            \n                        \n\n                \n                    \n                        price of one product \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Product[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:81\n                            \n                        \n\n                \n                    \n                        where to save product listreturned from api request  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            qty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:29\n                            \n                        \n\n                \n                    \n                        will be the quantity \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:32\n                            \n                        \n\n                \n                    \n                        to guard value of object of the input  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shopid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:59\n                            \n                        \n\n                \n                    \n                        to save the shop_id \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:77\n                            \n                        \n\n                \n                    \n                        to save the total price \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:65\n                            \n                        \n\n                \n                    \n                        add unit id \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            units\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:62\n                            \n                        \n\n                \n                    \n                        contains all units \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unitSymbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/products/products.component.ts:68\n                            \n                        \n\n                \n                    \n                        CONTAINS THE symbol view \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { PublicDataService } from 'src/app/core/services/public-data.service';\nimport { Product } from './../../core/models/product';\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { commentDialog } from 'src/app/shared/dialogs/comment-dialog/comment-dialog.component';\nimport { OkdialogComponent } from 'src/app/shared/dialogs/okdialog/okdialog.component';\nimport { Unit } from 'src/app/core/models/unit';\nimport { ThrowStmt } from '@angular/compiler';\nimport { AddproductComponent } from 'src/app/shared/dialogs/addproduct/addproduct.component';\n\n/** interface of comment dialog */\nexport interface DialogData {\n  /** name of dialog */\n  name: string;\n}\n/** define the component */\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\n/** define the class */\nexport class ProductsComponent implements OnInit {\n  /** will be the quantity */\n  public qty!: number;\n\n  /** to guard value of object of the input  */\n  quantity: any;\n\n  /**\n   * constructor\n   * @param route this will handle the navigation from this class\n   * @param publicService this is service that handles our api requests\n   * @param dialog this is the dialog(pop up)\n   * @param router this handles the extraction of element form url\n   * @param fb this is a form builder to control and add validation to our input in template\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private publicService: PublicDataService,\n    public dialog: MatDialog,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n  /** handle the paginator */\n  @ViewChild(MatPaginator) paginator: MatPaginator | undefined;\n\n  /**contains datatable */\n  dataSource: any;\n\n  /**on to save the comment */\n  comment: any;\n\n  /** to save the shop_id */\n  public shopid: any;\n\n  /** contains all units */\n  public units: any[] = [];\n\n  /** add unit id */\n  public unit!: number;\n\n  /** CONTAINS THE symbol view */\n  public unitSymbol: string = '';\n\n  /** price of one product */\n  public price: number = 0;\n\n  /** id general of selected product */\n  public id_product = 0;\n\n  /** to save the total price */\n  public totalPrice: number = 0;\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns: string[] = ['name', 'price', 'unit', 'action'];\n  /**where to save product listreturned from api request  */\n  products: Product[] = [];\n\n  /** when page trigerred */\n  ngOnInit(): void {\n    this.shopid = this.route.snapshot.paramMap.get('id');\n\n    /** sends the api calls */\n    this.publicService.getProductByShopID(this.shopid).subscribe((data) => {\n      this.products = data;\n      this.dataSource = new MatTableDataSource(this.products);\n\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  /** method to filter table */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    this.dataSource = this.dataSource;\n  }\n\n  /** method to add item to basket this will send request of post to backend */\n  setUnit(product: Product, event: any) {\n    this.id_product = product.id;\n    let unit = event.value;\n\n    this.unit = 0;\n    this.unitSymbol = '';\n\n    this.products.forEach((prod) => {\n      if (prod.id === product.id) {\n        prod.units.forEach((un) => {\n          if (un.viewValue === unit) {\n            this.price = un.price;\n\n            prod.price = un.price;\n            this.unit = Number(un.id);\n            this.unitSymbol = un.symbol;\n          }\n        });\n      }\n    });\n  }\n\n  /** to open dialgo where to add comment */\n  openDialog(): void {\n    const dialogRef = this.dialog.open(commentDialog, {\n      width: '250px',\n      data: { name: this.comment },\n    });\n    /** after the close of the dialog will add comment */\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        this.comment = result;\n        if (this.comment) {\n          this.publicService\n            .potsComment(this.shopid, this.comment)\n            .subscribe((res) => {});\n          this.openOkDialog('Comment Added', 'Your Have Added The comment!');\n        } else {\n          this.openOkDialog('Notice!', \"You didn't add the comment!\");\n        }\n        this.comment = '';\n      },\n      (error) => {\n        this.openOkDialog(\n          'Error!',\n          'An error occured when adding the comment!'\n        );\n      }\n    );\n  }\n  /**\n   * method to add item to basket thiw will be called from button in Action column.\n   * @param product will send this to dialog to show some information about teh product\n   */\n  addProduct(product: any) {\n    if (!this.unit || product.id !== this.id_product) {\n      this.openOkDialog('Error!', 'You have to select an unit!');\n    } else {\n      const dialogRef = this.dialog.open(AddproductComponent, {\n        width: '250px',\n        data: { quantity: this.qty, price: this.price, unit: this.unitSymbol },\n      });\n      /** after the close of the dialog will add comment */\n      dialogRef.afterClosed().subscribe(\n        (result) => {\n          /*   this.publicService.potsComment(this.shopid, this.comment).subscribe(res=>{}); */\n          if (result === undefined) {\n            this.openOkDialog(\n              'Error!',\n              'An error occured when adding the item!'\n            );\n          } else {\n            this.publicService\n              .postItemToBasket(this.shopid, result, this.unit)\n              .subscribe(\n                (res) => {\n                  this.openOkDialog(\n                    'Success!',\n                    'You have added the item to the basket!'\n                  );\n                  this.totalPrice = this.totalPrice + result * this.price;\n                  this.unitSymbol = '';\n                  this.unit = 0;\n                  this.price = 0;\n                },\n                (error) => {\n                  this.openOkDialog(\n                    'Error!',\n                    'An error occured when adding the item to basket!'\n                  );\n                }\n              );\n          }\n        },\n        (error) => {\n          this.openOkDialog('Error!', 'An error occured when adding the item!');\n        }\n      );\n    }\n  }\n\n  /** to confirm basket */\n  confirmBasket() {\n    this.publicService.postBasket(this.shopid).subscribe(\n      (res) => {\n        this.openOkDialog(\n          'Purchase Confirmed',\n          'You have added the purchase and it will be processed soon!'\n        );\n        this.router.navigateByUrl('baskets');\n      },\n      (error) => {\n        this.openOkDialog(\n          'Error!',\n          'An error occured when confirming the basket!'\n        );\n      }\n    );\n  }\n\n  /**\n   * to open a dialog shows different message ! depends on the situation\n   * @param title the title of dialog\n   * @param content teh content\n   */\n  openOkDialog(title: string, content: string) {\n    let dialogRef = this.dialog.open(OkdialogComponent);\n    dialogRef.componentInstance.title = title;\n    dialogRef.componentInstance.content = content;\n  }\n}\n\n    \n\n    \n         Markets \n\n\n \n   \n   {{market.name}}\n \n -->\n\n  \n    Search\n    \n    search\n  \n\nProducts\n\n  \n  \n    Item\n    {{ product.name }}\n  \n\n  \n  \n    Cost\n    \n       0\">{{\n        product.price | currency: \"EUR\":\"symbol\":undefined:\"de-DE\"\n      }}\n      ---\n    \n  \n\n  \n    Unit\n    \n      \n        Unit\n        \n          \n            {{ un.value }}\n          \n        \n      \n    \n  \n\n  \n    Action\n    \n      \n        \n          control_point\n        \n      \n    \n  \n\n  \n  \n  \n  \n\n\n  \n    \n      \n        Total:\n        {{ totalPrice | currency: \"EUR\":\"symbol\":undefined:\"de-DE\" }}\n\n      \n        comment\n      \n    \n    {{ qty }}\n  \n\n\n\n  \n    \n      \n        Confirm\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./products.component.scss\n                \n                .full {\n  width: 100%;\n}\n#minibtn{\n  margin-left: 88%;\n}\n#total{\n  font-weight: bolder;\n  font-size: 20px;\n  /* margin-top: 10%;\n margin-left: 34%; */\n}\n.tblelem{\n  width: 90px;\n}\n\n.btnconfirmC{\n  margin-bottom: 4%;\n}\n.tblprod{\n  background-color: #F9B826;\n}\n.btnadd{\n  background-color: #649C9D;\n  color: #F9B826;\n\n}\n.btnconfirm{\n  background-color: #F9B826;\n  color: #649C9D;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Markets        {{market.name}}  -->      Search        search  Products        Item    {{ product.name }}          Cost           0\">{{        product.price | currency: \"EUR\":\"symbol\":undefined:\"de-DE\"      }}      ---            Unit                  Unit                              {{ un.value }}                                    Action                            control_point                                                Total:        {{ totalPrice | currency: \"EUR\":\"symbol\":undefined:\"de-DE\" }}              comment              {{ qty }}                      Confirm            '\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PublicDataService.html":{"url":"injectables/PublicDataService.html","title":"injectable - PublicDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PublicDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/public-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable to this class \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBaskets\n                            \n                            \n                                    Public\n                                getMarkets\n                            \n                            \n                                    Public\n                                getProductByShopID\n                            \n                            \n                                    Public\n                                getShops\n                            \n                            \n                                    Public\n                                getShopsByID\n                            \n                            \n                                getUnits\n                            \n                            \n                                postBasket\n                            \n                            \n                                postItemToBasket\n                            \n                            \n                                potsComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/public-data.service.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                tool to connet to http protocol\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBaskets\n                        \n                        \n                    \n                \n            \n            \n                \ngetBaskets()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/public-data.service.ts:73\n                \n            \n\n\n            \n                \n                    get all baskets\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        all baskets of current user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMarkets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMarkets()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/public-data.service.ts:31\n                \n            \n\n\n            \n                \n                    to get all markets exists\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        async response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProductByShopID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductByShopID(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/public-data.service.ts:60\n                \n            \n\n\n            \n                \n                    gte product of one shop\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the shop\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the products of that shop\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getShops\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getShops()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/public-data.service.ts:51\n                \n            \n\n\n            \n                \n                    get all shops\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        a json array of shops\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getShopsByID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getShopsByID(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/public-data.service.ts:40\n                \n            \n\n\n            \n                \n                    get shop by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of specific shop\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an json array of the shop\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnits\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnits()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/public-data.service.ts:82\n                \n            \n\n\n            \n                \n                    get all units\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        all units\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postBasket\n                        \n                        \n                    \n                \n            \n            \n                \npostBasket(shop_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/public-data.service.ts:102\n                \n            \n\n\n            \n                \n                    confirm basket\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    shop_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        confirm basket\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        ths status of post request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postItemToBasket\n                        \n                        \n                    \n                \n            \n            \n                \npostItemToBasket(product_id: number, quantity: number, unit_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/public-data.service.ts:93\n                \n            \n\n\n            \n                \n                    add item to basket\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    product_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        product id\n\n                                    \n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        quantity\n\n                                    \n                                \n                                \n                                    unit_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unit id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        returns ths status of adding product to basket\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            potsComment\n                        \n                        \n                    \n                \n            \n            \n                \npotsComment(shop_id: number, comments: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/public-data.service.ts:112\n                \n            \n\n\n            \n                \n                    add commnet to basket\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    shop_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the shop id\n\n                                    \n                                \n                                \n                                    comments\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the string of comment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the status of adding a comment to basket\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.API_URL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/public-data.service.ts:21\n                            \n                        \n\n                \n                    \n                        define api\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { environment } from './../../../environments/environment';\nimport { Market } from './../models/market';\nimport { Shop } from './../models/shop';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n/** Injectable to this class */\n@Injectable({\n  providedIn: 'root',\n})\n\n/**\n * handle api requests to get different data.\n */\nexport class PublicDataService {\n  /**\n   * define api\n   */\n  private url = environment.API_URL;\n  /**\n   * constructor\n   * @param http tool to connet to http protocol\n   */\n  constructor(private http: HttpClient) {}\n  /**\n   * to get all markets exists\n   * @returns  async response\n   */\n  public getMarkets(): Observable {\n    const url = this.url + 'markets';\n    return this.http.get(url).pipe(map((result: any) => result.data));\n  }\n  /**\n   * get shop by id\n   * @param id id of specific shop\n   * @returns an json array of the shop\n   */\n  public getShopsByID(id: number): Observable {\n    const url = this.url + 'shops';\n    return this.http\n      .get(url, { params: { market_id: id } })\n      .pipe(map((result: any) => result.data));\n  }\n\n  /**\n   * get all shops\n   * @returns a json array of shops\n   */\n  public getShops(): Observable {\n    const url = this.url + 'shops';\n    return this.http.get(url).pipe(map((result: any) => result.data));\n  }\n  /**\n   * gte product of one shop\n   * @param id id of the shop\n   * @returns the products of that shop\n   */\n  public getProductByShopID(id: number) {\n    const id_shop = Number(id);\n    const url = this.url + 'products';\n    return this.http\n      .get(url, { params: { shop_id: id_shop } })\n      .pipe(map((result: any) => result.data));\n  }\n\n  /**\n   * get all baskets\n   * @returns all baskets of current user\n   */\n\n  getBaskets() {\n    const url = this.url + 'baskets/all';\n    return this.http.get(url).pipe(map((result: any) => result.data));\n  }\n\n  /**\n   * get all units\n   * @returns all units\n   */\n  getUnits() {\n    const url = this.url + 'units';\n    return this.http.get(url).pipe(map((result: any) => result.data));\n  }\n  /**\n   * add item to basket\n   * @param product_id product id\n   * @param quantity quantity\n   * @param unit_id unit id\n   * @returns returns ths status of adding product to basket\n   */\n  postItemToBasket(product_id: number, quantity: number, unit_id: number) {\n    const url = this.url + 'baskets/addproduct';\n    return this.http.post(url, { quantity, product_id, unit_id }).pipe();\n  }\n  /**\n   * confirm basket\n   * @param shop_id confirm basket\n   * @returns ths status of post request\n   */\n  postBasket(shop_id: number) {\n    const url = this.url + 'baskets/confirm';\n    return this.http.post(url, { shop_id }).pipe();\n  }\n  /**\n   * add commnet to basket\n   * @param shop_id the shop id\n   * @param comments the string of comment\n   * @returns the status of adding a comment to basket\n   */\n  potsComment(shop_id: number, comments: string) {\n    const url = this.url + 'baskets/comment';\n    return this.http.post(url, { shop_id, comments }).pipe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        Load Component template and style sheet  \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hide\n                            \n                            \n                                hideagain\n                            \n                            \n                                userRegister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialog: MatDialog, router: Router, user: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/register/register.component.ts:46\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the form buildeer that will handles forms in our template\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the dialog\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                that handles the extraction of element from url\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service that handles the api request to backend (user related api calls)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/register/register.component.ts:62\n                \n            \n\n\n            \n                \n                    will be triggered when user Press Register Button \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(title: string, content: string, passed: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/register/register.component.ts:98\n                \n            \n\n\n            \n                \n                    will navigate to products of the selected shop and will pass the id by url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the title of dialog\n\n                                    \n                                \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the content of dialog\n\n                                    \n                                \n                                \n                                    passed\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the boolean that shows if the operation is correcrt or no\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/register/register.component.ts:57\n                            \n                        \n\n                \n                    \n                        the dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/register/register.component.ts:16\n                            \n                        \n\n                \n                    \n                        Hide or Show Password text  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideagain\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/register/register.component.ts:18\n                            \n                        \n\n                \n                    \n                        Hide or Show Password text for second input  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRegister\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    name: [null, Validators.required],\n    address: [null],\n    phone: [\n      null,\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^[0-9]*$'),\n        Validators.minLength(9),\n      ]),\n    ],\n    email: [\n      null,\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n      ]),\n    ],\n    password: [\n      null,\n      Validators.compose([Validators.required, Validators.minLength(8)]),\n    ],\n    passwordagain: [\n      null,\n      Validators.compose([Validators.required, Validators.minLength(8)]),\n    ],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/register/register.component.ts:20\n                            \n                        \n\n                \n                    \n                        Assign Validators to the forb attributes \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { error } from '@angular/compiler/src/util';\nimport { UserService } from './../../core/services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { OkdialogComponent } from 'src/app/shared/dialogs/okdialog/okdialog.component';\n/** Load Component template and style sheet  */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent {\n  /** Hide or Show Password text  */\n  hide = true;\n  /** Hide or Show Password text for second input  */\n  hideagain = true;\n  /** Assign Validators to the forb attributes */\n  userRegister = this.fb.group({\n    name: [null, Validators.required],\n    address: [null],\n    phone: [\n      null,\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^[0-9]*$'),\n        Validators.minLength(9),\n      ]),\n    ],\n    email: [\n      null,\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n      ]),\n    ],\n    password: [\n      null,\n      Validators.compose([Validators.required, Validators.minLength(8)]),\n    ],\n    passwordagain: [\n      null,\n      Validators.compose([Validators.required, Validators.minLength(8)]),\n    ],\n  });\n\n  /**\n   * constructor\n   * @param fb the form buildeer that will handles forms in our template\n   * @param dialog the dialog\n   * @param router that handles the extraction of element from url\n   * @param user service that handles the api request to backend (user related api calls)\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialog: MatDialog,\n    private router: Router,\n    private user: UserService\n  ) {}\n  /**  will be triggered when user Press Register Button */\n  onSubmit(): void {\n    if (!this.userRegister.valid) {\n      const content = 'You have to Enter all necessary informations!';\n      this.openDialog('ERROR!', content, false);\n    } else {\n      const name = this.userRegister.get('name')?.value;\n      const address = this.userRegister.get('address')?.value;\n      const phone = this.userRegister.get('phone')?.value;\n      const email = this.userRegister.get('email')?.value;\n      const password = this.userRegister.get('password')?.value;\n      const repeat = this.userRegister.get('passwordagain')?.value;\n\n      if (password !== repeat) {\n        const content = \"The First Password dosen't match the second!\";\n        this.openDialog('ERROR!', content, false);\n      } else {\n        this.user.postUser(name, email, password, address, phone).subscribe(\n          (res) => {\n            const content = 'Your Account have been created!';\n            this.openDialog('SUCCESS!', content, true);\n          },\n          (error) => {\n            const content = 'Error occured when trying to create user account!';\n            this.openDialog('ERROR!', content, false);\n          }\n        );\n      }\n    }\n  }\n\n  /**\n   *  will navigate to products of the selected shop and will pass the id by url\n   * @param title the title of dialog\n   * @param content the content of dialog\n   * @param passed the boolean that shows if the operation is correcrt or no\n   */\n  openDialog(title: string, content: string, passed: boolean) {\n    let dialogRef = this.dialog.open(OkdialogComponent);\n    dialogRef.componentInstance.title = title;\n    dialogRef.componentInstance.content = content;\n    if (passed) {\n      dialogRef.afterClosed().subscribe((res) => {\n        this.router.navigateByUrl('login');\n      });\n    } else {\n      dialogRef.afterClosed().subscribe((res) => {\n        this.router.navigateByUrl('register');\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Log In\n    \n    \n      \n        \n          \n            Enter name\n            \n          \n        \n      \n\n      \n        \n          \n            Enter your email\n            \n          \n        \n      \n      \n        \n          \n            Enter your password\n            \n            \n              {{ hide ? \"visibility_off\" : \"visibility\" }}\n            \n          \n        \n      \n      \n        \n          \n            Enter your password\n            \n            \n              {{\n                hideagain ? \"visibility_off\" : \"visibility\"\n              }}\n            \n          \n        \n      \n\n      \n        \n          \n            Enter your Address\n            \n          \n        \n      \n      \n        \n          \n            Enter your phone number\n            \n          \n        \n      \n    \n    \n      Register\n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                .full-width {\n  width: 100%;\n}\n\n.shipping-card {\n  min-width: 120px;\n  margin: 20px auto;\n}\n\n.mat-radio-button {\n  display: block;\n  margin: 5px 0;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n}\n\n.col {\n  flex: 1;\n  margin-right: 20px;\n}\n\n.col:last-child {\n  margin-right: 0;\n}\n.mat-card{\n  background-color: #649C9D;\n}\n.mat-raised-button {\n  background-color: #F9B826;\n  color: #649C9D;\n}\n::ng-deep .mat-focused .mat-form-field-label {\n  color: #F9B826 !important;\n }\n\n ::ng-deep.mat-form-field-underline {\n  background-color: #F9B826 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n background-color: #F9B826 !important;;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Log In                                            Enter name                                                                        Enter your email                                                                        Enter your password                                      {{ hide ? \"visibility_off\" : \"visibility\" }}                                                                        Enter your password                                      {{                hideagain ? \"visibility_off\" : \"visibility\"              }}                                                                        Enter your Address                                                                        Enter your phone number                                                  Register      '\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Shop.html":{"url":"interfaces/Shop.html","title":"interface - Shop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Shop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shop.ts\n        \n\n            \n                Description\n            \n            \n                interface of the shop\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adress\n                                \n                                \n                                        cif\n                                \n                                \n                                        id\n                                \n                                \n                                        image\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        market\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adress\n                                    \n                                \n                                \n                                    \n                                        adress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    address of shop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cif\n                                    \n                                \n                                \n                                    \n                                        cif:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    cif of shop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id of shop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    image of shop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    latitude of shop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    longitude of shop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        market\n                                    \n                                \n                                \n                                    \n                                        market:         Market[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Market[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    marlets that belong it  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of shop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    phone number of shop \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Market } from './market';\n/**\n * interface of the shop\n */\nexport interface Shop {\n  /** id of shop */\n  id: number;\n  /** name of shop */\n  name: string;\n  /** cif of shop */\n  cif: string;\n  /** address of shop */\n  adress: string;\n  /** latitude of shop */\n  latitude: number;\n  /** longitude of shop */\n  longitude: number;\n  /** image of shop */\n  image: string;\n  /** phone number of shop */\n  phone: string;\n  /** marlets that belong it  */\n  market: Market[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShopsComponent.html":{"url":"components/ShopsComponent.html","title":"component - ShopsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShopsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/shops/shops.component.ts\n\n\n    \n        Description\n    \n    \n        define component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shops\n            \n\n            \n                styleUrls\n                ./shops.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shops.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                idMarket\n                            \n                            \n                                    Public\n                                shops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getShops\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNavigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(publicService: PublicDataService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/shops/shops.component.ts:20\n                            \n                        \n\n                \n                    \n                            constructor(\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publicService\n                                                  \n                                                        \n                                                                        PublicDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the is a service that handles our api request\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                will handle navigation to other url\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                will handle the extraction of element id string... from url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getShops\n                        \n                        \n                    \n                \n            \n            \n                \ngetShops()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/shops/shops.component.ts:39\n                \n            \n\n\n            \n                \n                    method to get data from service [Public-data]\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/shops/shops.component.ts:34\n                \n            \n\n\n            \n                \n                    when the app loads \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNavigate\n                        \n                        \n                    \n                \n            \n            \n                \nonNavigate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/shops/shops.component.ts:58\n                \n            \n\n\n            \n                \n                    will navigate to products of the selected shop and will pass the id by url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of product\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            idMarket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/shops/shops.component.ts:20\n                            \n                        \n\n                \n                    \n                        to save id of market \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shops\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Shop[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/shops/shops.component.ts:18\n                            \n                        \n\n                \n                    \n                        where we can save our list of shops \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Shop } from './../../core/models/shop';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PublicDataService } from 'src/app/core/services/public-data.service';\n/**\n * define component\n */\n@Component({\n  selector: 'app-shops',\n  templateUrl: './shops.component.html',\n  styleUrls: ['./shops.component.scss'],\n})\n/**\n * define class\n */\nexport class ShopsComponent {\n  /** where we can save our list of shops */\n  public shops: Shop[] = [];\n  /** to save id of market */\n  public idMarket: string = '';\n  /**\n  constructor(\n   *\n   * @param publicService the is a service that handles our api request\n   * @param route will handle navigation to other url\n   *  @param router  will handle the extraction of element id string... from url\n   */\n  constructor(\n    private publicService: PublicDataService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n  /** when the app loads */\n  ngOnInit(): void {\n    /** on init call this method */\n    this.getShops();\n  }\n  /** method to get data from service [Public-data]*/\n  getShops(): void {\n    this.idMarket = this.route.snapshot.paramMap.get('id') || '';\n    if (this.idMarket) {\n      const id = Number(this.idMarket);\n      this.publicService.getShopsByID(id).subscribe((data) => {\n        this.shops = data;\n      });\n    } else {\n      this.publicService.getShops().subscribe((data) => {\n        this.shops = data;\n      });\n    }\n  }\n\n  /**\n   *  will navigate to products of the selected shop and will pass the id by url\n   * @param id the id of product\n   */\n\n  onNavigate(id: number) {\n    if (this.idMarket) {\n      this.router.navigateByUrl(this.router.url + '/products');\n    } else {\n      this.router.navigateByUrl(this.router.url + '/' + id + '/products');\n    }\n  }\n}\n\n    \n\n    \n         Shops \n \n\n\t\n    \n\t\tGuigui Shop\n\t\n\n8\" #paginator\n[length]=\"shops?.data?.length\"\n[pageIndex]=\"0\"\n[pageSize]=\"10\"\n[pageSizeOptions]=\"[5, 10, 20]\"\n\n>\n\n -->\n\n\n\n Shops \n\n\n \n   \n   {{shop.name}}\n \n\n\n\n8\" #paginator\n  [length]=\"shops?.length\"\n  [pageIndex]=\"0\"\n  [pageSize]=\"10\"\n  [pageSizeOptions]=\"[5, 10, 20]\">\n  \n\n    \n\n    \n                \n                    ./shops.component.scss\n                \n                \n.mat-paginator {\n  background-color: #F9B826;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Shops  \t    \t\tGuigui Shop\t8\" #paginator[length]=\"shops?.data?.length\"[pageIndex]=\"0\"[pageSize]=\"10\"[pageSizeOptions]=\"[5, 10, 20]\"> --> Shops        {{shop.name}} 8\" #paginator  [length]=\"shops?.length\"  [pageIndex]=\"0\"  [pageSize]=\"10\"  [pageSizeOptions]=\"[5, 10, 20]\">  '\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShopsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidBarComponent.html":{"url":"components/SidBarComponent.html","title":"component - SidBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sid-bar/sid-bar.component.ts\n\n\n    \n        Description\n    \n    \n        decalration of this component \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sid-bar\n            \n\n            \n                styleUrls\n                ./sid-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sid-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                basketItemsLength\n                            \n                            \n                                    Public\n                                enabled\n                            \n                            \n                                isHandset$\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getBasketLength\n                            \n                            \n                                goBack\n                            \n                            \n                                logOut\n                            \n                            \n                                navigateTo\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, router: Router, user: UserService, publicData: PublicDataService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sid-bar/sid-bar.component.ts:31\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                handle the change of screen size\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                handles the navigation\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                user service\n\n                                                        \n                                                \n                                                \n                                                        publicData\n                                                  \n                                                        \n                                                                        PublicDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                publi data service\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                handl the location like reload website\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPermission\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPermission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:58\n                \n            \n\n\n            \n                \n                    this will check if a user is connected or no and will assign a boolean to the variable enabled \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBasketLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetBasketLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:81\n                \n            \n\n\n            \n                \n                    will assign a number to basketItemslenght \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:93\n                \n            \n\n\n            \n                \n                    goback to previous page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:75\n                \n            \n\n\n            \n                \n                    will delete all user information from localstorage nd will call a end point api to disable the currrent token \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:89\n                \n            \n\n\n            \n                \n                    will navigate to baskets page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:50\n                \n            \n\n\n            \n                \n                    when the app loads will call those methods  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            basketItemsLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:31\n                            \n                        \n\n                \n                    \n                        to show the number of items in basket  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:29\n                            \n                        \n\n                \n                    \n                        to hide elements from no logged in users \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:22\n                            \n                        \n\n                \n                    \n                        handles the changement of the screen size \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:20\n                            \n                        \n\n                \n                    \n                        whaere to save name  of user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:18\n                            \n                        \n\n                \n                    \n                        where to save access token \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sid-bar/sid-bar.component.ts:43\n                            \n                        \n\n                \n                    \n                        user service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { PublicDataService } from 'src/app/core/services/public-data.service';\nimport { UserService } from './../../core/services/user.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Location } from '@angular/common';\n/** decalration of this component */\n@Component({\n  selector: 'app-sid-bar',\n  templateUrl: './sid-bar.component.html',\n  styleUrls: ['./sid-bar.component.scss'],\n})\n/** class */\nexport class SidBarComponent implements OnInit {\n  /** where to save access token */\n  public token: string = '';\n  /** whaere to save name  of user*/\n  public name: string = '';\n  /** handles the changement of the screen size */\n  isHandset$: Observable = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n  /** to hide elements from no logged in users */\n  public enabled = false;\n  /** to show the number of items in basket  */\n  public basketItemsLength = 0;\n  /**\n   * constructor\n   * @param breakpointObserver handle the change of screen size\n   * @param router handles the navigation\n   * @param user user service\n   * @param publicData publi data service\n   * @param location handl the location like reload website\n   */\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private router: Router,\n    public user: UserService,\n    private publicData: PublicDataService,\n    private location: Location\n  ) {\n    this.name = localStorage.getItem('name') || '';\n  }\n  /** when the app loads will call those methods  */\n  ngOnInit(): void {\n    /** method of checking user */\n    this.checkPermission();\n    /** methods of getting items number in basket */\n    this.getBasketLength();\n  }\n\n  /** this will check if a user is connected or no and will assign a boolean to the variable enabled */\n  checkPermission() {\n    let user: any;\n    this.token = localStorage.getItem('token') || '';\n    if (!this.token) {\n      this.enabled = false;\n    } else {\n      this.user.checkLoggedIn(this.token).subscribe((res) => {\n        user = res;\n        if (user.id > 0) {\n          this.enabled = true;\n        } else {\n          this.enabled = false;\n        }\n      });\n    }\n  }\n  /** will delete all user information from localstorage nd will call a end point api to disable the currrent token */\n  logOut() {\n    this.user.putLogOut().subscribe((res) => {\n      localStorage.clear();\n    });\n  }\n  /** will assign a number to basketItemslenght */\n  getBasketLength() {\n    let basketItems: any;\n    this.publicData.getBaskets().subscribe((res) => {\n      basketItems = res;\n      this.basketItemsLength = basketItems.length;\n    });\n  }\n  /** will navigate to baskets page */\n  navigateTo() {\n    this.router.navigateByUrl('/baskets');\n  }\n  /** goback to previous page */\n  goBack() {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n  \n    Alavora\n    \n      \n        home Home\n      \n        shop_two Markets\n      \n        store Shops\n      \n        shopping_basket Basket\n\n      \n         person_pin {{ name }}\n\n      \n        power_settings_new Logout\n      \n    \n  \n  \n    \n      \n        menu\n      \n      Client App\n    \n\n    \n      \n        \n      \n       -->\n\n      \n    \n  \n\n\n\n  \n    menu\n  \n\n  \n    >\n    home\n  \n\n  \n    keyboard_backspace\n  \n  \n    shopping_cart\n  \n\n\n    \n\n    \n                \n                    ./sid-bar.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n.downLogout {\n  //margin-top: 195%;\n  align-items: flex-end;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.mat-toolbar {\n  background-color: #649c9d;\n}\n\n.sidenav {\n  background-color: #f9b826;\n}\nmat-sidenav-content {\n  background-color: #649c9d;\n}\n.btnavbar {\n  background-color: #f9b826;\n}\n\n.right {\n  display: flex;\n}\n\n.shopping:hover {\n  cursor: pointer;\n}\n.tbl {\n  background-color: #f9b826;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Alavora                  home Home              shop_two Markets              store Shops              shopping_basket Basket               person_pin {{ name }}              power_settings_new Logout                                menu            Client App                                   -->                  menu        >    home        keyboard_backspace        shopping_cart  '\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Unit.html":{"url":"interfaces/Unit.html","title":"interface - Unit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Unit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/unit.ts\n        \n\n            \n                Description\n            \n            \n                interface of the unit \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        price\n                                \n                                \n                                        symbol\n                                \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id of unit \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of unit \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    price  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    symbol \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    viewvalue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Unit {\n  /** id of unit */\n  id: string;\n  /** name of unit */\n  name: string;\n  /** price  */\n  price: number;\n  /** symbol */\n  symbol: string;\n  /** value */\n  value: string;\n  /** viewvalue */\n  viewValue: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.ts\n        \n\n            \n                Description\n            \n            \n                interface of the User \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adress\n                                \n                                \n                                        created_at\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                                \n                                        token\n                                \n                                \n                                        updated_at\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adress\n                                    \n                                \n                                \n                                    \n                                        adress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    adress of user  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    created_at  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    email number of user  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id of user  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    latitude of user  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    longitude number of user  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name number of user  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    phone number of user  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token of session  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    updated_at  \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  /** phone number of user  */\n  phone: string;\n  /** name number of user  */\n  name: string;\n  /** latitude of user  */\n  latitude: string;\n  /** longitude number of user  */\n  longitude: string;\n  /** email number of user  */\n  email: string;\n  /** token of session  */\n  token: string;\n  /**  id of user  */\n  id: number;\n  /** adress of user  */\n  adress: string;\n  /** created_at  */\n  created_at: string;\n  /** updated_at  */\n  updated_at: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/user.component.ts\n\n\n    \n        Description\n    \n    \n        define the component and its template file and style file \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user\n            \n\n            \n                styleUrls\n                ./user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                adress\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                hide\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                phone\n                            \n                            \n                                    Public\n                                repeat\n                            \n                            \n                                userUpdate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openOkDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialog: MatDialog, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.component.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                formbuilder\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                dialog\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                user service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user.component.ts:98\n                \n            \n\n\n            \n                \n                    get the data from localstorage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user.component.ts:55\n                \n            \n\n\n            \n                \n                    triggered when app loads  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user.component.ts:61\n                \n            \n\n\n            \n                \n                    when the user clisks on update will call this method to update profile information. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openOkDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenOkDialog(title: string, content: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user.component.ts:109\n                \n            \n\n\n            \n                \n                    opens new dialog of type ok\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        set the title of dialog\n\n                                    \n                                \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        set the content of dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            adress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:23\n                            \n                        \n\n                \n                    \n                        define the adress of user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:34\n                            \n                        \n\n                \n                    \n                        dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:15\n                            \n                        \n\n                \n                    \n                        define the email of user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:38\n                            \n                        \n\n                \n                    \n                        controls the visibility of password \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:17\n                            \n                        \n\n                \n                    \n                        define the name of user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:19\n                            \n                        \n\n                \n                    \n                        define the password of user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:25\n                            \n                        \n\n                \n                    \n                        define the phone number \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repeat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:21\n                            \n                        \n\n                \n                    \n                        define the repeat of password \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userUpdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    email: [\n      null,\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n      ]),\n    ],\n    name: [null, Validators.required],\n    password: [''],\n    repeat: [''],\n    adress: [null, Validators.required],\n    phone: [null, Validators.required],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:40\n                            \n                        \n\n                \n                    \n                        form control of  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OkdialogComponent } from 'src/app/shared/dialogs/okdialog/okdialog.component';\nimport { UserService } from '../core/services/user.service';\n/** define the component and its template file and style file */\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss'],\n})\n/** define class */\nexport class UserComponent implements OnInit {\n  /** define the email of user */\n  public email: string = '';\n  /** define the name of user */\n  public name: string = '';\n  /** define the password of user */\n  public password: string = '';\n  /** define the repeat of password */\n  public repeat: string = '';\n  /** define the adress of user */\n  public adress: string = '';\n  /** define the phone number */\n  public phone: string = '';\n  /**\n   * constructor\n   * @param fb formbuilder\n   * @param dialog  dialog\n   * @param userService  user service\n   */\n  constructor(\n    private fb: FormBuilder,\n    public dialog: MatDialog,\n    private userService: UserService\n  ) {}\n  /** controls the visibility of password */\n  hide = true;\n  /** form control of  */\n  userUpdate = this.fb.group({\n    email: [\n      null,\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n      ]),\n    ],\n    name: [null, Validators.required],\n    password: [''],\n    repeat: [''],\n    adress: [null, Validators.required],\n    phone: [null, Validators.required],\n  });\n  /** triggered when app loads  */\n  ngOnInit(): void {\n    this.getData();\n\n    //  this.userUpdate.setValue({email: 'sdad', name: 'sfdfsdf', password:'adasda', adress: 'dsfadsfdaf', phone:'asdasf'})\n  }\n  /** when the user clisks on update will call this method to update profile information. */\n  onSubmit() {\n    this.password = this.userUpdate.get('password')?.value;\n    this.repeat = this.userUpdate.get('repeat')?.value;\n    this.email = this.userUpdate.get('email')?.value;\n    this.adress = this.userUpdate.get('adress')?.value;\n    if (this.password !== this.repeat) {\n      this.openOkDialog('Error', 'Your have to re-enter the password!');\n    } else {\n      /** this will change profile and after will upgrade profile in local storage*/\n      if (this.name && this.email && this.adress) {\n        this.userService\n          .postProfile(this.name, this.email, this.adress, this.password)\n          .subscribe(\n            (res) => {\n              this.openOkDialog('Success', 'You have updated your profile!');\n              this.userService.getUserdata().subscribe((res) => {\n                localStorage.setItem('name', res.name);\n                localStorage.setItem('adress', res.adress);\n                localStorage.setItem('created_at', res.created_at);\n                localStorage.setItem('email', res.email);\n                localStorage.setItem('id', String(res.id));\n                localStorage.setItem('latitude', res.latitude);\n                localStorage.setItem('longitude', res.longitude);\n                localStorage.setItem('phone', res.phone);\n                localStorage.setItem('updated_at', res.updated_at);\n              });\n            },\n            (error) => {}\n          );\n      } else {\n        this.openOkDialog('Error', 'You have to fill all the requird camps!');\n      }\n    }\n  }\n  /**\n   * get the data from localstorage\n   */\n  getData() {\n    this.name = localStorage.getItem('name') || '';\n    this.email = localStorage.getItem('email') || '';\n    this.adress = localStorage.getItem('adress') || '';\n    this.phone = localStorage.getItem('phone') || '';\n  }\n  /**\n   * opens new dialog of type ok\n   * @param title set the title of dialog\n   * @param content set the content of dialog\n   */\n  openOkDialog(title: string, content: string) {\n    let dialogRef = this.dialog.open(OkdialogComponent);\n    dialogRef.componentInstance.title = title;\n    dialogRef.componentInstance.content = content;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n User Update\n\n\n\n\n  \n    Name\n    \n  \n  \n    Email\n    \n  \n  \n    Password\n    \n    \n      {{hide ? 'visibility_off' : 'visibility'}}\n    \n  \n\n  \n    Password\n    \n    \n      {{hide ? 'visibility_off' : 'visibility'}}\n    \n  \n\n  \n    Adress\n    \n  \n\n\n\n\n  Save\n\n\n\n\n\n    \n\n    \n                \n                    ./user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   User Update      Name            Email            Password              {{hide ? \\'visibility_off\\' : \\'visibility\\'}}            Password              {{hide ? \\'visibility_off\\' : \\'visibility\\'}}            Adress        Save'\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/user.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Injectable \n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                            \n                                canDeactivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, user: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/user.guard.ts:28\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                receive the router path\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                inject user service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/user.guard.ts:41\n                \n            \n\n\n            \n                \n                    returns true of false of status of user if is connetced or no\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        router of the current component handled by angular\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        internal component of angular routes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/user.guard.ts:81\n                \n            \n\n\n            \n                \n                    hanldes the guards of lazy landing\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    childRoute\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        internal tool of angular used\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        internal method of angular\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        observable boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canDeactivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: unknown, currentRoute: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState?: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/user.guard.ts:99\n                \n            \n\n\n            \n                \n                    return deactive stats¡us\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        current component\n\n                                    \n                                \n                                \n                                    currentRoute\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        current route\n\n                                    \n                                \n                                \n                                    currentState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        current state\n\n                                    \n                                \n                                \n                                    nextState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        next state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        observable boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route, segments: UrlSegment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/user.guard.ts:120\n                \n            \n\n\n            \n                \n                    status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        current route or wanted route\n\n                                    \n                                \n                                \n                                    segments\n                                    \n                                            UrlSegment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        internal var of angular\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        observable boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { UserService } from './../core/services/user.service';\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanDeactivate,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n  UrlSegment,\n  UrlTree,\n} from '@angular/router';\nimport { observable, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { IntercepterService } from '../core/services/intercepter.service';\n//import { UserService } from '../core/services/user.service';\n/** Injectable */\n@Injectable({\n  providedIn: 'root',\n})\n/**define the class */\nexport class UserGuard\n  implements CanActivate, CanActivateChild, CanDeactivate, CanLoad\n{\n  /** token when we can store the recovered token from localstorage */\n  token!: string;\n  /**\n   * constructor\n   * @param router receive the router path\n   * @param user inject user service\n   */\n  constructor(private router: Router, private user: UserService) {}\n  /**\n   * returns true of false of status of user if is connetced or no\n   * @param route router of the current component handled by angular\n   * @param state internal component of angular routes\n   * @returns\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    this.token = localStorage.getItem('token') || '';\n\n    if (!this.token) {\n      this.router.navigateByUrl('/login');\n      return false;\n    } else {\n      return this.user.checkLoggedIn(this.token).pipe(\n        catchError((error) => {\n          if (error.error instanceof ErrorEvent) {\n          } else {\n          }\n          return observable.toString();\n        }),\n        map((res: any) => {\n          if (res['id'] > 0) {\n            return true;\n          } else {\n            console.clear();\n            this.router.navigateByUrl('/login');\n\n            return false;\n          }\n        })\n      );\n    }\n  }\n  /**\n   * hanldes the guards of lazy landing\n   * @param childRoute internal tool of angular used\n   * @param state internal method of angular\n   * @returns observable boolean\n   */\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return false;\n  }\n  /**\n   * return deactive stats¡us\n   * @param component current component\n   * @param currentRoute current route\n   * @param currentState current state\n   * @param nextState next state\n   * @returns observable boolean\n   */\n  canDeactivate(\n    component: unknown,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    this.token = localStorage.getItem('token') || '';\n    let response = true;\n\n    return response;\n  }\n  /**\n   * status\n   * @param route current route or wanted route\n   * @param segments internal var of angular\n   * @returns observable boolean\n   */\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserLoggedGuard.html":{"url":"guards/UserLoggedGuard.html","title":"guard - UserLoggedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserLoggedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/user-logged.guard.ts\n            \n\n                \n                Description\n                \n                \n                    injectable \n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, user: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/user-logged.guard.ts:19\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                receive the router path\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                inject user service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/user-logged.guard.ts:32\n                \n            \n\n\n            \n                \n                    check if user logged out or no\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        router that will be sended by angular routes\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        angular internal component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { UserService } from './../core/services/user.service';\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n/** injectable */\n@Injectable({\n  providedIn: 'root',\n})\n/** class of user logged */\nexport class UserLoggedGuard implements CanActivate {\n  /** token when we can store the recovered token from localstorage */\n  token!: string;\n  /**\n   * constructor\n   * @param router receive the router path\n   * @param user inject user service\n   */\n  constructor(private router: Router, private user: UserService) {}\n  /**\n   * check if user logged out or no\n   * @param route router that will be sended by angular routes\n   * @param state angular internal component\n   * @returns boolean\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    this.token = localStorage.getItem('token') || '';\n\n    if (!this.token) {\n      return true;\n    } else {\n      return this.user.checkLoggedIn(this.token).pipe(\n        map((res: any) => {\n          if (res['id'] > 0) {\n            this.router.navigateByUrl('/');\n\n            return false;\n          } else {\n            return true;\n          }\n        })\n      );\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                the injectable of this service means that it will use any other extensions from our app (in our case is an intercepter) \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoggedIn\n                            \n                            \n                                getUserdata\n                            \n                            \n                                login\n                            \n                            \n                                postProfile\n                            \n                            \n                                postUser\n                            \n                            \n                                putLogOut\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                http to make http requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \ncheckLoggedIn(jwt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:67\n                \n            \n\n\n            \n                \n                    to check if the user is connetced and the token is valid\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jwt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this param contains the token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        return true or false as string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserdata\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserdata()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:89\n                \n            \n\n\n            \n                \n                    get user data name, adress ... and later will save them in local storage\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obervable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:35\n                \n            \n\n\n            \n                \n                    this will send a post request to web server to get back and save the access token in cookies or in lcoalstorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email of user\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProfile\n                        \n                        \n                    \n                \n            \n            \n                \npostProfile(name: string, email: string, address: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:103\n                \n            \n\n\n            \n                \n                    to update the user profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the new user\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        adress\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        password not required\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postUser\n                        \n                        \n                    \n                \n            \n            \n                \npostUser(name: string, email: string, password: string, address: string, phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:123\n                \n            \n\n\n            \n                \n                    to register a new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        password\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        adress\n\n                                    \n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        phone\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putLogOut\n                        \n                        \n                    \n                \n            \n            \n                \nputLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:138\n                \n            \n\n\n            \n                \n                    to logout from web service\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        observable response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(name: string, lastname: string, username: string, email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:49\n                \n            \n\n\n            \n                \n                    this will post new user to web service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        variable obervable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.API_URL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:27\n                            \n                        \n\n                \n                    \n                        gets the api from current enviroment \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { environment } from './../../../environments/environment';\nimport { User } from './../models/user';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { observable, Observable } from 'rxjs';\n/** interface of login */\nexport interface login {\n  /** acess token */\n  access_token: string;\n}\n/** the injectable of this service means that it will use any other extensions from our app (in our case is an intercepter) */\n@Injectable({\n  /** provider  */\n  providedIn: 'root',\n})\n/**\n * define the class\n */\nexport class UserService {\n  /**\n   * Constructor\n   * @param http http to make http requests\n   */\n  constructor(private http: HttpClient) {}\n  /** gets the api from current enviroment */\n  private url = environment.API_URL;\n\n  /**\n   * this will send a post request to web server to get back and save the access token in cookies or in lcoalstorage\n   * @param email email of user\n   * @param password password\n   * @returns\n   */\n  login(email: string, password: string) {\n    /** this set api endpoint */\n    const url = this.url + 'login';\n    return this.http.post(url, { email, password }).pipe(\n      catchError((error) => {\n        return observable.toString();\n      }),\n      tap((res) => {})\n    );\n  }\n\n  /** this will post new user to web service\n   * @returns variable obervable\n   *  */\n  register(\n    name: string,\n    lastname: string,\n    username: string,\n    email: string,\n    password: string\n  ) {\n    const url = 'end';\n    return this.http\n      .post(url, { name, lastname, username, email, password })\n      .pipe(tap((res) => {}));\n  }\n\n  /**\n   * to check if the user is connetced and the token is valid\n   * @param jwt this param contains the token\n   * @returns  return true or false as string\n   */\n  checkLoggedIn(jwt: string) {\n    /** this set api endpoint */\n    const url = this.url + 'me';\n    return this.http.get(url).pipe(\n      catchError((error) => {\n        if (error.error instanceof ErrorEvent) {\n        } else {\n        }\n        return observable.toString();\n      }),\n      tap(\n        (res) => {},\n        (error) => {\n          console.clear();\n        }\n      )\n    );\n  }\n  /**\n   * get user data name, adress ... and later will save them in local storage\n   * @returns  obervable\n   */\n  getUserdata(): Observable {\n    /** this set api endpoint */\n    const url = this.url + +'me';\n\n    return this.http.get(url).pipe(map((result: any) => result));\n  }\n  /**\n   * to update the user profile\n   * @param name name of the new user\n   * @param email email\n   * @param address adress\n   * @param password password not required\n   * @returns the response\n   */\n  postProfile(name: string, email: string, address: string, password: string) {\n    /** this set api endpoint */\n    const url = this.url + 'me/update';\n    if (password) {\n      return this.http\n        .post(url, { name, email, address, password })\n        .pipe();\n    } else {\n      return this.http.post(url, { name, email, address }).pipe();\n    }\n  }\n  /**\n   * to register a new user\n   * @param name name\n   * @param email email\n   * @param password password\n   * @param address adress\n   * @param phone phone\n   * @returns response\n   */\n  postUser(\n    name: string,\n    email: string,\n    password: string,\n    address: string,\n    phone: string\n  ) {\n    /** this set api endpoint */\n    const url = this.url + 'register';\n    return this.http.post(url, { name, email, address, password, phone });\n  }\n  /**\n   *  to logout from web service\n   * @returns observable response\n   */\n  putLogOut() {\n    /** this set api endpoint */\n    const url = this.url + 'logout';\n    /** set bearer token */\n    const token = 'Bearer' + localStorage.getItem('token');\n    return this.http.put(url, { token }).pipe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/commentDialog.html":{"url":"components/commentDialog.html","title":"component - commentDialog","body":"\n                   \n\n\n\n\n\n  Components\n  commentDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialogs/comment-dialog/comment-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        define component and its file of style and template\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-okdialog\n            \n\n            \n                styleUrls\n                ./comment-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comment-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialogs/comment-dialog/comment-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                define the dialog ref to handle it\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to return\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialogs/comment-dialog/comment-dialog.component.ts:28\n                \n            \n\n\n            \n                \n                    when click ok then return the entered text \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/dialogs/comment-dialog/comment-dialog.component.ts:25\n                            \n                        \n\n                \n                    \n                        data to return\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/dialogs/comment-dialog/comment-dialog.component.ts:24\n                            \n                        \n\n                \n                    \n                        define the dialog ref to handle it\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { DialogData } from 'src/app/home/products/products.component';\n/**\n * define component and its file of style and template\n */\n@Component({\n  selector: 'app-okdialog',\n  templateUrl: './comment-dialog.component.html',\n  styleUrls: ['./comment-dialog.component.scss'],\n})\n/** define the class  */\nexport class commentDialog {\n  /**\n   * constructor\n   * @param dialogRef define the dialog ref to handle it\n   * @param data data to return\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n  /** when click ok then return the entered text */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Add A comment to your Purchase from\n  \n    Comment\n    \n  \n\n\n  Cancel\n  Ok\n\n\n    \n\n    \n                \n                    ./comment-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add A comment to your Purchase from      Comment        Cancel  Ok'\n    var COMPONENTS = [{'name': 'AddproductComponent', 'selector': 'app-addproduct'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketsComponent', 'selector': 'app-baskets'},{'name': 'commentDialog', 'selector': 'app-okdialog'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarketsComponent', 'selector': 'app-markets'},{'name': 'OkdialogComponent', 'selector': 'app-okdialog'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShopsComponent', 'selector': 'app-shops'},{'name': 'SidBarComponent', 'selector': 'app-sid-bar'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'commentDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/models/basket.ts\n            \n            interface\n            Basket\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/models/baskets.ts\n            \n            interface\n            Baskets\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/models/market.ts\n            \n            interface\n            Market\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/models/product.ts\n            \n            interface\n            Product\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/shop.ts\n            \n            interface\n            Shop\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/models/unit.ts\n            \n            interface\n            Unit\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.ts\n            \n            interface\n            User\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/services/intercepter.service.ts\n            \n            injectable\n            IntercepterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/services/public-data.service.ts\n            \n            injectable\n            PublicDataService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            interface\n            login\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/guards/user-logged.guard.ts\n            \n            guard\n            UserLoggedGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/home/baskets/baskets.component.ts\n            \n            component\n            BasketsComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/home/baskets/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/home/markets/markets.component.ts\n            \n            component\n            MarketsComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/home/products/products.component.ts\n            \n            component\n            ProductsComponent\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                src/app/home/products/products.component.ts\n            \n            interface\n            DialogData\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/home/shops/shops.component.ts\n            \n            component\n            ShopsComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/login/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/dialogs/addproduct/addproduct.component.ts\n            \n            component\n            AddproductComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/dialogs/addproduct/addproduct.component.ts\n            \n            interface\n            DialogData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/dialogs/comment-dialog/comment-dialog.component.ts\n            \n            component\n            commentDialog\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/dialogs/okdialog/okdialog.component.ts\n            \n            component\n            OkdialogComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/sid-bar/sid-bar.component.ts\n            \n            component\n            SidBarComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.0.0\n        \n            @angular/cdk : ^11.2.12\n        \n            @angular/common : ~12.0.0\n        \n            @angular/compiler : ~12.0.0\n        \n            @angular/core : ~12.0.0\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ~12.0.0\n        \n            @angular/material : ^11.2.12\n        \n            @angular/platform-browser : ~12.0.0\n        \n            @angular/platform-browser-dynamic : ~12.0.0\n        \n            @angular/router : ~12.0.0\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            ngx-bottom-nav : ^11.0.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClients\nThis project was generated with Angular CLI version 11.2.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/login.html":{"url":"interfaces/login.html","title":"interface - login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                interface of login \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    acess token \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { environment } from './../../../environments/environment';\nimport { User } from './../models/user';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { observable, Observable } from 'rxjs';\n/** interface of login */\nexport interface login {\n  /** acess token */\n  access_token: string;\n}\n/** the injectable of this service means that it will use any other extensions from our app (in our case is an intercepter) */\n@Injectable({\n  /** provider  */\n  providedIn: 'root',\n})\n/**\n * define the class\n */\nexport class UserService {\n  /**\n   * Constructor\n   * @param http http to make http requests\n   */\n  constructor(private http: HttpClient) {}\n  /** gets the api from current enviroment */\n  private url = environment.API_URL;\n\n  /**\n   * this will send a post request to web server to get back and save the access token in cookies or in lcoalstorage\n   * @param email email of user\n   * @param password password\n   * @returns\n   */\n  login(email: string, password: string) {\n    /** this set api endpoint */\n    const url = this.url + 'login';\n    return this.http.post(url, { email, password }).pipe(\n      catchError((error) => {\n        return observable.toString();\n      }),\n      tap((res) => {})\n    );\n  }\n\n  /** this will post new user to web service\n   * @returns variable obervable\n   *  */\n  register(\n    name: string,\n    lastname: string,\n    username: string,\n    email: string,\n    password: string\n  ) {\n    const url = 'end';\n    return this.http\n      .post(url, { name, lastname, username, email, password })\n      .pipe(tap((res) => {}));\n  }\n\n  /**\n   * to check if the user is connetced and the token is valid\n   * @param jwt this param contains the token\n   * @returns  return true or false as string\n   */\n  checkLoggedIn(jwt: string) {\n    /** this set api endpoint */\n    const url = this.url + 'me';\n    return this.http.get(url).pipe(\n      catchError((error) => {\n        if (error.error instanceof ErrorEvent) {\n        } else {\n        }\n        return observable.toString();\n      }),\n      tap(\n        (res) => {},\n        (error) => {\n          console.clear();\n        }\n      )\n    );\n  }\n  /**\n   * get user data name, adress ... and later will save them in local storage\n   * @returns  obervable\n   */\n  getUserdata(): Observable {\n    /** this set api endpoint */\n    const url = this.url + +'me';\n\n    return this.http.get(url).pipe(map((result: any) => result));\n  }\n  /**\n   * to update the user profile\n   * @param name name of the new user\n   * @param email email\n   * @param address adress\n   * @param password password not required\n   * @returns the response\n   */\n  postProfile(name: string, email: string, address: string, password: string) {\n    /** this set api endpoint */\n    const url = this.url + 'me/update';\n    if (password) {\n      return this.http\n        .post(url, { name, email, address, password })\n        .pipe();\n    } else {\n      return this.http.post(url, { name, email, address }).pipe();\n    }\n  }\n  /**\n   * to register a new user\n   * @param name name\n   * @param email email\n   * @param password password\n   * @param address adress\n   * @param phone phone\n   * @returns response\n   */\n  postUser(\n    name: string,\n    email: string,\n    password: string,\n    address: string,\n    phone: string\n  ) {\n    /** this set api endpoint */\n    const url = this.url + 'register';\n    return this.http.post(url, { name, email, address, password, phone });\n  }\n  /**\n   *  to logout from web service\n   * @returns observable response\n   */\n  putLogOut() {\n    /** this set api endpoint */\n    const url = this.url + 'logout';\n    /** set bearer token */\n    const token = 'Bearer' + localStorage.getItem('token');\n    return this.http.put(url, { token }).pipe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nAddproductComponent\n\nAddproductComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddproductComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nOkdialogComponent\n\nOkdialogComponent\n\nAppModule -->\n\nOkdialogComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSidBarComponent\n\nSidBarComponent\n\nAppModule -->\n\nSidBarComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\ncommentDialog\n\ncommentDialog\n\nAppModule -->\n\ncommentDialog->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nIntercepterService\n\nIntercepterService\n\nAppModule -->\n\nIntercepterService->AppModule\n\n\n\n\n\nBasketsComponent\n\nBasketsComponent\n\nHomeModule -->\n\nBasketsComponent->HomeModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nHomeModule -->\n\nDetailsComponent->HomeModule\n\n\n\n\n\nMarketsComponent\n\nMarketsComponent\n\nHomeModule -->\n\nMarketsComponent->HomeModule\n\n\n\n\n\nProductsComponent\n\nProductsComponent\n\nHomeModule -->\n\nProductsComponent->HomeModule\n\n\n\n\n\nShopsComponent\n\nShopsComponent\n\nHomeModule -->\n\nShopsComponent->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /** this to define the production  */\n  production: true,\n  /** here the Api url */\n  API_URL: 'https://alavora.cat/api',\n}\n                        \n                    \n\n                \n                    \n                        this will define the global api\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /** this to define the production  */\n\n  production: false,\n  /** here the Api url */\n\n  API_URL: 'https://alavora.cat/api/',\n}\n                        \n                    \n\n                \n                    \n                        this will define the global api\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
